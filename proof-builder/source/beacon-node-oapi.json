{
	"openapi": "3.0.3",
	"info": {
		"title": "Eth Beacon Node API",
		"description": "API specification for the beacon node, which enables users to query and participate in Ethereum 2.0 phase 0 beacon chain.\n\nAll requests by default send and receive JSON, and as such should have either or both of the \"Content-Type: application/json\"\nand \"Accept: application/json\" headers.  In addition, some requests can return data in the SSZ format.  To indicate that SSZ\ndata is required in response to a request the header \"Accept: application/octet-stream\" should be sent.  Note that only a subset\nof requests can respond with data in SSZ format; these are noted in each individual request.\n\nAPI endpoints are individually versioned.  As such, there is no direct relationship between all v1 endpoints, all v2 endpoints,\n_etc._ and no such relationship should be inferred.  All JSON responses return the requested data under a `data` key in the top\nlevel of their response.  Additional metadata may or may not be present in other keys at the top level of the response, dependent\non the endpoint.  The rules that require an increase in version number are as follows:\n\n  - no field that is listed in an endpoint shall be removed without an increase in the version number\n  - no field that is listed in an endpoint shall be altered in terms of format (_e.g._ from a string to an array) without an\n    increase in the version number\n\nNote that it is possible for a field to be added to an endpoint's data or metadata without an increase in the version number.\n",
		"version": "v2.4.0 - Ethereum Proof-of-Stake Consensus Specification v1.3.0",
		"contact": {
			"name": "Ethereum Github",
			"url": "https://github.com/ethereum/beacon-apis/issues"
		},
		"license": {
			"name": "CC0-1.0",
			"url": "https://creativecommons.org/publicdomain/zero/1.0/"
		}
	},
	"servers": [
		{
			"url": "{server_url}",
			"variables": {
				"server_url": {
					"description": "Beacon node API url",
					"default": "http://public-mainnet-node.ethereum.org/"
				}
			}
		}
	],
	"tags": [
		{
			"name": "Beacon",
			"description": "Set of endpoints to query beacon chain."
		},
		{
			"name": "Builder",
			"description": "Set of endpoints specific to building blocks."
		},
		{
			"name": "Config",
			"description": "Endpoints to query chain configuration, specification, and fork schedules."
		},
		{
			"name": "Debug",
			"description": "Set of endpoints to debug chain and shouldn't be exposed publicly."
		},
		{
			"name": "Events",
			"description": "Set of endpoints to for event subscription."
		},
		{
			"name": "Node",
			"description": "Endpoints to query node related informations"
		},
		{
			"name": "Validator",
			"description": "Endpoints intended for validator clients"
		},
		{
			"name": "ValidatorRequiredApi",
			"description": "Minimal set of endpoints to enable a working validator implementation.\n\n[Checkout validator flow](./validator-flow.md) to learn how to use this api.\n"
		},
		{
			"name": "Rewards",
			"description": "Endpoints to query rewards and penalties for validators."
		},
		{
			"name": "Experimental",
			"description": "Endpoints that are not stable or fully implemented by each client."
		}
	],
	"paths": {
		"/eth/v1/beacon/genesis": {
			"get": {
				"operationId": "getGenesis",
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"summary": "Retrieve details of the chain's genesis.",
				"description": "Retrieve details of the chain's genesis which can be used to identify chain.",
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"title": "GetGenesisResponse",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"genesis_time": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": "1590832934"
														},
														{
															"description": "The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began."
														}
													]
												},
												"genesis_validators_root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												"genesis_fork_version": {
													"type": "string",
													"format": "hex",
													"description": "a fork version number",
													"example": "0x00000000",
													"pattern": "^0x[a-fA-F0-9]{8}$"
												}
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Chain genesis info is not yet known",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Chain genesis info is not yet known"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/root": {
			"get": {
				"operationId": "getStateRoot",
				"summary": "Get state SSZ HashTreeRoot",
				"description": "Calculates HashTreeRoot for state with given 'stateId'. If stateId is root, same value will be returned.",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateRootResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"root": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														{
															"description": "HashTreeRoot of BeaconState object"
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 404,
									"message": "State not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/fork": {
			"get": {
				"operationId": "getStateFork",
				"summary": "Get Fork object for requested state",
				"description": "Returns [Fork](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object for state with given 'stateId'.",
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateForkResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
											"properties": {
												"previous_version": {
													"type": "string",
													"format": "hex",
													"description": "a fork version number",
													"example": "0x00000000",
													"pattern": "^0x[a-fA-F0-9]{8}$"
												},
												"current_version": {
													"type": "string",
													"format": "hex",
													"description": "a fork version number",
													"example": "0x00000000",
													"pattern": "^0x[a-fA-F0-9]{8}$"
												},
												"epoch": {
													"type": "string",
													"example": "1"
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "State not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/finality_checkpoints": {
			"get": {
				"operationId": "getStateFinalityCheckpoints",
				"summary": "Get state finality checkpoints",
				"description": "Returns finality checkpoints for state with given 'stateId'.\nIn case finality is not yet achieved, checkpoint should return epoch 0 and ZERO_HASH as root.\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateFinalityCheckpointsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"previous_justified": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												},
												"current_justified": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												},
												"finalized": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "State not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/validators": {
			"get": {
				"operationId": "getStateValidators",
				"summary": "Get validators from state",
				"description": "Returns filterable list of validators with their balance, status and index.\n\nInformation will be returned for all indices or public key that match known validators.  If an index or public key does not\nmatch any known validator, no information will be returned but this will not cause an error.  There are no guarantees for the\nreturned data in terms of ordering; both the index and public key are returned for each validator, and can be used to confirm\nfor which inputs a response has been returned.\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "id",
						"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"maxItems": 30,
							"uniqueItems": true,
							"items": {
								"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
								"type": "string"
							}
						}
					},
					{
						"name": "status",
						"description": "[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"allOf": [
									{
										"description": "Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached regular exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached regular exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n",
										"enum": [
											"pending_initialized",
											"pending_queued",
											"active_ongoing",
											"active_exiting",
											"active_slashed",
											"exited_unslashed",
											"exited_slashed",
											"withdrawal_possible",
											"withdrawal_done"
										],
										"example": "active_ongoing"
									},
									{
										"enum": ["active", "pending", "exited", "withdrawal"]
									}
								]
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateValidatorsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of validator in validator registry."
															}
														]
													},
													"balance": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Current validator balance in gwei."
															}
														]
													},
													"status": {
														"description": "Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached regular exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached regular exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n",
														"enum": [
															"pending_initialized",
															"pending_queued",
															"active_ongoing",
															"active_exiting",
															"active_slashed",
															"exited_unslashed",
															"exited_slashed",
															"withdrawal_possible",
															"withdrawal_done"
														],
														"example": "active_ongoing"
													},
													"validator": {
														"type": "object",
														"properties": {
															"pubkey": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{96}$",
																"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
															},
															"withdrawal_credentials": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Root of withdrawal credentials"
																	}
																]
															},
															"effective_balance": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Balance at stake in Gwei."
																	}
																]
															},
															"slashed": {
																"type": "boolean",
																"example": false,
																"description": "Was validator slashed (not longer active)."
															},
															"activation_eligibility_epoch": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "When criteria for activation were met."
																	}
																]
															},
															"activation_epoch": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
																	}
																]
															},
															"exit_epoch": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
																	}
																]
															},
															"withdrawable_epoch": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
																	}
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state or validator ID, or status",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "State not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/validators/{validator_id}": {
			"get": {
				"operationId": "getStateValidator",
				"summary": "Get validator from state by id",
				"description": "Returns validator specified by state and id or public key along with status and balance.",
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "validator_id",
						"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateValidatorResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"index": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"description": "Index of validator in validator registry."
														}
													]
												},
												"balance": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"description": "Current validator balance in gwei."
														}
													]
												},
												"status": {
													"description": "Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached regular exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached regular exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n",
													"enum": [
														"pending_initialized",
														"pending_queued",
														"active_ongoing",
														"active_exiting",
														"active_slashed",
														"exited_unslashed",
														"exited_slashed",
														"withdrawal_possible",
														"withdrawal_done"
													],
													"example": "active_ongoing"
												},
												"validator": {
													"type": "object",
													"properties": {
														"pubkey": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{96}$",
															"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
															"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
														},
														"withdrawal_credentials": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "Root of withdrawal credentials"
																}
															]
														},
														"effective_balance": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Balance at stake in Gwei."
																}
															]
														},
														"slashed": {
															"type": "boolean",
															"example": false,
															"description": "Was validator slashed (not longer active)."
														},
														"activation_eligibility_epoch": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "When criteria for activation were met."
																}
															]
														},
														"activation_epoch": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
																}
															]
														},
														"exit_epoch": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
																}
															]
														},
														"withdrawable_epoch": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
																}
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state or validator ID",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not Found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"StateNotFound": {
										"value": {
											"code": 404,
											"message": "State not found"
										}
									},
									"ValidatorNotFound": {
										"value": {
											"code": 404,
											"message": "Validator not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/validator_balances": {
			"get": {
				"operationId": "getStateValidatorBalances",
				"summary": "Get validator balances from state",
				"description": "Returns filterable list of validators balances.\n\nBalances will be returned for all indices or public key that match known validators.  If an index or public key does not\nmatch any known validator, no balance will be returned but this will not cause an error.  There are no guarantees for the\nreturned data in terms of ordering; the index and is returned for each balance, and can be used to confirm for which inputs a\nresponse has been returned.\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "id",
						"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"maxItems": 30,
							"uniqueItems": true,
							"items": {
								"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
								"type": "string"
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateValidatorBalancesResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of validator in validator registry."
															}
														]
													},
													"balance": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Current validator balance in gwei."
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state or validator ID",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/committees": {
			"get": {
				"operationId": "getEpochCommittees",
				"summary": "Get all committees for a state.",
				"description": "Retrieves the committees for the given state.",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "epoch",
						"description": "Fetch committees for the given epoch.  If not present then the committees for the epoch of the state will be obtained.",
						"in": "query",
						"required": false,
						"allowEmptyValue": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": ""
								}
							]
						}
					},
					{
						"name": "index",
						"description": "Restrict returned values to those matching the supplied committee index.",
						"in": "query",
						"required": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": ""
								}
							]
						}
					},
					{
						"name": "slot",
						"description": "Restrict returned values to those matching the supplied slot.",
						"in": "query",
						"required": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": ""
								}
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetEpochCommitteesResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"description": "Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)",
												"type": "object",
												"properties": {
													"index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Committee index at a slot"
															}
														]
													},
													"slot": {
														"type": "string",
														"example": "1"
													},
													"validators": {
														"type": "array",
														"description": "List of validator indices assigned to this committee",
														"items": {
															"type": "string",
															"example": "1"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID, index, epoch, slot, or combination thereof",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Slot does not belong in epoch"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 404,
									"message": "State not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/sync_committees": {
			"get": {
				"operationId": "getEpochSyncCommittees",
				"summary": "Get sync committees for a state.",
				"description": "Retrieves the sync committees for the given state.",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "epoch",
						"description": "Fetch sync committees for the given epoch.  If not present then the sync committees for the epoch of the state will be obtained.",
						"in": "query",
						"required": false,
						"allowEmptyValue": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": ""
								}
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetEpochSyncCommitteesResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"validators": {
													"allOf": [
														{
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	}
																]
															}
														},
														{
															"description": "all of the validator indices in the current sync committee"
														}
													]
												},
												"validator_aggregates": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"type": "array",
																"items": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		}
																	]
																}
															},
															{
																"description": "Subcommittee slices of the current sync committee"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID or epoch",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Epoch is outside the sync committee period of the state"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 404,
									"message": "State not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/states/{state_id}/randao": {
			"get": {
				"operationId": "getStateRandao",
				"summary": "Get the RANDAO mix for some epoch in a specified state.",
				"description": "Fetch the RANDAO mix for the requested epoch from the state identified by `state_id`.\n\nIf an epoch is not specified then the RANDAO mix for the state's current epoch will be returned.\n\nBy adjusting the `state_id` parameter you can query for any historic value of the RANDAO mix.\nOrdinarily states from the same epoch will mutate the RANDAO mix for that epoch as blocks are\napplied.\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "epoch",
						"description": "Epoch to fetch the RANDAO mix for. Default: state's current epoch.",
						"in": "query",
						"required": false,
						"allowEmptyValue": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": ""
								}
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateRandaoResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"randao": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														{
															"description": "RANDAO mix for requested epoch in state."
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID or epoch",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 400,
												"message": "Epoch is out of range for the `randao_mixes` of the state"
											}
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										}
									]
								},
								"example": {
									"code": 404,
									"message": "State not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/headers": {
			"get": {
				"operationId": "getBlockHeaders",
				"summary": "Get block headers",
				"description": "Retrieves block headers matching given query. By default it will fetch current head slot blocks.",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "slot",
						"in": "query",
						"required": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": ""
								}
							]
						}
					},
					{
						"name": "parent_root",
						"in": "query",
						"required": false,
						"schema": {
							"allOf": [
								{
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								{
									"example": ""
								}
							]
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetBlockHeadersResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"root": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"canonical": {
														"type": "boolean"
													},
													"header": {
														"type": "object",
														"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
														"properties": {
															"message": {
																"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																"allOf": [
																	{
																		"type": "object",
																		"properties": {
																			"slot": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "The slot to which this block corresponds."
																					}
																				]
																			},
																			"proposer_index": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Index of validator in validator registry."
																					}
																				]
																			},
																			"parent_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The signing merkle root of the parent `BeaconBlock`."
																					}
																				]
																			},
																			"state_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																					}
																				]
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"body_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																					}
																				]
																			}
																		}
																	}
																]
															},
															"signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The block ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/headers/{block_id}": {
			"get": {
				"operationId": "getBlockHeader",
				"summary": "Get block header",
				"description": "Retrieves block header for given block id.",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetBlockHeaderResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												"canonical": {
													"type": "boolean"
												},
												"header": {
													"type": "object",
													"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The block ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Block not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Block not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/blinded_blocks": {
			"post": {
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"summary": "Publish a signed block.",
				"operationId": "publishBlindedBlock",
				"description": "Instructs the beacon node to use the components of the `SignedBlindedBeaconBlock` to construct and publish a \n`SignedBeaconBlock` by swapping out the `transactions_root` for the corresponding full list of `transactions`.\nThe beacon node should broadcast a newly constructed `SignedBeaconBlock` to the beacon network,\nto be included in the beacon chain. The beacon node is not required to validate the signed\n`BeaconBlock`, and a successful response (20X) only indicates that the broadcast has been\nsuccessful. The beacon node is expected to integrate the new block into its state, and\ntherefore validate the block internally, however blocks which fail the validation are still\nbroadcast but a different status code is returned (202). Pre-Bellatrix, this endpoint will accept \na `SignedBeaconBlock`.\n",
				"parameters": [
					{
						"in": "header",
						"schema": {
							"enum": ["phase0", "altair", "bellatrix", "capella"],
							"example": "phase0"
						},
						"required": false,
						"name": "Eth-Consensus-Version",
						"description": "Version of the block being submitted, if using SSZ encoding."
					}
				],
				"requestBody": {
					"description": "The `SignedBlindedBeaconBlock` object composed of `BlindedBeaconBlock` object (produced by beacon node) and validator signature.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "object",
										"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"type": "object",
																"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
																"properties": {
																	"randao_reveal": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{192}$",
																				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																			},
																			{
																				"description": "The RanDAO reveal value provided by the validator."
																			}
																		]
																	},
																	"eth1_data": {
																		"type": "object",
																		"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																		"properties": {
																			"deposit_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Root of the deposit tree."
																					}
																				]
																			},
																			"deposit_count": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Total number of deposits."
																					}
																				]
																			},
																			"block_hash": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Ethereum 1.x block hash."
																					}
																				]
																			}
																		}
																	},
																	"graffiti": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"proposer_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																			"properties": {
																				"signed_header_1": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				},
																				"signed_header_2": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	},
																	"attester_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																			"properties": {
																				"attestation_1": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestation_2": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"attestations": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																			"properties": {
																				"aggregation_bits": {
																					"description": "Attester aggregation bits.",
																					"type": "string",
																					"format": "hex",
																					"example": "0x01",
																					"pattern": "^0x[a-fA-F0-9]+$"
																				},
																				"signature": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "BLS aggregate signature."
																						}
																					]
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																					"properties": {
																						"slot": {
																							"type": "string",
																							"example": "1"
																						},
																						"index": {
																							"type": "string",
																							"example": "1"
																						},
																						"beacon_block_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "LMD GHOST vote."
																								}
																							]
																						},
																						"source": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						"target": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"deposits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																			"properties": {
																				"proof": {
																					"type": "array",
																					"description": "Branch in the deposit tree.",
																					"items": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						]
																					},
																					"minItems": 32,
																					"maxItems": 32
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																					"properties": {
																						"pubkey": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{96}$",
																							"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																							"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																						},
																						"withdrawal_credentials": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The withdrawal credentials."
																								}
																							]
																						},
																						"amount": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Amount in Gwei."
																								}
																							]
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "Container self-signature."
																								}
																							]
																						}
																					}
																				}
																			}
																		}
																	},
																	"voluntary_exits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																			"properties": {
																				"message": {
																					"type": "object",
																					"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																					"properties": {
																						"epoch": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Minimum epoch for processing exit."
																								}
																							]
																						},
																						"validator_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of the exiting validator."
																								}
																							]
																						}
																					}
																				},
																				"signature": {
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									{
										"type": "object",
										"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"type": "object",
																"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
																"properties": {
																	"randao_reveal": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{192}$",
																				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																			},
																			{
																				"description": "The RanDAO reveal value provided by the validator."
																			}
																		]
																	},
																	"eth1_data": {
																		"type": "object",
																		"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																		"properties": {
																			"deposit_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Root of the deposit tree."
																					}
																				]
																			},
																			"deposit_count": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Total number of deposits."
																					}
																				]
																			},
																			"block_hash": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Ethereum 1.x block hash."
																					}
																				]
																			}
																		}
																	},
																	"graffiti": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"proposer_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																			"properties": {
																				"signed_header_1": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				},
																				"signed_header_2": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	},
																	"attester_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																			"properties": {
																				"attestation_1": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestation_2": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"attestations": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																			"properties": {
																				"aggregation_bits": {
																					"description": "Attester aggregation bits.",
																					"type": "string",
																					"format": "hex",
																					"example": "0x01",
																					"pattern": "^0x[a-fA-F0-9]+$"
																				},
																				"signature": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "BLS aggregate signature."
																						}
																					]
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																					"properties": {
																						"slot": {
																							"type": "string",
																							"example": "1"
																						},
																						"index": {
																							"type": "string",
																							"example": "1"
																						},
																						"beacon_block_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "LMD GHOST vote."
																								}
																							]
																						},
																						"source": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						"target": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"deposits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																			"properties": {
																				"proof": {
																					"type": "array",
																					"description": "Branch in the deposit tree.",
																					"items": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						]
																					},
																					"minItems": 32,
																					"maxItems": 32
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																					"properties": {
																						"pubkey": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{96}$",
																							"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																							"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																						},
																						"withdrawal_credentials": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The withdrawal credentials."
																								}
																							]
																						},
																						"amount": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Amount in Gwei."
																								}
																							]
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "Container self-signature."
																								}
																							]
																						}
																					}
																				}
																			}
																		}
																	},
																	"voluntary_exits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																			"properties": {
																				"message": {
																					"type": "object",
																					"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																					"properties": {
																						"epoch": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Minimum epoch for processing exit."
																								}
																							]
																						},
																						"validator_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of the exiting validator."
																								}
																							]
																						}
																					}
																				},
																				"signature": {
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				}
																			}
																		}
																	},
																	"sync_aggregate": {
																		"type": "object",
																		"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																		"properties": {
																			"sync_committee_bits": {
																				"description": "Aggregation bits of sync",
																				"type": "string",
																				"format": "hex",
																				"example": "0x01",
																				"pattern": "^0x[a-fA-F0-9]+$"
																			},
																			"sync_committee_signature": {
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{192}$",
																				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																			}
																		}
																	}
																}
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									{
										"type": "object",
										"description": "A variant of the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
										"properties": {
											"message": {
												"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
																"allOf": [
																	{
																		"type": "object",
																		"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
																		"properties": {
																			"randao_reveal": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					},
																					{
																						"description": "The RanDAO reveal value provided by the validator."
																					}
																				]
																			},
																			"eth1_data": {
																				"type": "object",
																				"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																				"properties": {
																					"deposit_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Root of the deposit tree."
																							}
																						]
																					},
																					"deposit_count": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Total number of deposits."
																							}
																						]
																					},
																					"block_hash": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Ethereum 1.x block hash."
																							}
																						]
																					}
																				}
																			},
																			"graffiti": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			"proposer_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																					"properties": {
																						"signed_header_1": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						},
																						"signed_header_2": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				}
																			},
																			"attester_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																					"properties": {
																						"attestation_1": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestation_2": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"attestations": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																					"properties": {
																						"aggregation_bits": {
																							"description": "Attester aggregation bits.",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "BLS aggregate signature."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"deposits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																					"properties": {
																						"proof": {
																							"type": "array",
																							"description": "Branch in the deposit tree.",
																							"items": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								]
																							},
																							"minItems": 32,
																							"maxItems": 32
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																							"properties": {
																								"pubkey": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{96}$",
																									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																								},
																								"withdrawal_credentials": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "The withdrawal credentials."
																										}
																									]
																								},
																								"amount": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Amount in Gwei."
																										}
																									]
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "Container self-signature."
																										}
																									]
																								}
																							}
																						}
																					}
																				}
																			},
																			"voluntary_exits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																					"properties": {
																						"message": {
																							"type": "object",
																							"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																							"properties": {
																								"epoch": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Minimum epoch for processing exit."
																										}
																									]
																								},
																								"validator_index": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Index of the exiting validator."
																										}
																									]
																								}
																							}
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			},
																			"sync_aggregate": {
																				"type": "object",
																				"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																				"properties": {
																					"sync_committee_bits": {
																						"description": "Aggregation bits of sync",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"sync_committee_signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"execution_payload_header": {
																				"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
																				"allOf": [
																					{
																						"type": "object",
																						"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																						"properties": {
																							"parent_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"fee_recipient": {
																								"type": "string",
																								"format": "hex",
																								"description": "An address on the execution (Ethereum 1) network.",
																								"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																								"pattern": "^0x[a-fA-F0-9]{40}$"
																							},
																							"state_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"receipts_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"logs_bloom": {
																								"type": "string",
																								"format": "hex",
																								"example": "0x
																								"pattern": "^0x[a-fA-F0-9]{512}$"
																							},
																							"prev_randao": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"block_number": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_limit": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_used": {
																								"type": "string",
																								"example": "1"
																							},
																							"timestamp": {
																								"type": "string",
																								"example": "1"
																							},
																							"extra_data": {
																								"type": "string",
																								"format": "hex",
																								"description": "Extra data on the execution (Ethereum 1) network.",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{0,64}$"
																							},
																							"base_fee_per_gas": {
																								"type": "string",
																								"example": "1"
																							},
																							"block_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						}
																					},
																					{
																						"type": "object",
																						"properties": {
																							"transactions_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						}
																					}
																				]
																			}
																		}
																	}
																]
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									{
										"type": "object",
										"description": "A variant of the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Capella spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
										"properties": {
											"message": {
												"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec, which contains a transactions root rather than a full transactions list.",
																"allOf": [
																	{
																		"type": "object",
																		"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
																		"properties": {
																			"randao_reveal": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					},
																					{
																						"description": "The RanDAO reveal value provided by the validator."
																					}
																				]
																			},
																			"eth1_data": {
																				"type": "object",
																				"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																				"properties": {
																					"deposit_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Root of the deposit tree."
																							}
																						]
																					},
																					"deposit_count": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Total number of deposits."
																							}
																						]
																					},
																					"block_hash": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Ethereum 1.x block hash."
																							}
																						]
																					}
																				}
																			},
																			"graffiti": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			"proposer_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																					"properties": {
																						"signed_header_1": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						},
																						"signed_header_2": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				}
																			},
																			"attester_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																					"properties": {
																						"attestation_1": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestation_2": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"attestations": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																					"properties": {
																						"aggregation_bits": {
																							"description": "Attester aggregation bits.",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "BLS aggregate signature."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"deposits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																					"properties": {
																						"proof": {
																							"type": "array",
																							"description": "Branch in the deposit tree.",
																							"items": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								]
																							},
																							"minItems": 32,
																							"maxItems": 32
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																							"properties": {
																								"pubkey": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{96}$",
																									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																								},
																								"withdrawal_credentials": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "The withdrawal credentials."
																										}
																									]
																								},
																								"amount": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Amount in Gwei."
																										}
																									]
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "Container self-signature."
																										}
																									]
																								}
																							}
																						}
																					}
																				}
																			},
																			"voluntary_exits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																					"properties": {
																						"message": {
																							"type": "object",
																							"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																							"properties": {
																								"epoch": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Minimum epoch for processing exit."
																										}
																									]
																								},
																								"validator_index": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Index of the exiting validator."
																										}
																									]
																								}
																							}
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			},
																			"sync_aggregate": {
																				"type": "object",
																				"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																				"properties": {
																					"sync_committee_bits": {
																						"description": "Aggregation bits of sync",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"sync_committee_signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"execution_payload_header": {
																				"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																				"allOf": [
																					{
																						"type": "object",
																						"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																						"properties": {
																							"parent_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"fee_recipient": {
																								"type": "string",
																								"format": "hex",
																								"description": "An address on the execution (Ethereum 1) network.",
																								"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																								"pattern": "^0x[a-fA-F0-9]{40}$"
																							},
																							"state_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"receipts_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"logs_bloom": {
																								"type": "string",
																								"format": "hex",
																								"example": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
																								"pattern": "^0x[a-fA-F0-9]{512}$"
																							},
																							"prev_randao": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"block_number": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_limit": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_used": {
																								"type": "string",
																								"example": "1"
																							},
																							"timestamp": {
																								"type": "string",
																								"example": "1"
																							},
																							"extra_data": {
																								"type": "string",
																								"format": "hex",
																								"description": "Extra data on the execution (Ethereum 1) network.",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{0,64}$"
																							},
																							"base_fee_per_gas": {
																								"type": "string",
																								"example": "1"
																							},
																							"block_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						}
																					},
																					{
																						"type": "object",
																						"properties": {
																							"transactions_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"withdrawals_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						}
																					}
																				]
																			},
																			"bls_to_execution_changes": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
																					"properties": {
																						"message": {
																							"type": "object",
																							"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																							"properties": {
																								"validator_index": {
																									"description": "Index of the validator for which credentials will be changed.",
																									"type": "string",
																									"example": "1"
																								},
																								"from_bls_pubkey": {
																									"description": "Public key of existing credentials.",
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{96}$",
																									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																								},
																								"to_execution_address": {
																									"description": "Execution address to which the credentials will be changed.",
																									"type": "string",
																									"format": "hex",
																									"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																									"pattern": "^0x[a-fA-F0-9]{40}$"
																								}
																							}
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	}
																]
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									}
								]
							}
						},
						"application/octet-stream": {
							"schema": {
								"description": "SSZ serialized block bytes. Use content type header to indicate that SSZ data is contained in the request body."
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database."
					},
					"202": {
						"description": "The block failed validation, but was successfully broadcast anyway. It was not integrated into the beacon node's database."
					},
					"400": {
						"description": "The `SignedBlindedBeaconBlock` object is invalid",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block: missing signature"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"415": {
						"description": "The supplied content-type is not supported.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "The media type supplied is unsupported, and the request has been rejected. This occurs when a HTTP request supplies a payload in a content-type that the service is not able to accept.",
											"type": "number",
											"example": 415
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 415,
									"message": "Cannot read the supplied content type."
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/blocks": {
			"post": {
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"summary": "Publish a signed block.",
				"operationId": "publishBlock",
				"description": "Instructs the beacon node to broadcast a newly signed beacon block to the beacon network,\nto be included in the beacon chain. A success response (20x) indicates that the block\npassed gossip validation and was successfully broadcast onto the network.\nThe beacon node is also expected to integrate the block into state, but may broadcast it\nbefore doing so, so as to aid timely delivery of the block. Should the block fail full\nvalidation, a separate success response code (202) is used to indicate that the block was\nsuccessfully broadcast but failed integration.\n",
				"parameters": [
					{
						"in": "header",
						"schema": {
							"enum": ["phase0", "altair", "bellatrix", "capella"],
							"example": "phase0"
						},
						"required": false,
						"name": "Eth-Consensus-Version",
						"description": "Version of the block being submitted, if using SSZ encoding."
					}
				],
				"requestBody": {
					"description": "The `SignedBeaconBlock` object composed of `BeaconBlock` object (produced by beacon node) and validator signature.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"oneOf": [
									{
										"type": "object",
										"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"type": "object",
																"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
																"properties": {
																	"randao_reveal": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{192}$",
																				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																			},
																			{
																				"description": "The RanDAO reveal value provided by the validator."
																			}
																		]
																	},
																	"eth1_data": {
																		"type": "object",
																		"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																		"properties": {
																			"deposit_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Root of the deposit tree."
																					}
																				]
																			},
																			"deposit_count": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Total number of deposits."
																					}
																				]
																			},
																			"block_hash": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Ethereum 1.x block hash."
																					}
																				]
																			}
																		}
																	},
																	"graffiti": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"proposer_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																			"properties": {
																				"signed_header_1": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				},
																				"signed_header_2": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	},
																	"attester_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																			"properties": {
																				"attestation_1": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestation_2": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"attestations": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																			"properties": {
																				"aggregation_bits": {
																					"description": "Attester aggregation bits.",
																					"type": "string",
																					"format": "hex",
																					"example": "0x01",
																					"pattern": "^0x[a-fA-F0-9]+$"
																				},
																				"signature": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "BLS aggregate signature."
																						}
																					]
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																					"properties": {
																						"slot": {
																							"type": "string",
																							"example": "1"
																						},
																						"index": {
																							"type": "string",
																							"example": "1"
																						},
																						"beacon_block_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "LMD GHOST vote."
																								}
																							]
																						},
																						"source": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						"target": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"deposits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																			"properties": {
																				"proof": {
																					"type": "array",
																					"description": "Branch in the deposit tree.",
																					"items": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						]
																					},
																					"minItems": 32,
																					"maxItems": 32
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																					"properties": {
																						"pubkey": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{96}$",
																							"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																							"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																						},
																						"withdrawal_credentials": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The withdrawal credentials."
																								}
																							]
																						},
																						"amount": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Amount in Gwei."
																								}
																							]
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "Container self-signature."
																								}
																							]
																						}
																					}
																				}
																			}
																		}
																	},
																	"voluntary_exits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																			"properties": {
																				"message": {
																					"type": "object",
																					"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																					"properties": {
																						"epoch": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Minimum epoch for processing exit."
																								}
																							]
																						},
																						"validator_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of the exiting validator."
																								}
																							]
																						}
																					}
																				},
																				"signature": {
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									{
										"type": "object",
										"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"type": "object",
																"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
																"properties": {
																	"randao_reveal": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{192}$",
																				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																			},
																			{
																				"description": "The RanDAO reveal value provided by the validator."
																			}
																		]
																	},
																	"eth1_data": {
																		"type": "object",
																		"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																		"properties": {
																			"deposit_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Root of the deposit tree."
																					}
																				]
																			},
																			"deposit_count": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Total number of deposits."
																					}
																				]
																			},
																			"block_hash": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "Ethereum 1.x block hash."
																					}
																				]
																			}
																		}
																	},
																	"graffiti": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"proposer_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																			"properties": {
																				"signed_header_1": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				},
																				"signed_header_2": {
																					"type": "object",
																					"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																					"properties": {
																						"message": {
																							"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"properties": {
																										"slot": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "The slot to which this block corresponds."
																												}
																											]
																										},
																										"proposer_index": {
																											"allOf": [
																												{
																													"type": "string",
																													"example": "1"
																												},
																												{
																													"description": "Index of validator in validator registry."
																												}
																											]
																										},
																										"parent_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The signing merkle root of the parent `BeaconBlock`."
																												}
																											]
																										},
																										"state_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																												}
																											]
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"body_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																												}
																											]
																										}
																									}
																								}
																							]
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	},
																	"attester_slashings": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																			"properties": {
																				"attestation_1": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestation_2": {
																					"type": "object",
																					"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																					"properties": {
																						"attesting_indices": {
																							"type": "array",
																							"maxItems": 2048,
																							"description": "Attesting validator indices",
																							"items": {
																								"type": "string",
																								"example": "1"
																							}
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"attestations": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																			"properties": {
																				"aggregation_bits": {
																					"description": "Attester aggregation bits.",
																					"type": "string",
																					"format": "hex",
																					"example": "0x01",
																					"pattern": "^0x[a-fA-F0-9]+$"
																				},
																				"signature": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "BLS aggregate signature."
																						}
																					]
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																					"properties": {
																						"slot": {
																							"type": "string",
																							"example": "1"
																						},
																						"index": {
																							"type": "string",
																							"example": "1"
																						},
																						"beacon_block_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "LMD GHOST vote."
																								}
																							]
																						},
																						"source": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						"target": {
																							"type": "object",
																							"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																							"properties": {
																								"epoch": {
																									"type": "string",
																									"example": "1"
																								},
																								"root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	},
																	"deposits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																			"properties": {
																				"proof": {
																					"type": "array",
																					"description": "Branch in the deposit tree.",
																					"items": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						]
																					},
																					"minItems": 32,
																					"maxItems": 32
																				},
																				"data": {
																					"type": "object",
																					"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																					"properties": {
																						"pubkey": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{96}$",
																							"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																							"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																						},
																						"withdrawal_credentials": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The withdrawal credentials."
																								}
																							]
																						},
																						"amount": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Amount in Gwei."
																								}
																							]
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "Container self-signature."
																								}
																							]
																						}
																					}
																				}
																			}
																		}
																	},
																	"voluntary_exits": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																			"properties": {
																				"message": {
																					"type": "object",
																					"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																					"properties": {
																						"epoch": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Minimum epoch for processing exit."
																								}
																							]
																						},
																						"validator_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of the exiting validator."
																								}
																							]
																						}
																					}
																				},
																				"signature": {
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				}
																			}
																		}
																	},
																	"sync_aggregate": {
																		"type": "object",
																		"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																		"properties": {
																			"sync_committee_bits": {
																				"description": "Aggregation bits of sync",
																				"type": "string",
																				"format": "hex",
																				"example": "0x01",
																				"pattern": "^0x[a-fA-F0-9]+$"
																			},
																			"sync_committee_signature": {
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{192}$",
																				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																			}
																		}
																	}
																}
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									{
										"type": "object",
										"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"allOf": [
																	{
																		"type": "object",
																		"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
																		"properties": {
																			"randao_reveal": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					},
																					{
																						"description": "The RanDAO reveal value provided by the validator."
																					}
																				]
																			},
																			"eth1_data": {
																				"type": "object",
																				"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																				"properties": {
																					"deposit_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Root of the deposit tree."
																							}
																						]
																					},
																					"deposit_count": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Total number of deposits."
																							}
																						]
																					},
																					"block_hash": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Ethereum 1.x block hash."
																							}
																						]
																					}
																				}
																			},
																			"graffiti": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			"proposer_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																					"properties": {
																						"signed_header_1": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						},
																						"signed_header_2": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				}
																			},
																			"attester_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																					"properties": {
																						"attestation_1": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestation_2": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"attestations": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																					"properties": {
																						"aggregation_bits": {
																							"description": "Attester aggregation bits.",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "BLS aggregate signature."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"deposits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																					"properties": {
																						"proof": {
																							"type": "array",
																							"description": "Branch in the deposit tree.",
																							"items": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								]
																							},
																							"minItems": 32,
																							"maxItems": 32
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																							"properties": {
																								"pubkey": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{96}$",
																									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																								},
																								"withdrawal_credentials": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "The withdrawal credentials."
																										}
																									]
																								},
																								"amount": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Amount in Gwei."
																										}
																									]
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "Container self-signature."
																										}
																									]
																								}
																							}
																						}
																					}
																				}
																			},
																			"voluntary_exits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																					"properties": {
																						"message": {
																							"type": "object",
																							"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																							"properties": {
																								"epoch": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Minimum epoch for processing exit."
																										}
																									]
																								},
																								"validator_index": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Index of the exiting validator."
																										}
																									]
																								}
																							}
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			},
																			"sync_aggregate": {
																				"type": "object",
																				"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																				"properties": {
																					"sync_committee_bits": {
																						"description": "Aggregation bits of sync",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"sync_committee_signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"execution_payload": {
																				"allOf": [
																					{
																						"type": "object",
																						"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																						"properties": {
																							"parent_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"fee_recipient": {
																								"type": "string",
																								"format": "hex",
																								"description": "An address on the execution (Ethereum 1) network.",
																								"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																								"pattern": "^0x[a-fA-F0-9]{40}$"
																							},
																							"state_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"receipts_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"logs_bloom": {
																								"type": "string",
																								"format": "hex",
																								"example": "0x
																								"pattern": "^0x[a-fA-F0-9]{512}$"
																							},
																							"prev_randao": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"block_number": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_limit": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_used": {
																								"type": "string",
																								"example": "1"
																							},
																							"timestamp": {
																								"type": "string",
																								"example": "1"
																							},
																							"extra_data": {
																								"type": "string",
																								"format": "hex",
																								"description": "Extra data on the execution (Ethereum 1) network.",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{0,64}$"
																							},
																							"base_fee_per_gas": {
																								"type": "string",
																								"example": "1"
																							},
																							"block_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						}
																					},
																					{
																						"type": "object",
																						"properties": {
																							"transactions": {
																								"type": "array",
																								"items": {
																									"type": "string",
																									"format": "hex",
																									"description": "A transaction on the execution (Ethereum 1) network.",
																									"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																									"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																								},
																								"maxItems": 1048576
																							}
																						}
																					}
																				]
																			}
																		}
																	}
																]
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									{
										"type": "object",
										"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Capella spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body": {
																"allOf": [
																	{
																		"type": "object",
																		"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
																		"properties": {
																			"randao_reveal": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					},
																					{
																						"description": "The RanDAO reveal value provided by the validator."
																					}
																				]
																			},
																			"eth1_data": {
																				"type": "object",
																				"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																				"properties": {
																					"deposit_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Root of the deposit tree."
																							}
																						]
																					},
																					"deposit_count": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Total number of deposits."
																							}
																						]
																					},
																					"block_hash": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "Ethereum 1.x block hash."
																							}
																						]
																					}
																				}
																			},
																			"graffiti": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			"proposer_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																					"properties": {
																						"signed_header_1": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						},
																						"signed_header_2": {
																							"type": "object",
																							"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																							"properties": {
																								"message": {
																									"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																									"allOf": [
																										{
																											"type": "object",
																											"properties": {
																												"slot": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "The slot to which this block corresponds."
																														}
																													]
																												},
																												"proposer_index": {
																													"allOf": [
																														{
																															"type": "string",
																															"example": "1"
																														},
																														{
																															"description": "Index of validator in validator registry."
																														}
																													]
																												},
																												"parent_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The signing merkle root of the parent `BeaconBlock`."
																														}
																													]
																												},
																												"state_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																														}
																													]
																												}
																											}
																										},
																										{
																											"type": "object",
																											"properties": {
																												"body_root": {
																													"allOf": [
																														{
																															"type": "string",
																															"format": "hex",
																															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																															"pattern": "^0x[a-fA-F0-9]{64}$"
																														},
																														{
																															"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																														}
																													]
																												}
																											}
																										}
																									]
																								},
																								"signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				}
																			},
																			"attester_slashings": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																					"properties": {
																						"attestation_1": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestation_2": {
																							"type": "object",
																							"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																							"properties": {
																								"attesting_indices": {
																									"type": "array",
																									"maxItems": 2048,
																									"description": "Attesting validator indices",
																									"items": {
																										"type": "string",
																										"example": "1"
																									}
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																										}
																									]
																								},
																								"data": {
																									"type": "object",
																									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																									"properties": {
																										"slot": {
																											"type": "string",
																											"example": "1"
																										},
																										"index": {
																											"type": "string",
																											"example": "1"
																										},
																										"beacon_block_root": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												},
																												{
																													"description": "LMD GHOST vote."
																												}
																											]
																										},
																										"source": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										},
																										"target": {
																											"type": "object",
																											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																											"properties": {
																												"epoch": {
																													"type": "string",
																													"example": "1"
																												},
																												"root": {
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"attestations": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																					"properties": {
																						"aggregation_bits": {
																							"description": "Attester aggregation bits.",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"signature": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "BLS aggregate signature."
																								}
																							]
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																							"properties": {
																								"slot": {
																									"type": "string",
																									"example": "1"
																								},
																								"index": {
																									"type": "string",
																									"example": "1"
																								},
																								"beacon_block_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "LMD GHOST vote."
																										}
																									]
																								},
																								"source": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								"target": {
																									"type": "object",
																									"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																									"properties": {
																										"epoch": {
																											"type": "string",
																											"example": "1"
																										},
																										"root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			},
																			"deposits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																					"properties": {
																						"proof": {
																							"type": "array",
																							"description": "Branch in the deposit tree.",
																							"items": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								]
																							},
																							"minItems": 32,
																							"maxItems": 32
																						},
																						"data": {
																							"type": "object",
																							"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																							"properties": {
																								"pubkey": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{96}$",
																									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																								},
																								"withdrawal_credentials": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "The withdrawal credentials."
																										}
																									]
																								},
																								"amount": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Amount in Gwei."
																										}
																									]
																								},
																								"signature": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"pattern": "^0x[a-fA-F0-9]{192}$",
																											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																										},
																										{
																											"description": "Container self-signature."
																										}
																									]
																								}
																							}
																						}
																					}
																				}
																			},
																			"voluntary_exits": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																					"properties": {
																						"message": {
																							"type": "object",
																							"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																							"properties": {
																								"epoch": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Minimum epoch for processing exit."
																										}
																									]
																								},
																								"validator_index": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Index of the exiting validator."
																										}
																									]
																								}
																							}
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			},
																			"sync_aggregate": {
																				"type": "object",
																				"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																				"properties": {
																					"sync_committee_bits": {
																						"description": "Aggregation bits of sync",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"sync_committee_signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"execution_payload": {
																				"allOf": [
																					{
																						"type": "object",
																						"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																						"properties": {
																							"parent_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"fee_recipient": {
																								"type": "string",
																								"format": "hex",
																								"description": "An address on the execution (Ethereum 1) network.",
																								"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																								"pattern": "^0x[a-fA-F0-9]{40}$"
																							},
																							"state_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"receipts_root": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"logs_bloom": {
																								"type": "string",
																								"format": "hex",
																								"example": "0x
																								"pattern": "^0x[a-fA-F0-9]{512}$"
																							},
																							"prev_randao": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							"block_number": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_limit": {
																								"type": "string",
																								"example": "1"
																							},
																							"gas_used": {
																								"type": "string",
																								"example": "1"
																							},
																							"timestamp": {
																								"type": "string",
																								"example": "1"
																							},
																							"extra_data": {
																								"type": "string",
																								"format": "hex",
																								"description": "Extra data on the execution (Ethereum 1) network.",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{0,64}$"
																							},
																							"base_fee_per_gas": {
																								"type": "string",
																								"example": "1"
																							},
																							"block_hash": {
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							}
																						}
																					},
																					{
																						"type": "object",
																						"properties": {
																							"transactions": {
																								"type": "array",
																								"items": {
																									"type": "string",
																									"format": "hex",
																									"description": "A transaction on the execution (Ethereum 1) network.",
																									"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																									"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																								},
																								"maxItems": 1048576
																							},
																							"withdrawals": {
																								"type": "array",
																								"items": {
																									"type": "object",
																									"properties": {
																										"index": {
																											"description": "The index of the withdrawal.",
																											"type": "string",
																											"example": "1"
																										},
																										"validator_index": {
																											"description": "The index of the withdrawing validator.",
																											"type": "string",
																											"example": "1"
																										},
																										"address": {
																											"description": "The address to which the withdrawal is credited.",
																											"type": "string",
																											"format": "hex",
																											"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																											"pattern": "^0x[a-fA-F0-9]{40}$"
																										},
																										"amount": {
																											"description": "The value withdrawn (gwei).",
																											"type": "string",
																											"example": "1"
																										}
																									}
																								},
																								"maxItems": 16
																							}
																						}
																					}
																				]
																			},
																			"bls_to_execution_changes": {
																				"type": "array",
																				"items": {
																					"type": "object",
																					"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
																					"properties": {
																						"message": {
																							"type": "object",
																							"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																							"properties": {
																								"validator_index": {
																									"description": "Index of the validator for which credentials will be changed.",
																									"type": "string",
																									"example": "1"
																								},
																								"from_bls_pubkey": {
																									"description": "Public key of existing credentials.",
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{96}$",
																									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																								},
																								"to_execution_address": {
																									"description": "Execution address to which the credentials will be changed.",
																									"type": "string",
																									"format": "hex",
																									"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																									"pattern": "^0x[a-fA-F0-9]{40}$"
																								}
																							}
																						},
																						"signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	}
																]
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									}
								]
							}
						},
						"application/octet-stream": {
							"schema": {
								"description": "SSZ serialized block bytes. Use content type header to indicate that SSZ data is contained in the request body."
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database."
					},
					"202": {
						"description": "The block could not be integrated into the beacon node's database as it failed validation, but was successfully broadcast."
					},
					"400": {
						"description": "The `SignedBeaconBlock` object is invalid and could not be broadcast",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 400,
												"message": "Invalid block: missing signature"
											}
										}
									]
								}
							}
						}
					},
					"415": {
						"description": "The supplied content-type is not supported.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "The media type supplied is unsupported, and the request has been rejected. This occurs when a HTTP request supplies a payload in a content-type that the service is not able to accept.",
											"type": "number",
											"example": 415
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 415,
									"message": "Cannot read the supplied content type."
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v2/beacon/blocks/{block_id}": {
			"get": {
				"operationId": "getBlockV2",
				"summary": "Get block",
				"description": "Retrieves block details for given block id.\nDepending on `Accept` header it can be returned either as json or as bytes serialized by SSZ\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "GetBlockV2Response",
									"type": "object",
									"properties": {
										"version": {
											"type": "string",
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"oneOf": [
												{
													"type": "object",
													"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												{
													"type": "object",
													"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				},
																				"sync_aggregate": {
																					"type": "object",
																					"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																					"properties": {
																						"sync_committee_bits": {
																							"description": "Aggregation bits of sync",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"sync_committee_signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												{
													"type": "object",
													"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"allOf": [
																				{
																					"type": "object",
																					"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
																					"properties": {
																						"randao_reveal": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The RanDAO reveal value provided by the validator."
																								}
																							]
																						},
																						"eth1_data": {
																							"type": "object",
																							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																							"properties": {
																								"deposit_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Root of the deposit tree."
																										}
																									]
																								},
																								"deposit_count": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Total number of deposits."
																										}
																									]
																								},
																								"block_hash": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Ethereum 1.x block hash."
																										}
																									]
																								}
																							}
																						},
																						"graffiti": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						"proposer_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																								"properties": {
																									"signed_header_1": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									},
																									"signed_header_2": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									}
																								}
																							}
																						},
																						"attester_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																								"properties": {
																									"attestation_1": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									},
																									"attestation_2": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestations": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																								"properties": {
																									"aggregation_bits": {
																										"description": "Attester aggregation bits.",
																										"type": "string",
																										"format": "hex",
																										"example": "0x01",
																										"pattern": "^0x[a-fA-F0-9]+$"
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "BLS aggregate signature."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"deposits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																								"properties": {
																									"proof": {
																										"type": "array",
																										"description": "Branch in the deposit tree.",
																										"items": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											]
																										},
																										"minItems": 32,
																										"maxItems": 32
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																										"properties": {
																											"pubkey": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{96}$",
																												"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																												"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																											},
																											"withdrawal_credentials": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The withdrawal credentials."
																													}
																												]
																											},
																											"amount": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Amount in Gwei."
																													}
																												]
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "Container self-signature."
																													}
																												]
																											}
																										}
																									}
																								}
																							}
																						},
																						"voluntary_exits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																								"properties": {
																									"message": {
																										"type": "object",
																										"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																										"properties": {
																											"epoch": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Minimum epoch for processing exit."
																													}
																												]
																											},
																											"validator_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of the exiting validator."
																													}
																												]
																											}
																										}
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						},
																						"sync_aggregate": {
																							"type": "object",
																							"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																							"properties": {
																								"sync_committee_bits": {
																									"description": "Aggregation bits of sync",
																									"type": "string",
																									"format": "hex",
																									"example": "0x01",
																									"pattern": "^0x[a-fA-F0-9]+$"
																								},
																								"sync_committee_signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"execution_payload": {
																							"allOf": [
																								{
																									"type": "object",
																									"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																									"properties": {
																										"parent_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"fee_recipient": {
																											"type": "string",
																											"format": "hex",
																											"description": "An address on the execution (Ethereum 1) network.",
																											"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																											"pattern": "^0x[a-fA-F0-9]{40}$"
																										},
																										"state_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"receipts_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"logs_bloom": {
																											"type": "string",
																											"format": "hex",
																											"example": "0x
																											"pattern": "^0x[a-fA-F0-9]{512}$"
																										},
																										"prev_randao": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"block_number": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_limit": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_used": {
																											"type": "string",
																											"example": "1"
																										},
																										"timestamp": {
																											"type": "string",
																											"example": "1"
																										},
																										"extra_data": {
																											"type": "string",
																											"format": "hex",
																											"description": "Extra data on the execution (Ethereum 1) network.",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{0,64}$"
																										},
																										"base_fee_per_gas": {
																											"type": "string",
																											"example": "1"
																										},
																										"block_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"transactions": {
																											"type": "array",
																											"items": {
																												"type": "string",
																												"format": "hex",
																												"description": "A transaction on the execution (Ethereum 1) network.",
																												"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																												"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																											},
																											"maxItems": 1048576
																										}
																									}
																								}
																							]
																						}
																					}
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												{
													"type": "object",
													"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Capella spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"allOf": [
																				{
																					"type": "object",
																					"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
																					"properties": {
																						"randao_reveal": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The RanDAO reveal value provided by the validator."
																								}
																							]
																						},
																						"eth1_data": {
																							"type": "object",
																							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																							"properties": {
																								"deposit_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Root of the deposit tree."
																										}
																									]
																								},
																								"deposit_count": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Total number of deposits."
																										}
																									]
																								},
																								"block_hash": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Ethereum 1.x block hash."
																										}
																									]
																								}
																							}
																						},
																						"graffiti": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						"proposer_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																								"properties": {
																									"signed_header_1": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									},
																									"signed_header_2": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									}
																								}
																							}
																						},
																						"attester_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																								"properties": {
																									"attestation_1": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									},
																									"attestation_2": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestations": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																								"properties": {
																									"aggregation_bits": {
																										"description": "Attester aggregation bits.",
																										"type": "string",
																										"format": "hex",
																										"example": "0x01",
																										"pattern": "^0x[a-fA-F0-9]+$"
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "BLS aggregate signature."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"deposits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																								"properties": {
																									"proof": {
																										"type": "array",
																										"description": "Branch in the deposit tree.",
																										"items": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											]
																										},
																										"minItems": 32,
																										"maxItems": 32
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																										"properties": {
																											"pubkey": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{96}$",
																												"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																												"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																											},
																											"withdrawal_credentials": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The withdrawal credentials."
																													}
																												]
																											},
																											"amount": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Amount in Gwei."
																													}
																												]
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "Container self-signature."
																													}
																												]
																											}
																										}
																									}
																								}
																							}
																						},
																						"voluntary_exits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																								"properties": {
																									"message": {
																										"type": "object",
																										"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																										"properties": {
																											"epoch": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Minimum epoch for processing exit."
																													}
																												]
																											},
																											"validator_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of the exiting validator."
																													}
																												]
																											}
																										}
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						},
																						"sync_aggregate": {
																							"type": "object",
																							"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																							"properties": {
																								"sync_committee_bits": {
																									"description": "Aggregation bits of sync",
																									"type": "string",
																									"format": "hex",
																									"example": "0x01",
																									"pattern": "^0x[a-fA-F0-9]+$"
																								},
																								"sync_committee_signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"execution_payload": {
																							"allOf": [
																								{
																									"type": "object",
																									"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																									"properties": {
																										"parent_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"fee_recipient": {
																											"type": "string",
																											"format": "hex",
																											"description": "An address on the execution (Ethereum 1) network.",
																											"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																											"pattern": "^0x[a-fA-F0-9]{40}$"
																										},
																										"state_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"receipts_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"logs_bloom": {
																											"type": "string",
																											"format": "hex",
																											"example": "0x
																											"pattern": "^0x[a-fA-F0-9]{512}$"
																										},
																										"prev_randao": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"block_number": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_limit": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_used": {
																											"type": "string",
																											"example": "1"
																										},
																										"timestamp": {
																											"type": "string",
																											"example": "1"
																										},
																										"extra_data": {
																											"type": "string",
																											"format": "hex",
																											"description": "Extra data on the execution (Ethereum 1) network.",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{0,64}$"
																										},
																										"base_fee_per_gas": {
																											"type": "string",
																											"example": "1"
																										},
																										"block_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"transactions": {
																											"type": "array",
																											"items": {
																												"type": "string",
																												"format": "hex",
																												"description": "A transaction on the execution (Ethereum 1) network.",
																												"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																												"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																											},
																											"maxItems": 1048576
																										},
																										"withdrawals": {
																											"type": "array",
																											"items": {
																												"type": "object",
																												"properties": {
																													"index": {
																														"description": "The index of the withdrawal.",
																														"type": "string",
																														"example": "1"
																													},
																													"validator_index": {
																														"description": "The index of the withdrawing validator.",
																														"type": "string",
																														"example": "1"
																													},
																													"address": {
																														"description": "The address to which the withdrawal is credited.",
																														"type": "string",
																														"format": "hex",
																														"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																														"pattern": "^0x[a-fA-F0-9]{40}$"
																													},
																													"amount": {
																														"description": "The value withdrawn (gwei).",
																														"type": "string",
																														"example": "1"
																													}
																												}
																											},
																											"maxItems": 16
																										}
																									}
																								}
																							]
																						},
																						"bls_to_execution_changes": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
																								"properties": {
																									"message": {
																										"type": "object",
																										"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																										"properties": {
																											"validator_index": {
																												"description": "Index of the validator for which credentials will be changed.",
																												"type": "string",
																												"example": "1"
																											},
																											"from_bls_pubkey": {
																												"description": "Public key of existing credentials.",
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{96}$",
																												"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																											},
																											"to_execution_address": {
																												"description": "Execution address to which the credentials will be changed.",
																												"type": "string",
																												"format": "hex",
																												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																												"pattern": "^0x[a-fA-F0-9]{40}$"
																											}
																										}
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized block bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"400": {
						"description": "The block ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Block not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Block not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/blocks/{block_id}/root": {
			"get": {
				"operationId": "getBlockRoot",
				"summary": "Get block root",
				"description": "Retrieves hashTreeRoot of BeaconBlock/BeaconBlockHeader",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"title": "GetBlockRootResponse",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"properties": {
												"root": {
													"allOf": [
														{
															"description": "HashTreeRoot of BeaconBlock/BeaconBlockHeader object"
														},
														{
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The block ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Block not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Block not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/blocks/{block_id}/attestations": {
			"get": {
				"operationId": "getBlockAttestations",
				"summary": "Get block attestations",
				"description": "Retrieves attestation included in requested block.",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetBlockAttestationsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
												"properties": {
													"aggregation_bits": {
														"description": "Attester aggregation bits.",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"signature": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "BLS aggregate signature."
															}
														]
													},
													"data": {
														"type": "object",
														"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
														"properties": {
															"slot": {
																"type": "string",
																"example": "1"
															},
															"index": {
																"type": "string",
																"example": "1"
															},
															"beacon_block_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "LMD GHOST vote."
																	}
																]
															},
															"source": {
																"type": "object",
																"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																"properties": {
																	"epoch": {
																		"type": "string",
																		"example": "1"
																	},
																	"root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															},
															"target": {
																"type": "object",
																"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																"properties": {
																	"epoch": {
																		"type": "string",
																		"example": "1"
																	},
																	"root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The block ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Block not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Block not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/rewards/sync_committee/{block_id}": {
			"post": {
				"operationId": "getSyncCommitteeRewards",
				"summary": "Get sync committee rewards",
				"description": "Retrieves rewards info for sync committee members specified by array of public keys or validator index. If no array is provided, return reward info for every committee member.",
				"tags": ["Beacon", "Rewards", "Experimental"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"requestBody": {
					"description": "An array of either hex encoded public key (any bytes48 with 0x prefix) or validator index",
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"uniqueItems": true,
								"items": {
									"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
									"type": "string"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetSyncCommitteeRewardsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"description": "Rewards info for sync committee members",
											"type": "array",
											"items": {
												"type": "object",
												"description": "Rewards info for a single sync committee member",
												"required": ["validator_index", "reward"],
												"properties": {
													"validator_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"example": 0
															},
															{
																"description": "one entry for every validator participating in the sync committee"
															}
														]
													},
													"reward": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"example": 2000
															},
															{
																"description": "sync committee reward in gwei for the validator"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid get sync committee rewards request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 400,
											"message": "Invalid request to retrieve sync committee rewards info"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Block not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Block not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/deposit_snapshot": {
			"get": {
				"operationId": "getDepositSnapshot",
				"summary": "Get Deposit Tree Snapshot",
				"description": "Retrieve [EIP-4881](https://eips.ethereum.org/EIPS/eip-4881) Deposit Tree Snapshot.\nDepending on `Accept` header it can be returned either as json or as bytes serialzed by SSZ\n",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"title": "GetDepositSnapshotResponse",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"finalized": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														]
													},
													"minItems": 3,
													"maxItems": 3
												},
												"deposit_root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												"deposit_count": {
													"type": "string",
													"example": "1"
												},
												"execution_block_hash": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												"execution_block_height": {
													"type": "string",
													"example": "1"
												}
											}
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized block bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"404": {
						"description": "No Finalized Snapshot Available",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 404,
												"message": "No Finalized Snapshot Available"
											}
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/rewards/blocks/{block_id}": {
			"get": {
				"operationId": "getBlockRewards",
				"summary": "Get block rewards",
				"description": "Retrieve block reward info for a single block",
				"tags": ["Beacon", "Rewards", "Experimental"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetBlockRewardsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"description": "Rewards info for a single block",
											"properties": {
												"proposer_index": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": 123
														},
														{
															"description": "proposer of the block, the proposer index who receives these rewards"
														}
													]
												},
												"total": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": 123
														},
														{
															"description": "total block reward in gwei, equal to attestations + sync_aggregate + proposer_slashings + attester_slashings"
														}
													]
												},
												"attestations": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": 123
														},
														{
															"description": "block reward component due to included attestations in gwei"
														}
													]
												},
												"sync_aggregate": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": 123
														},
														{
															"description": "block reward component due to included sync_aggregate in gwei"
														}
													]
												},
												"proposer_slashings": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": 123
														},
														{
															"description": "block reward component due to included proposer_slashings in gwei"
														}
													]
												},
												"attester_slashings": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": 123
														},
														{
															"description": "block reward component due to included attester_slashings in gwei"
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid get block rewards request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 400,
											"message": "Invalid request to retrieve block rewards info"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Block or required state not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 404,
											"message": "Block or required state not found"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/rewards/attestations/{epoch}": {
			"post": {
				"operationId": "getAttestationsRewards",
				"summary": "Get attestations rewards",
				"description": "Retrieve attestation reward info for validators specified by array of public keys or validator index. If no array is provided, return reward info for every validator.",
				"tags": ["Beacon", "Rewards", "Experimental"],
				"parameters": [
					{
						"name": "epoch",
						"in": "path",
						"required": true,
						"description": "The epoch to get rewards info from",
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"requestBody": {
					"description": "An array of either hex encoded public key (any bytes48 with 0x prefix) or validator index",
					"required": false,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"uniqueItems": true,
								"items": {
									"description": "Either hex encoded public key (any bytes48 with 0x prefix) or validator index",
									"type": "string"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetAttestationsRewardsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "object",
											"description": "Rewards info for attestations",
											"required": ["ideal_rewards", "total_rewards"],
											"properties": {
												"ideal_rewards": {
													"type": "array",
													"items": {
														"type": "object",
														"description": "Ideal rewards info for a single attestation",
														"required": ["effective_balance", "head", "target", "source"],
														"properties": {
															"effective_balance": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 1000000000
																	},
																	{
																		"description": "validator's effective balance in gwei"
																	}
																]
															},
															"head": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 2500
																	},
																	{
																		"description": "Ideal attester's reward for head vote in gwei"
																	}
																]
															},
															"target": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 5000
																	},
																	{
																		"description": "Ideal attester's reward for target vote in gwei"
																	}
																]
															},
															"source": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 5000
																	},
																	{
																		"description": "Ideal attester's reward for source vote in gwei"
																	}
																]
															}
														}
													}
												},
												"total_rewards": {
													"type": "array",
													"items": {
														"type": "object",
														"description": "Rewards info for a single attestation",
														"required": ["validator_index", "head", "target", "source"],
														"properties": {
															"validator_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 0
																	},
																	{
																		"description": "one entry for every validator based on their attestations in the epoch"
																	}
																]
															},
															"head": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 2000
																	},
																	{
																		"description": "attester's reward for head vote in gwei"
																	}
																]
															},
															"target": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 2000
																	},
																	{
																		"description": "attester's reward for target vote in gwei"
																	}
																]
															},
															"source": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 4000
																	},
																	{
																		"description": "attester's reward for source vote in gwei"
																	}
																]
															},
															"inclusion_delay": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"example": 2000
																	},
																	{
																		"description": "attester's inclusion_delay reward in gwei (phase0 only)"
																	}
																]
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid get attestations rewards request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 400,
											"message": "Invalid request to retrieve attestations rewards info"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Epoch not known or required data not available",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 404,
											"message": "Epoch not known or required data not available"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/blinded_blocks/{block_id}": {
			"get": {
				"operationId": "getBlindedBlock",
				"summary": "Get blinded block",
				"description": "Retrieves blinded block for given block ID.\nDepending on `Accept` header it can be returned either as JSON or as bytes serialized by SSZ\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "block_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "GetBlindedBlockResponse",
									"type": "object",
									"properties": {
										"version": {
											"type": "string",
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"oneOf": [
												{
													"type": "object",
													"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												{
													"type": "object",
													"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				},
																				"sync_aggregate": {
																					"type": "object",
																					"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																					"properties": {
																						"sync_committee_bits": {
																							"description": "Aggregation bits of sync",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"sync_committee_signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												{
													"type": "object",
													"description": "A variant of the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
													"properties": {
														"message": {
															"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
																			"allOf": [
																				{
																					"type": "object",
																					"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
																					"properties": {
																						"randao_reveal": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The RanDAO reveal value provided by the validator."
																								}
																							]
																						},
																						"eth1_data": {
																							"type": "object",
																							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																							"properties": {
																								"deposit_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Root of the deposit tree."
																										}
																									]
																								},
																								"deposit_count": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Total number of deposits."
																										}
																									]
																								},
																								"block_hash": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Ethereum 1.x block hash."
																										}
																									]
																								}
																							}
																						},
																						"graffiti": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						"proposer_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																								"properties": {
																									"signed_header_1": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									},
																									"signed_header_2": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									}
																								}
																							}
																						},
																						"attester_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																								"properties": {
																									"attestation_1": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									},
																									"attestation_2": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestations": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																								"properties": {
																									"aggregation_bits": {
																										"description": "Attester aggregation bits.",
																										"type": "string",
																										"format": "hex",
																										"example": "0x01",
																										"pattern": "^0x[a-fA-F0-9]+$"
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "BLS aggregate signature."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"deposits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																								"properties": {
																									"proof": {
																										"type": "array",
																										"description": "Branch in the deposit tree.",
																										"items": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											]
																										},
																										"minItems": 32,
																										"maxItems": 32
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																										"properties": {
																											"pubkey": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{96}$",
																												"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																												"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																											},
																											"withdrawal_credentials": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The withdrawal credentials."
																													}
																												]
																											},
																											"amount": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Amount in Gwei."
																													}
																												]
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "Container self-signature."
																													}
																												]
																											}
																										}
																									}
																								}
																							}
																						},
																						"voluntary_exits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																								"properties": {
																									"message": {
																										"type": "object",
																										"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																										"properties": {
																											"epoch": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Minimum epoch for processing exit."
																													}
																												]
																											},
																											"validator_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of the exiting validator."
																													}
																												]
																											}
																										}
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						},
																						"sync_aggregate": {
																							"type": "object",
																							"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																							"properties": {
																								"sync_committee_bits": {
																									"description": "Aggregation bits of sync",
																									"type": "string",
																									"format": "hex",
																									"example": "0x01",
																									"pattern": "^0x[a-fA-F0-9]+$"
																								},
																								"sync_committee_signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"execution_payload_header": {
																							"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																									"properties": {
																										"parent_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"fee_recipient": {
																											"type": "string",
																											"format": "hex",
																											"description": "An address on the execution (Ethereum 1) network.",
																											"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																											"pattern": "^0x[a-fA-F0-9]{40}$"
																										},
																										"state_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"receipts_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"logs_bloom": {
																											"type": "string",
																											"format": "hex",
																											"example": "0x
																											"pattern": "^0x[a-fA-F0-9]{512}$"
																										},
																										"prev_randao": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"block_number": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_limit": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_used": {
																											"type": "string",
																											"example": "1"
																										},
																										"timestamp": {
																											"type": "string",
																											"example": "1"
																										},
																										"extra_data": {
																											"type": "string",
																											"format": "hex",
																											"description": "Extra data on the execution (Ethereum 1) network.",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{0,64}$"
																										},
																										"base_fee_per_gas": {
																											"type": "string",
																											"example": "1"
																										},
																										"block_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"transactions_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							]
																						}
																					}
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												{
													"type": "object",
													"description": "A variant of the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Capella spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
													"properties": {
														"message": {
															"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body": {
																			"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec, which contains a transactions root rather than a full transactions list.",
																			"allOf": [
																				{
																					"type": "object",
																					"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
																					"properties": {
																						"randao_reveal": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								},
																								{
																									"description": "The RanDAO reveal value provided by the validator."
																								}
																							]
																						},
																						"eth1_data": {
																							"type": "object",
																							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																							"properties": {
																								"deposit_root": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Root of the deposit tree."
																										}
																									]
																								},
																								"deposit_count": {
																									"allOf": [
																										{
																											"type": "string",
																											"example": "1"
																										},
																										{
																											"description": "Total number of deposits."
																										}
																									]
																								},
																								"block_hash": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										{
																											"description": "Ethereum 1.x block hash."
																										}
																									]
																								}
																							}
																						},
																						"graffiti": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						"proposer_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																								"properties": {
																									"signed_header_1": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									},
																									"signed_header_2": {
																										"type": "object",
																										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																										"properties": {
																											"message": {
																												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																												"allOf": [
																													{
																														"type": "object",
																														"properties": {
																															"slot": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "The slot to which this block corresponds."
																																	}
																																]
																															},
																															"proposer_index": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"example": "1"
																																	},
																																	{
																																		"description": "Index of validator in validator registry."
																																	}
																																]
																															},
																															"parent_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The signing merkle root of the parent `BeaconBlock`."
																																	}
																																]
																															},
																															"state_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																																	}
																																]
																															}
																														}
																													},
																													{
																														"type": "object",
																														"properties": {
																															"body_root": {
																																"allOf": [
																																	{
																																		"type": "string",
																																		"format": "hex",
																																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																		"pattern": "^0x[a-fA-F0-9]{64}$"
																																	},
																																	{
																																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																																	}
																																]
																															}
																														}
																													}
																												]
																											},
																											"signature": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											}
																										}
																									}
																								}
																							}
																						},
																						"attester_slashings": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																								"properties": {
																									"attestation_1": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									},
																									"attestation_2": {
																										"type": "object",
																										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																										"properties": {
																											"attesting_indices": {
																												"type": "array",
																												"maxItems": 2048,
																												"description": "Attesting validator indices",
																												"items": {
																													"type": "string",
																													"example": "1"
																												}
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																													}
																												]
																											},
																											"data": {
																												"type": "object",
																												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																												"properties": {
																													"slot": {
																														"type": "string",
																														"example": "1"
																													},
																													"index": {
																														"type": "string",
																														"example": "1"
																													},
																													"beacon_block_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "LMD GHOST vote."
																															}
																														]
																													},
																													"source": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													},
																													"target": {
																														"type": "object",
																														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																														"properties": {
																															"epoch": {
																																"type": "string",
																																"example": "1"
																															},
																															"root": {
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"attestations": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																								"properties": {
																									"aggregation_bits": {
																										"description": "Attester aggregation bits.",
																										"type": "string",
																										"format": "hex",
																										"example": "0x01",
																										"pattern": "^0x[a-fA-F0-9]+$"
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "BLS aggregate signature."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						},
																						"deposits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																								"properties": {
																									"proof": {
																										"type": "array",
																										"description": "Branch in the deposit tree.",
																										"items": {
																											"allOf": [
																												{
																													"type": "string",
																													"format": "hex",
																													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																													"pattern": "^0x[a-fA-F0-9]{64}$"
																												}
																											]
																										},
																										"minItems": 32,
																										"maxItems": 32
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																										"properties": {
																											"pubkey": {
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{96}$",
																												"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																												"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																											},
																											"withdrawal_credentials": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The withdrawal credentials."
																													}
																												]
																											},
																											"amount": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Amount in Gwei."
																													}
																												]
																											},
																											"signature": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"pattern": "^0x[a-fA-F0-9]{192}$",
																														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																													},
																													{
																														"description": "Container self-signature."
																													}
																												]
																											}
																										}
																									}
																								}
																							}
																						},
																						"voluntary_exits": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																								"properties": {
																									"message": {
																										"type": "object",
																										"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																										"properties": {
																											"epoch": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Minimum epoch for processing exit."
																													}
																												]
																											},
																											"validator_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of the exiting validator."
																													}
																												]
																											}
																										}
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						},
																						"sync_aggregate": {
																							"type": "object",
																							"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																							"properties": {
																								"sync_committee_bits": {
																									"description": "Aggregation bits of sync",
																									"type": "string",
																									"format": "hex",
																									"example": "0x01",
																									"pattern": "^0x[a-fA-F0-9]+$"
																								},
																								"sync_committee_signature": {
																									"type": "string",
																									"format": "hex",
																									"pattern": "^0x[a-fA-F0-9]{192}$",
																									"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																								}
																							}
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"execution_payload_header": {
																							"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																							"allOf": [
																								{
																									"type": "object",
																									"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																									"properties": {
																										"parent_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"fee_recipient": {
																											"type": "string",
																											"format": "hex",
																											"description": "An address on the execution (Ethereum 1) network.",
																											"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																											"pattern": "^0x[a-fA-F0-9]{40}$"
																										},
																										"state_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"receipts_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"logs_bloom": {
																											"type": "string",
																											"format": "hex",
																											"example": "0x
																											"pattern": "^0x[a-fA-F0-9]{512}$"
																										},
																										"prev_randao": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"block_number": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_limit": {
																											"type": "string",
																											"example": "1"
																										},
																										"gas_used": {
																											"type": "string",
																											"example": "1"
																										},
																										"timestamp": {
																											"type": "string",
																											"example": "1"
																										},
																										"extra_data": {
																											"type": "string",
																											"format": "hex",
																											"description": "Extra data on the execution (Ethereum 1) network.",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{0,64}$"
																										},
																										"base_fee_per_gas": {
																											"type": "string",
																											"example": "1"
																										},
																										"block_hash": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								},
																								{
																									"type": "object",
																									"properties": {
																										"transactions_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										},
																										"withdrawals_root": {
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									}
																								}
																							]
																						},
																						"bls_to_execution_changes": {
																							"type": "array",
																							"items": {
																								"type": "object",
																								"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
																								"properties": {
																									"message": {
																										"type": "object",
																										"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																										"properties": {
																											"validator_index": {
																												"description": "Index of the validator for which credentials will be changed.",
																												"type": "string",
																												"example": "1"
																											},
																											"from_bls_pubkey": {
																												"description": "Public key of existing credentials.",
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{96}$",
																												"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																											},
																											"to_execution_address": {
																												"description": "Execution address to which the credentials will be changed.",
																												"type": "string",
																												"format": "hex",
																												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																												"pattern": "^0x[a-fA-F0-9]{40}$"
																											}
																										}
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized block bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"400": {
						"description": "The block ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 400,
												"message": "Invalid block ID: current"
											}
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "Block not found",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 404,
												"message": "Block not found"
											}
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/light_client/bootstrap/{block_root}": {
			"get": {
				"operationId": "getLightClientBootstrap",
				"summary": "Get `LightClientBootstrap` structure for a requested block root",
				"description": "Requests the [`LightClientBootstrap`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#lightclientbootstrap) structure corresponding to a given post-Altair beacon block root.\nDepending on the `Accept` header it can be returned either as JSON or SSZ-serialized bytes.\n\nServers SHOULD provide results as defined in [`create_light_client_bootstrap`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/full-node.md#create_light_client_bootstrap). To fulfill a request, the requested block's post state needs to be known.\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "block_root",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"description": "Block root.\n\\<hex encoded blockRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "GetLightClientBootstrapResponse",
									"type": "object",
									"properties": {
										"version": {
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"data": {
											"oneOf": [
												{
													"type": "object",
													"properties": {
														"header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														"current_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"current_sync_committee_branch": {
															"type": "array",
															"items": {
																"description": "Merkle proof consisting of [`log2trunc(CURRENT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"minItems": 5,
															"maxItems": 5
														}
													}
												},
												{
													"type": "object",
													"properties": {
														"header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"execution": {
																	"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																			"properties": {
																				"parent_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"fee_recipient": {
																					"type": "string",
																					"format": "hex",
																					"description": "An address on the execution (Ethereum 1) network.",
																					"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																					"pattern": "^0x[a-fA-F0-9]{40}$"
																				},
																				"state_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"receipts_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"logs_bloom": {
																					"type": "string",
																					"format": "hex",
																					"example": "0x
																					"pattern": "^0x[a-fA-F0-9]{512}$"
																				},
																				"prev_randao": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"block_number": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_limit": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_used": {
																					"type": "string",
																					"example": "1"
																				},
																				"timestamp": {
																					"type": "string",
																					"example": "1"
																				},
																				"extra_data": {
																					"type": "string",
																					"format": "hex",
																					"description": "Extra data on the execution (Ethereum 1) network.",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{0,64}$"
																				},
																				"base_fee_per_gas": {
																					"type": "string",
																					"example": "1"
																				},
																				"block_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"transactions_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"withdrawals_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	]
																},
																"execution_branch": {
																	"type": "array",
																	"items": {
																		"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"minItems": 4,
																	"maxItems": 4
																}
															}
														},
														"current_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"current_sync_committee_branch": {
															"type": "array",
															"items": {
																"description": "Merkle proof consisting of [`log2trunc(CURRENT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"minItems": 5,
															"maxItems": 5
														}
													}
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized `LightClientBootstrap` bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"400": {
						"description": "Malformed request parameter",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid block root value"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "`LightClientBootstrap` instance cannot be produced for the given block root",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "LC bootstrap unavailable"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"406": {
						"description": "Unacceptable media type",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 406,
										"message": "Accepted media type not supported"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/light_client/updates": {
			"get": {
				"operationId": "getLightClientUpdatesByRange",
				"summary": "Get `LightClientUpdate` instances in a requested sync committee period range",
				"description": "Requests the [`LightClientUpdate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#lightclientupdate) instances in the sync committee period range `[start_period, start_period + count)`, leading up to the current head sync committee period as selected by fork choice.\nDepending on the `Accept` header they can be returned either as JSON or SSZ-serialized bytes.\n\nServers SHOULD provide results as defined in [`create_light_client_update`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/full-node.md#create_light_client_update). They MUST respond with at least the earliest known result within the requested range, and MUST send results in consecutive order (by period). The response MUST NOT contain more than [`min(MAX_REQUEST_LIGHT_CLIENT_UPDATES, count)`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/p2p-interface.md#configuration) results.\n",
				"tags": ["Beacon"],
				"parameters": [
					{
						"name": "start_period",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "count",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetLightClientUpdatesByRangeResponse",
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"version": {
												"enum": ["phase0", "altair", "bellatrix", "capella"],
												"example": "phase0"
											},
											"data": {
												"oneOf": [
													{
														"type": "object",
														"properties": {
															"attested_header": {
																"type": "object",
																"properties": {
																	"beacon": {
																		"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																		"allOf": [
																			{
																				"type": "object",
																				"properties": {
																					"slot": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "The slot to which this block corresponds."
																							}
																						]
																					},
																					"proposer_index": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Index of validator in validator registry."
																							}
																						]
																					},
																					"parent_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The signing merkle root of the parent `BeaconBlock`."
																							}
																						]
																					},
																					"state_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																							}
																						]
																					}
																				}
																			},
																			{
																				"type": "object",
																				"properties": {
																					"body_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																							}
																						]
																					}
																				}
																			}
																		]
																	}
																}
															},
															"next_sync_committee": {
																"type": "object",
																"properties": {
																	"pubkeys": {
																		"type": "array",
																		"items": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{96}$",
																					"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																					"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																				}
																			]
																		},
																		"minItems": 512,
																		"maxItems": 512
																	},
																	"aggregate_pubkey": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{96}$",
																		"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																		"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																	}
																}
															},
															"next_sync_committee_branch": {
																"type": "array",
																"items": {
																	"description": "Merkle proof consisting of [`log2trunc(NEXT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																"minItems": 5,
																"maxItems": 5
															},
															"finalized_header": {
																"type": "object",
																"properties": {
																	"beacon": {
																		"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																		"allOf": [
																			{
																				"type": "object",
																				"properties": {
																					"slot": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "The slot to which this block corresponds."
																							}
																						]
																					},
																					"proposer_index": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Index of validator in validator registry."
																							}
																						]
																					},
																					"parent_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The signing merkle root of the parent `BeaconBlock`."
																							}
																						]
																					},
																					"state_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																							}
																						]
																					}
																				}
																			},
																			{
																				"type": "object",
																				"properties": {
																					"body_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																							}
																						]
																					}
																				}
																			}
																		]
																	}
																}
															},
															"finality_branch": {
																"type": "array",
																"items": {
																	"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																"minItems": 6,
																"maxItems": 6
															},
															"sync_aggregate": {
																"type": "object",
																"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																"properties": {
																	"sync_committee_bits": {
																		"description": "Aggregation bits of sync",
																		"type": "string",
																		"format": "hex",
																		"example": "0x01",
																		"pattern": "^0x[a-fA-F0-9]+$"
																	},
																	"sync_committee_signature": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{192}$",
																		"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																	}
																}
															},
															"signature_slot": {
																"type": "string",
																"example": "1"
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"attested_header": {
																"type": "object",
																"properties": {
																	"beacon": {
																		"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																		"allOf": [
																			{
																				"type": "object",
																				"properties": {
																					"slot": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "The slot to which this block corresponds."
																							}
																						]
																					},
																					"proposer_index": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Index of validator in validator registry."
																							}
																						]
																					},
																					"parent_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The signing merkle root of the parent `BeaconBlock`."
																							}
																						]
																					},
																					"state_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																							}
																						]
																					}
																				}
																			},
																			{
																				"type": "object",
																				"properties": {
																					"body_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																							}
																						]
																					}
																				}
																			}
																		]
																	},
																	"execution": {
																		"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																		"allOf": [
																			{
																				"type": "object",
																				"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																				"properties": {
																					"parent_hash": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"fee_recipient": {
																						"type": "string",
																						"format": "hex",
																						"description": "An address on the execution (Ethereum 1) network.",
																						"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																						"pattern": "^0x[a-fA-F0-9]{40}$"
																					},
																					"state_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"receipts_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"logs_bloom": {
																						"type": "string",
																						"format": "hex",
																						"example": "0x
																						"pattern": "^0x[a-fA-F0-9]{512}$"
																					},
																					"prev_randao": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"block_number": {
																						"type": "string",
																						"example": "1"
																					},
																					"gas_limit": {
																						"type": "string",
																						"example": "1"
																					},
																					"gas_used": {
																						"type": "string",
																						"example": "1"
																					},
																					"timestamp": {
																						"type": "string",
																						"example": "1"
																					},
																					"extra_data": {
																						"type": "string",
																						"format": "hex",
																						"description": "Extra data on the execution (Ethereum 1) network.",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{0,64}$"
																					},
																					"base_fee_per_gas": {
																						"type": "string",
																						"example": "1"
																					},
																					"block_hash": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			},
																			{
																				"type": "object",
																				"properties": {
																					"transactions_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"withdrawals_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			}
																		]
																	},
																	"execution_branch": {
																		"type": "array",
																		"items": {
																			"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"minItems": 4,
																		"maxItems": 4
																	}
																}
															},
															"next_sync_committee": {
																"type": "object",
																"properties": {
																	"pubkeys": {
																		"type": "array",
																		"items": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{96}$",
																					"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																					"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																				}
																			]
																		},
																		"minItems": 512,
																		"maxItems": 512
																	},
																	"aggregate_pubkey": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{96}$",
																		"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																		"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																	}
																}
															},
															"next_sync_committee_branch": {
																"type": "array",
																"items": {
																	"description": "Merkle proof consisting of [`log2trunc(NEXT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																"minItems": 5,
																"maxItems": 5
															},
															"finalized_header": {
																"type": "object",
																"properties": {
																	"beacon": {
																		"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																		"allOf": [
																			{
																				"type": "object",
																				"properties": {
																					"slot": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "The slot to which this block corresponds."
																							}
																						]
																					},
																					"proposer_index": {
																						"allOf": [
																							{
																								"type": "string",
																								"example": "1"
																							},
																							{
																								"description": "Index of validator in validator registry."
																							}
																						]
																					},
																					"parent_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The signing merkle root of the parent `BeaconBlock`."
																							}
																						]
																					},
																					"state_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																							}
																						]
																					}
																				}
																			},
																			{
																				"type": "object",
																				"properties": {
																					"body_root": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																								"pattern": "^0x[a-fA-F0-9]{64}$"
																							},
																							{
																								"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																							}
																						]
																					}
																				}
																			}
																		]
																	},
																	"execution": {
																		"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																		"allOf": [
																			{
																				"type": "object",
																				"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																				"properties": {
																					"parent_hash": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"fee_recipient": {
																						"type": "string",
																						"format": "hex",
																						"description": "An address on the execution (Ethereum 1) network.",
																						"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																						"pattern": "^0x[a-fA-F0-9]{40}$"
																					},
																					"state_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"receipts_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"logs_bloom": {
																						"type": "string",
																						"format": "hex",
																						"example": "0x
																						"pattern": "^0x[a-fA-F0-9]{512}$"
																					},
																					"prev_randao": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"block_number": {
																						"type": "string",
																						"example": "1"
																					},
																					"gas_limit": {
																						"type": "string",
																						"example": "1"
																					},
																					"gas_used": {
																						"type": "string",
																						"example": "1"
																					},
																					"timestamp": {
																						"type": "string",
																						"example": "1"
																					},
																					"extra_data": {
																						"type": "string",
																						"format": "hex",
																						"description": "Extra data on the execution (Ethereum 1) network.",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{0,64}$"
																					},
																					"base_fee_per_gas": {
																						"type": "string",
																						"example": "1"
																					},
																					"block_hash": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			},
																			{
																				"type": "object",
																				"properties": {
																					"transactions_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					"withdrawals_root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			}
																		]
																	},
																	"execution_branch": {
																		"type": "array",
																		"items": {
																			"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"minItems": 4,
																		"maxItems": 4
																	}
																}
															},
															"finality_branch": {
																"type": "array",
																"items": {
																	"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																"minItems": 6,
																"maxItems": 6
															},
															"sync_aggregate": {
																"type": "object",
																"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																"properties": {
																	"sync_committee_bits": {
																		"description": "Aggregation bits of sync",
																		"type": "string",
																		"format": "hex",
																		"example": "0x01",
																		"pattern": "^0x[a-fA-F0-9]+$"
																	},
																	"sync_committee_signature": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{192}$",
																		"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																	}
																}
															},
															"signature_slot": {
																"type": "string",
																"example": "1"
															}
														}
													}
												]
											}
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "Sequence of zero or more `response_chunk`. Each _successful_ `response_chunk` MUST contain a single `LightClientUpdate` payload:\n```\n(\n  response_chunk_len: Little-endian Uint64 byte length of `response_chunk`\n  response_chunk: (\n    context: 4 byte `ForkDigest`\n    payload: SSZ serialized payload bytes\n  )\n)\n```\nUse Accept header to choose this response type\n\nFor each `response_chunk`, a `ForkDigest`-context based on `compute_fork_version(compute_epoch_at_slot(update.attested_header.beacon.slot))` is used to select the fork namespace of the Response type. Note that this `fork_version` may be different from the one used to verify the `update.sync_aggregate`, which is based on `update.signature_slot`.\n\nPer `context = compute_fork_digest(fork_version, genesis_validators_root)`:\n\n| `fork_version`                                                      | Response chunk SSZ type               |\n| ------------------------------------------------------------------- | ------------------------------------- |\n| `GENESIS_FORK_VERSION`                                              | n/a                                   |\n| <nobr>`ALTAIR_FORK_VERSION` through `BELLATRIX_FORK_VERSION`</nobr> | `altair.LightClientUpdate`            |\n| <nobr>`CAPELLA_FORK_VERSION` and later</nobr>                       | `capella.LightClientUpdate`           |\n"
								}
							}
						}
					},
					"400": {
						"description": "Malformed or missing request parameter",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidSyncPeriod": {
										"value": {
											"code": 400,
											"message": "Invalid sync committee period requested"
										}
									},
									"InvalidCount": {
										"value": {
											"code": 400,
											"message": "Invalid count requested"
										}
									},
									"MissingStartPeriodValue": {
										"value": {
											"code": 400,
											"message": "Missing `start_period` value"
										}
									},
									"MissingCountValue": {
										"value": {
											"code": 400,
											"message": "Missing `count` value"
										}
									}
								}
							}
						}
					},
					"406": {
						"description": "Unacceptable media type",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 406,
										"message": "Accepted media type not supported"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/light_client/finality_update": {
			"get": {
				"operationId": "getLightClientFinalityUpdate",
				"summary": "Get the latest known `LightClientFinalityUpdate`",
				"description": "Requests the latest [`LightClientFinalityUpdate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#lightclientfinalityupdate) known by the server.\nDepending on the `Accept` header it can be returned either as JSON or SSZ-serialized bytes.\n\nServers SHOULD provide results as defined in [`create_light_client_finality_update`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/full-node.md#create_light_client_finality_update).\n",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "GetLightClientFinalityUpdateResponse",
									"type": "object",
									"properties": {
										"version": {
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"data": {
											"oneOf": [
												{
													"type": "object",
													"properties": {
														"attested_header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														"finalized_header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														"finality_branch": {
															"type": "array",
															"items": {
																"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"minItems": 6,
															"maxItems": 6
														},
														"sync_aggregate": {
															"type": "object",
															"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
															"properties": {
																"sync_committee_bits": {
																	"description": "Aggregation bits of sync",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"sync_committee_signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signature_slot": {
															"type": "string",
															"example": "1"
														}
													}
												},
												{
													"type": "object",
													"properties": {
														"attested_header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"execution": {
																	"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																			"properties": {
																				"parent_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"fee_recipient": {
																					"type": "string",
																					"format": "hex",
																					"description": "An address on the execution (Ethereum 1) network.",
																					"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																					"pattern": "^0x[a-fA-F0-9]{40}$"
																				},
																				"state_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"receipts_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"logs_bloom": {
																					"type": "string",
																					"format": "hex",
																					"example": "0x
																					"pattern": "^0x[a-fA-F0-9]{512}$"
																				},
																				"prev_randao": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"block_number": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_limit": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_used": {
																					"type": "string",
																					"example": "1"
																				},
																				"timestamp": {
																					"type": "string",
																					"example": "1"
																				},
																				"extra_data": {
																					"type": "string",
																					"format": "hex",
																					"description": "Extra data on the execution (Ethereum 1) network.",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{0,64}$"
																				},
																				"base_fee_per_gas": {
																					"type": "string",
																					"example": "1"
																				},
																				"block_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"transactions_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"withdrawals_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	]
																},
																"execution_branch": {
																	"type": "array",
																	"items": {
																		"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"minItems": 4,
																	"maxItems": 4
																}
															}
														},
														"finalized_header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"execution": {
																	"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																			"properties": {
																				"parent_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"fee_recipient": {
																					"type": "string",
																					"format": "hex",
																					"description": "An address on the execution (Ethereum 1) network.",
																					"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																					"pattern": "^0x[a-fA-F0-9]{40}$"
																				},
																				"state_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"receipts_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"logs_bloom": {
																					"type": "string",
																					"format": "hex",
																					"example": "0x
																					"pattern": "^0x[a-fA-F0-9]{512}$"
																				},
																				"prev_randao": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"block_number": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_limit": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_used": {
																					"type": "string",
																					"example": "1"
																				},
																				"timestamp": {
																					"type": "string",
																					"example": "1"
																				},
																				"extra_data": {
																					"type": "string",
																					"format": "hex",
																					"description": "Extra data on the execution (Ethereum 1) network.",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{0,64}$"
																				},
																				"base_fee_per_gas": {
																					"type": "string",
																					"example": "1"
																				},
																				"block_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"transactions_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"withdrawals_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	]
																},
																"execution_branch": {
																	"type": "array",
																	"items": {
																		"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"minItems": 4,
																	"maxItems": 4
																}
															}
														},
														"finality_branch": {
															"type": "array",
															"items": {
																"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"minItems": 6,
															"maxItems": 6
														},
														"sync_aggregate": {
															"type": "object",
															"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
															"properties": {
																"sync_committee_bits": {
																	"description": "Aggregation bits of sync",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"sync_committee_signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signature_slot": {
															"type": "string",
															"example": "1"
														}
													}
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized `LightClientFinalityUpdate` bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"404": {
						"description": "No `LightClientFinalityUpdate` is available",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "LC finality update unavailable"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"406": {
						"description": "Unacceptable media type",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 406,
										"message": "Accepted media type not supported"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/light_client/optimistic_update": {
			"get": {
				"operationId": "getLightClientOptimisticUpdate",
				"summary": "Get the latest known `LightClientOptimisticUpdate`",
				"description": "Requests the latest [`LightClientOptimisticUpdate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#lightclientoptimisticupdate) known by the server.\nDepending on the `Accept` header it can be returned either as JSON or SSZ-serialized bytes.\n\nServers SHOULD provide results as defined in [`create_light_client_optimistic_update`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/full-node.md#create_light_client_optimistic_update).\n",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "GetLightClientOptimisticUpdateResponse",
									"type": "object",
									"properties": {
										"version": {
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"data": {
											"oneOf": [
												{
													"type": "object",
													"properties": {
														"attested_header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														"sync_aggregate": {
															"type": "object",
															"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
															"properties": {
																"sync_committee_bits": {
																	"description": "Aggregation bits of sync",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"sync_committee_signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signature_slot": {
															"type": "string",
															"example": "1"
														}
													}
												},
												{
													"type": "object",
													"properties": {
														"attested_header": {
															"type": "object",
															"properties": {
																"beacon": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"execution": {
																	"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																			"properties": {
																				"parent_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"fee_recipient": {
																					"type": "string",
																					"format": "hex",
																					"description": "An address on the execution (Ethereum 1) network.",
																					"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																					"pattern": "^0x[a-fA-F0-9]{40}$"
																				},
																				"state_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"receipts_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"logs_bloom": {
																					"type": "string",
																					"format": "hex",
																					"example": "0x
																					"pattern": "^0x[a-fA-F0-9]{512}$"
																				},
																				"prev_randao": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"block_number": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_limit": {
																					"type": "string",
																					"example": "1"
																				},
																				"gas_used": {
																					"type": "string",
																					"example": "1"
																				},
																				"timestamp": {
																					"type": "string",
																					"example": "1"
																				},
																				"extra_data": {
																					"type": "string",
																					"format": "hex",
																					"description": "Extra data on the execution (Ethereum 1) network.",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{0,64}$"
																				},
																				"base_fee_per_gas": {
																					"type": "string",
																					"example": "1"
																				},
																				"block_hash": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"transactions_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"withdrawals_root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	]
																},
																"execution_branch": {
																	"type": "array",
																	"items": {
																		"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"minItems": 4,
																	"maxItems": 4
																}
															}
														},
														"sync_aggregate": {
															"type": "object",
															"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
															"properties": {
																"sync_committee_bits": {
																	"description": "Aggregation bits of sync",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"sync_committee_signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signature_slot": {
															"type": "string",
															"example": "1"
														}
													}
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized `LightClientOptimisticUpdate` bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"404": {
						"description": "No `LightClientOptimisticUpdate` is available",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "LC optimistic update unavailable"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"406": {
						"description": "Unacceptable media type",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 406,
										"message": "Accepted media type not supported"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/pool/attestations": {
			"get": {
				"operationId": "getPoolAttestations",
				"summary": "Get Attestations from operations pool",
				"description": "Retrieves attestations known by the node but not necessarily incorporated into any block",
				"parameters": [
					{
						"name": "slot",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "committee_index",
						"in": "query",
						"required": false,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPoolAttestationsResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
												"properties": {
													"aggregation_bits": {
														"description": "Attester aggregation bits.",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"signature": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "BLS aggregate signature."
															}
														]
													},
													"data": {
														"type": "object",
														"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
														"properties": {
															"slot": {
																"type": "string",
																"example": "1"
															},
															"index": {
																"type": "string",
																"example": "1"
															},
															"beacon_block_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "LMD GHOST vote."
																	}
																]
															},
															"source": {
																"type": "object",
																"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																"properties": {
																	"epoch": {
																		"type": "string",
																		"example": "1"
																	},
																	"root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															},
															"target": {
																"type": "object",
																"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																"properties": {
																	"epoch": {
																		"type": "string",
																		"example": "1"
																	},
																	"root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The slot or committee index could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid slot: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			},
			"post": {
				"operationId": "submitPoolAttestations",
				"summary": "Submit Attestation objects to node",
				"description": "Submits Attestation objects to the node.  Each attestation in the request body is processed individually.\n\nIf an attestation is validated successfully the node MUST publish that attestation on the appropriate subnet.\n\nIf one or more attestations fail validation the node MUST return a 400 error with details of which attestations have failed, and why.\n",
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
									"properties": {
										"aggregation_bits": {
											"description": "Attester aggregation bits.",
											"type": "string",
											"format": "hex",
											"example": "0x01",
											"pattern": "^0x[a-fA-F0-9]+$"
										},
										"signature": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{192}$",
													"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
												},
												{
													"description": "BLS aggregate signature."
												}
											]
										},
										"data": {
											"type": "object",
											"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
											"properties": {
												"slot": {
													"type": "string",
													"example": "1"
												},
												"index": {
													"type": "string",
													"example": "1"
												},
												"beacon_block_root": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														{
															"description": "LMD GHOST vote."
														}
													]
												},
												"source": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												},
												"target": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Attestations are stored in pool and broadcast on appropriate subnet"
					},
					"400": {
						"description": "Errors with one or more attestations",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string",
											"example": "some failures"
										},
										"failures": {
											"description": "List of individual items that have failed",
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"description": "Index of item in the request list that caused the error",
														"type": "number",
														"example": 3
													},
													"message": {
														"description": "Message describing error",
														"type": "string",
														"example": "invalid signature"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/pool/attester_slashings": {
			"get": {
				"operationId": "getPoolAttesterSlashings",
				"summary": "Get AttesterSlashings from operations pool",
				"description": "Retrieves attester slashings known by the node but not necessarily incorporated into any block",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPoolAttesterSlashingsResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
												"properties": {
													"attestation_1": {
														"type": "object",
														"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
														"properties": {
															"attesting_indices": {
																"type": "array",
																"maxItems": 2048,
																"description": "Attesting validator indices",
																"items": {
																	"type": "string",
																	"example": "1"
																}
															},
															"signature": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{192}$",
																		"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																	},
																	{
																		"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																	}
																]
															},
															"data": {
																"type": "object",
																"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																"properties": {
																	"slot": {
																		"type": "string",
																		"example": "1"
																	},
																	"index": {
																		"type": "string",
																		"example": "1"
																	},
																	"beacon_block_root": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "LMD GHOST vote."
																			}
																		]
																	},
																	"source": {
																		"type": "object",
																		"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																		"properties": {
																			"epoch": {
																				"type": "string",
																				"example": "1"
																			},
																			"root": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		}
																	},
																	"target": {
																		"type": "object",
																		"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																		"properties": {
																			"epoch": {
																				"type": "string",
																				"example": "1"
																			},
																			"root": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		}
																	}
																}
															}
														}
													},
													"attestation_2": {
														"type": "object",
														"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
														"properties": {
															"attesting_indices": {
																"type": "array",
																"maxItems": 2048,
																"description": "Attesting validator indices",
																"items": {
																	"type": "string",
																	"example": "1"
																}
															},
															"signature": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{192}$",
																		"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																	},
																	{
																		"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																	}
																]
															},
															"data": {
																"type": "object",
																"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																"properties": {
																	"slot": {
																		"type": "string",
																		"example": "1"
																	},
																	"index": {
																		"type": "string",
																		"example": "1"
																	},
																	"beacon_block_root": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "LMD GHOST vote."
																			}
																		]
																	},
																	"source": {
																		"type": "object",
																		"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																		"properties": {
																			"epoch": {
																				"type": "string",
																				"example": "1"
																			},
																			"root": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		}
																	},
																	"target": {
																		"type": "object",
																		"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																		"properties": {
																			"epoch": {
																				"type": "string",
																				"example": "1"
																			},
																			"root": {
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			},
			"post": {
				"operationId": "submitPoolAttesterSlashings",
				"summary": "Submit AttesterSlashing object to node's pool",
				"description": "Submits AttesterSlashing object to node's pool and if passes validation node MUST broadcast it to network.",
				"tags": ["Beacon"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
								"properties": {
									"attestation_1": {
										"type": "object",
										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
										"properties": {
											"attesting_indices": {
												"type": "array",
												"maxItems": 2048,
												"description": "Attesting validator indices",
												"items": {
													"type": "string",
													"example": "1"
												}
											},
											"signature": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
													}
												]
											},
											"data": {
												"type": "object",
												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
												"properties": {
													"slot": {
														"type": "string",
														"example": "1"
													},
													"index": {
														"type": "string",
														"example": "1"
													},
													"beacon_block_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "LMD GHOST vote."
															}
														]
													},
													"source": {
														"type": "object",
														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
														"properties": {
															"epoch": {
																"type": "string",
																"example": "1"
															},
															"root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													"target": {
														"type": "object",
														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
														"properties": {
															"epoch": {
																"type": "string",
																"example": "1"
															},
															"root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													}
												}
											}
										}
									},
									"attestation_2": {
										"type": "object",
										"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
										"properties": {
											"attesting_indices": {
												"type": "array",
												"maxItems": 2048,
												"description": "Attesting validator indices",
												"items": {
													"type": "string",
													"example": "1"
												}
											},
											"signature": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
													}
												]
											},
											"data": {
												"type": "object",
												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
												"properties": {
													"slot": {
														"type": "string",
														"example": "1"
													},
													"index": {
														"type": "string",
														"example": "1"
													},
													"beacon_block_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "LMD GHOST vote."
															}
														]
													},
													"source": {
														"type": "object",
														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
														"properties": {
															"epoch": {
																"type": "string",
																"example": "1"
															},
															"root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													"target": {
														"type": "object",
														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
														"properties": {
															"epoch": {
																"type": "string",
																"example": "1"
															},
															"root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Invalid attester slashing",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid attester slashing, it will never pass validation so it's rejected"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/pool/proposer_slashings": {
			"get": {
				"operationId": "getPoolProposerSlashings",
				"summary": "Get ProposerSlashings from operations pool",
				"description": "Retrieves proposer slashings known by the node but not necessarily incorporated into any block",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPoolProposerSlashingsResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
												"properties": {
													"signed_header_1": {
														"type": "object",
														"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
														"properties": {
															"message": {
																"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																"allOf": [
																	{
																		"type": "object",
																		"properties": {
																			"slot": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "The slot to which this block corresponds."
																					}
																				]
																			},
																			"proposer_index": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Index of validator in validator registry."
																					}
																				]
																			},
																			"parent_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The signing merkle root of the parent `BeaconBlock`."
																					}
																				]
																			},
																			"state_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																					}
																				]
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"body_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																					}
																				]
																			}
																		}
																	}
																]
															},
															"signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													},
													"signed_header_2": {
														"type": "object",
														"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
														"properties": {
															"message": {
																"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																"allOf": [
																	{
																		"type": "object",
																		"properties": {
																			"slot": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "The slot to which this block corresponds."
																					}
																				]
																			},
																			"proposer_index": {
																				"allOf": [
																					{
																						"type": "string",
																						"example": "1"
																					},
																					{
																						"description": "Index of validator in validator registry."
																					}
																				]
																			},
																			"parent_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The signing merkle root of the parent `BeaconBlock`."
																					}
																				]
																			},
																			"state_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																					}
																				]
																			}
																		}
																	},
																	{
																		"type": "object",
																		"properties": {
																			"body_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																					}
																				]
																			}
																		}
																	}
																]
															},
															"signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			},
			"post": {
				"operationId": "submitPoolProposerSlashings",
				"summary": "Submit ProposerSlashing object to node's pool",
				"description": "Submits ProposerSlashing object to node's pool and if passes validation  node MUST broadcast it to network.",
				"tags": ["Beacon"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
								"properties": {
									"signed_header_1": {
										"type": "object",
										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																	}
																]
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									},
									"signed_header_2": {
										"type": "object",
										"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
										"properties": {
											"message": {
												"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
												"allOf": [
													{
														"type": "object",
														"properties": {
															"slot": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "The slot to which this block corresponds."
																	}
																]
															},
															"proposer_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of validator in validator registry."
																	}
																]
															},
															"parent_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The signing merkle root of the parent `BeaconBlock`."
																	}
																]
															},
															"state_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																	}
																]
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"body_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																	}
																]
															}
														}
													}
												]
											},
											"signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success"
					},
					"400": {
						"description": "Invalid proposer slashing",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid proposer slashing, it will never pass validation so it's rejected"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/pool/sync_committees": {
			"post": {
				"operationId": "submitPoolSyncCommitteeSignatures",
				"summary": "Submit sync committee signatures to node",
				"description": "Submits sync committee signature objects to the node.\n\nSync committee signatures are not present in phase0, but are required for Altair networks.\n\nIf a sync committee signature is validated successfully the node MUST publish that sync committee signature on all applicable subnets.\n\nIf one or more sync committee signatures fail validation the node MUST return a 400 error with details of which sync committee signatures have failed, and why.\n",
				"tags": ["Beacon", "ValidatorRequiredApi"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"slot": {
											"type": "string",
											"example": "1"
										},
										"beacon_block_root": {
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										"validator_index": {
											"type": "string",
											"example": "1"
										},
										"signature": {
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{192}$",
											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Sync committee signatures are stored in pool and broadcast on appropriate subnet"
					},
					"400": {
						"description": "Errors with one or more sync committee signatures",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string",
											"example": "some failures"
										},
										"failures": {
											"description": "List of individual items that have failed",
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"description": "Index of item in the request list that caused the error",
														"type": "number",
														"example": 3
													},
													"message": {
														"description": "Message describing error",
														"type": "string",
														"example": "invalid signature"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/pool/voluntary_exits": {
			"get": {
				"operationId": "getPoolVoluntaryExits",
				"summary": "Get SignedVoluntaryExit from operations pool",
				"description": "Retrieves voluntary exits known by the node but not necessarily incorporated into any block",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPoolVoluntaryExitsResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
												"properties": {
													"message": {
														"type": "object",
														"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
														"properties": {
															"epoch": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Minimum epoch for processing exit."
																	}
																]
															},
															"validator_index": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Index of the exiting validator."
																	}
																]
															}
														}
													},
													"signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			},
			"post": {
				"operationId": "submitPoolVoluntaryExit",
				"summary": "Submit SignedVoluntaryExit object to node's pool",
				"description": "Submits SignedVoluntaryExit object to node's pool and if passes validation node MUST broadcast it to network.",
				"tags": ["Beacon"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
								"properties": {
									"message": {
										"type": "object",
										"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
										"properties": {
											"epoch": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Minimum epoch for processing exit."
													}
												]
											},
											"validator_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of the exiting validator."
													}
												]
											}
										}
									},
									"signature": {
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{192}$",
										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Voluntary exit is stored in node and broadcasted to network"
					},
					"400": {
						"description": "Invalid voluntary exit",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid voluntary exit, it will never pass validation so it's rejected"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/beacon/pool/bls_to_execution_changes": {
			"get": {
				"operationId": "getPoolBLSToExecutionChanges",
				"summary": "Get SignedBLSToExecutionChange from operations pool",
				"description": "Retrieves BLS to execution changes known by the node but not necessarily incorporated into any block",
				"tags": ["Beacon"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPoolBLSToExecutionChangesResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
												"properties": {
													"message": {
														"type": "object",
														"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
														"properties": {
															"validator_index": {
																"description": "Index of the validator for which credentials will be changed.",
																"type": "string",
																"example": "1"
															},
															"from_bls_pubkey": {
																"description": "Public key of existing credentials.",
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{96}$",
																"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
															},
															"to_execution_address": {
																"description": "Execution address to which the credentials will be changed.",
																"type": "string",
																"format": "hex",
																"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																"pattern": "^0x[a-fA-F0-9]{40}$"
															}
														}
													},
													"signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			},
			"post": {
				"operationId": "submitPoolBLSToExecutionChange",
				"summary": "Submit SignedBLSToExecutionChange object to node's pool",
				"description": "Submits a list of SignedBLSToExecutionChange objects to node's pool. Any that pass validation MUST be broadcast to the network.",
				"tags": ["Beacon"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
									"properties": {
										"message": {
											"type": "object",
											"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
											"properties": {
												"validator_index": {
													"description": "Index of the validator for which credentials will be changed.",
													"type": "string",
													"example": "1"
												},
												"from_bls_pubkey": {
													"description": "Public key of existing credentials.",
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{96}$",
													"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
												},
												"to_execution_address": {
													"description": "Execution address to which the credentials will be changed.",
													"type": "string",
													"format": "hex",
													"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
													"pattern": "^0x[a-fA-F0-9]{40}$"
												}
											}
										},
										"signature": {
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{192}$",
											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Bls to execution changes were all stored to the pool and broadcast on the appropriate subnet."
					},
					"400": {
						"description": "Errors in one or more bls to execution changes",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string",
											"example": "some failures"
										},
										"failures": {
											"description": "List of individual items that have failed",
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"description": "Index of item in the request list that caused the error",
														"type": "number",
														"example": 3
													},
													"message": {
														"description": "Message describing error",
														"type": "string",
														"example": "invalid signature"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/builder/states/{state_id}/expected_withdrawals": {
			"get": {
				"operationId": "getNextWithdrawals",
				"summary": "Get the withdrawals that are to be included for the block built on the specified state.",
				"description": "Get the withdrawals computed from the specified state, that will be included in the block \nthat gets built on the specified state.\n",
				"tags": ["Builder"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					},
					{
						"name": "proposal_slot",
						"description": "The slot that a block is being built for, with the specified state as the parent. Defaults to the slot after the parent state if not specified.",
						"in": "query",
						"required": false,
						"allowEmptyValue": false,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetNextWithdrawalsResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"description": "The index of the withdrawal.",
														"type": "string",
														"example": "1"
													},
													"validator_index": {
														"description": "The index of the withdrawing validator.",
														"type": "string",
														"example": "1"
													},
													"address": {
														"description": "The address to which the withdrawal is credited.",
														"type": "string",
														"format": "hex",
														"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
														"pattern": "^0x[a-fA-F0-9]{40}$"
													},
													"amount": {
														"description": "The value withdrawn (gwei).",
														"type": "string",
														"example": "1"
													}
												}
											}
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized Withdrawals list. Use Accept header to choose this response type"
								}
							}
						}
					},
					"400": {
						"description": "An error occurred preparing the withdrawals from the specified state for the proposal slot.",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 400,
												"message": "The specified state is not a capella state."
											}
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										}
									]
								},
								"example": {
									"code": 404,
									"message": "State not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v2/debug/beacon/states/{state_id}": {
			"get": {
				"operationId": "getStateV2",
				"summary": "Get full BeaconState object",
				"description": "Returns full BeaconState object for given stateId.\nDepending on `Accept` header it can be returned either as json or as bytes serialized by SSZ\n",
				"tags": ["Debug"],
				"parameters": [
					{
						"name": "state_id",
						"in": "path",
						"required": true,
						"example": "head",
						"schema": {
							"type": "string"
						},
						"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "GetStateV2Response",
									"type": "object",
									"properties": {
										"version": {
											"type": "string",
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"finalized": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
												}
											]
										},
										"data": {
											"oneOf": [
												{
													"type": "object",
													"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
													"properties": {
														"genesis_time": {
															"type": "string",
															"example": "1"
														},
														"genesis_validators_root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														"slot": {
															"type": "string",
															"example": "1"
														},
														"fork": {
															"type": "object",
															"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
															"properties": {
																"previous_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"current_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"epoch": {
																	"type": "string",
																	"example": "1"
																}
															}
														},
														"latest_block_header": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"block_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"state_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"historical_roots": {
															"type": "array",
															"description": "Variable length list, maximum 16777216 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"eth1_data": {
															"type": "object",
															"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
															"properties": {
																"deposit_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Root of the deposit tree."
																		}
																	]
																},
																"deposit_count": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Total number of deposits."
																		}
																	]
																},
																"block_hash": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Ethereum 1.x block hash."
																		}
																	]
																}
															}
														},
														"eth1_data_votes": {
															"type": "array",
															"description": "Fixed length of 1024 items",
															"items": {
																"type": "object",
																"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																"properties": {
																	"deposit_root": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of the deposit tree."
																			}
																		]
																	},
																	"deposit_count": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Total number of deposits."
																			}
																		]
																	},
																	"block_hash": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Ethereum 1.x block hash."
																			}
																		]
																	}
																}
															}
														},
														"eth1_deposit_index": {
															"type": "string",
															"example": "1"
														},
														"validators": {
															"type": "array",
															"description": "Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "object",
																"properties": {
																	"pubkey": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{96}$",
																		"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																		"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																	},
																	"withdrawal_credentials": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of withdrawal credentials"
																			}
																		]
																	},
																	"effective_balance": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Balance at stake in Gwei."
																			}
																		]
																	},
																	"slashed": {
																		"type": "boolean",
																		"example": false,
																		"description": "Was validator slashed (not longer active)."
																	},
																	"activation_eligibility_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When criteria for activation were met."
																			}
																		]
																	},
																	"activation_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
																			}
																		]
																	},
																	"exit_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
																			}
																		]
																	},
																	"withdrawable_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
																			}
																		]
																	}
																}
															}
														},
														"balances": {
															"type": "array",
															"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"randao_mixes": {
															"type": "array",
															"description": "Fixed length of 65536 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"slashings": {
															"type": "array",
															"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"previous_epoch_attestations": {
															"type": "array",
															"items": {
																"type": "object",
																"description": "The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.",
																"properties": {
																	"aggregation_bits": {
																		"description": "Attester aggregation bits.",
																		"type": "string",
																		"format": "hex",
																		"example": "0x01",
																		"pattern": "^0x[a-fA-F0-9]+$"
																	},
																	"data": {
																		"type": "object",
																		"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																		"properties": {
																			"slot": {
																				"type": "string",
																				"example": "1"
																			},
																			"index": {
																				"type": "string",
																				"example": "1"
																			},
																			"beacon_block_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "LMD GHOST vote."
																					}
																				]
																			},
																			"source": {
																				"type": "object",
																				"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																				"properties": {
																					"epoch": {
																						"type": "string",
																						"example": "1"
																					},
																					"root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			},
																			"target": {
																				"type": "object",
																				"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																				"properties": {
																					"epoch": {
																						"type": "string",
																						"example": "1"
																					},
																					"root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			}
																		}
																	},
																	"inclusion_delay": {
																		"type": "string",
																		"example": "1"
																	},
																	"proposer_index": {
																		"type": "string",
																		"example": "1"
																	}
																}
															}
														},
														"current_epoch_attestations": {
															"type": "array",
															"items": {
																"type": "object",
																"description": "The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.",
																"properties": {
																	"aggregation_bits": {
																		"description": "Attester aggregation bits.",
																		"type": "string",
																		"format": "hex",
																		"example": "0x01",
																		"pattern": "^0x[a-fA-F0-9]+$"
																	},
																	"data": {
																		"type": "object",
																		"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																		"properties": {
																			"slot": {
																				"type": "string",
																				"example": "1"
																			},
																			"index": {
																				"type": "string",
																				"example": "1"
																			},
																			"beacon_block_root": {
																				"allOf": [
																					{
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					},
																					{
																						"description": "LMD GHOST vote."
																					}
																				]
																			},
																			"source": {
																				"type": "object",
																				"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																				"properties": {
																					"epoch": {
																						"type": "string",
																						"example": "1"
																					},
																					"root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			},
																			"target": {
																				"type": "object",
																				"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																				"properties": {
																					"epoch": {
																						"type": "string",
																						"example": "1"
																					},
																					"root": {
																						"type": "string",
																						"format": "hex",
																						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																						"pattern": "^0x[a-fA-F0-9]{64}$"
																					}
																				}
																			}
																		}
																	},
																	"inclusion_delay": {
																		"type": "string",
																		"example": "1"
																	},
																	"proposer_index": {
																		"type": "string",
																		"example": "1"
																	}
																}
															}
														},
														"justification_bits": {
															"description": "Bit set for every recent justified epoch",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"previous_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"current_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"finalized_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														}
													}
												},
												{
													"type": "object",
													"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconstate) object from the CL Altair spec.",
													"properties": {
														"genesis_time": {
															"type": "string",
															"example": "1"
														},
														"genesis_validators_root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														"slot": {
															"type": "string",
															"example": "1"
														},
														"fork": {
															"type": "object",
															"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
															"properties": {
																"previous_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"current_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"epoch": {
																	"type": "string",
																	"example": "1"
																}
															}
														},
														"latest_block_header": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"block_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"state_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"historical_roots": {
															"type": "array",
															"description": "Variable length list, maximum 16777216 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"eth1_data": {
															"type": "object",
															"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
															"properties": {
																"deposit_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Root of the deposit tree."
																		}
																	]
																},
																"deposit_count": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Total number of deposits."
																		}
																	]
																},
																"block_hash": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Ethereum 1.x block hash."
																		}
																	]
																}
															}
														},
														"eth1_data_votes": {
															"type": "array",
															"description": "Fixed length of 1024 items",
															"items": {
																"type": "object",
																"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																"properties": {
																	"deposit_root": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of the deposit tree."
																			}
																		]
																	},
																	"deposit_count": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Total number of deposits."
																			}
																		]
																	},
																	"block_hash": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Ethereum 1.x block hash."
																			}
																		]
																	}
																}
															}
														},
														"eth1_deposit_index": {
															"type": "string",
															"example": "1"
														},
														"validators": {
															"type": "array",
															"description": "Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "object",
																"properties": {
																	"pubkey": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{96}$",
																		"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																		"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																	},
																	"withdrawal_credentials": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of withdrawal credentials"
																			}
																		]
																	},
																	"effective_balance": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Balance at stake in Gwei."
																			}
																		]
																	},
																	"slashed": {
																		"type": "boolean",
																		"example": false,
																		"description": "Was validator slashed (not longer active)."
																	},
																	"activation_eligibility_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When criteria for activation were met."
																			}
																		]
																	},
																	"activation_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
																			}
																		]
																	},
																	"exit_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
																			}
																		]
																	},
																	"withdrawable_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
																			}
																		]
																	}
																}
															}
														},
														"balances": {
															"type": "array",
															"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"randao_mixes": {
															"type": "array",
															"description": "Fixed length of 65536 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"slashings": {
															"type": "array",
															"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"previous_epoch_participation": {
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"description": "Unsigned 8 bit integer, max value 255",
																		"pattern": "^[1-2]?[0-9]{1,2}$",
																		"example": "0"
																	}
																]
															},
															"maxItems": 1099511627776
														},
														"current_epoch_participation": {
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"description": "Unsigned 8 bit integer, max value 255",
																		"pattern": "^[1-2]?[0-9]{1,2}$",
																		"example": "0"
																	}
																]
															},
															"maxItems": 1099511627776
														},
														"justification_bits": {
															"description": "Bit set for every recent justified epoch",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"previous_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"current_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"finalized_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"inactivity_scores": {
															"description": "Per-validator inactivity scores. New in Altair. Variable length list, maximum 1099511627776 items",
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	}
																]
															}
														},
														"current_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"next_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														}
													}
												},
												{
													"type": "object",
													"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconstate) object from the Eth2.0 Bellatrix spec.",
													"properties": {
														"genesis_time": {
															"type": "string",
															"example": "1"
														},
														"genesis_validators_root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														"slot": {
															"type": "string",
															"example": "1"
														},
														"fork": {
															"type": "object",
															"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
															"properties": {
																"previous_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"current_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"epoch": {
																	"type": "string",
																	"example": "1"
																}
															}
														},
														"latest_block_header": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"block_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"state_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"historical_roots": {
															"type": "array",
															"description": "Variable length list, maximum 16777216 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"eth1_data": {
															"type": "object",
															"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
															"properties": {
																"deposit_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Root of the deposit tree."
																		}
																	]
																},
																"deposit_count": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Total number of deposits."
																		}
																	]
																},
																"block_hash": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Ethereum 1.x block hash."
																		}
																	]
																}
															}
														},
														"eth1_data_votes": {
															"type": "array",
															"description": "Fixed length of 1024 items",
															"items": {
																"type": "object",
																"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																"properties": {
																	"deposit_root": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of the deposit tree."
																			}
																		]
																	},
																	"deposit_count": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Total number of deposits."
																			}
																		]
																	},
																	"block_hash": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Ethereum 1.x block hash."
																			}
																		]
																	}
																}
															},
															"maxItems": 1024
														},
														"eth1_deposit_index": {
															"type": "string",
															"example": "1"
														},
														"validators": {
															"type": "array",
															"description": "Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "object",
																"properties": {
																	"pubkey": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{96}$",
																		"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																		"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																	},
																	"withdrawal_credentials": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of withdrawal credentials"
																			}
																		]
																	},
																	"effective_balance": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Balance at stake in Gwei."
																			}
																		]
																	},
																	"slashed": {
																		"type": "boolean",
																		"example": false,
																		"description": "Was validator slashed (not longer active)."
																	},
																	"activation_eligibility_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When criteria for activation were met."
																			}
																		]
																	},
																	"activation_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
																			}
																		]
																	},
																	"exit_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
																			}
																		]
																	},
																	"withdrawable_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
																			}
																		]
																	}
																}
															}
														},
														"balances": {
															"type": "array",
															"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"randao_mixes": {
															"type": "array",
															"description": "Fixed length of 65536 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"slashings": {
															"type": "array",
															"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"previous_epoch_participation": {
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"description": "Unsigned 8 bit integer, max value 255",
																		"pattern": "^[1-2]?[0-9]{1,2}$",
																		"example": "0"
																	}
																]
															},
															"maxItems": 1099511627776
														},
														"current_epoch_participation": {
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"description": "Unsigned 8 bit integer, max value 255",
																		"pattern": "^[1-2]?[0-9]{1,2}$",
																		"example": "0"
																	}
																]
															},
															"maxItems": 1099511627776
														},
														"justification_bits": {
															"description": "Bit set for every recent justified epoch",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"previous_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"current_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"finalized_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"inactivity_scores": {
															"description": "Per-validator inactivity scores. Introduced in Altair. Variable length list, maximum 1099511627776 items",
															"type": "array",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"current_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"next_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"latest_execution_payload_header": {
															"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
															"allOf": [
																{
																	"type": "object",
																	"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																	"properties": {
																		"parent_hash": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"fee_recipient": {
																			"type": "string",
																			"format": "hex",
																			"description": "An address on the execution (Ethereum 1) network.",
																			"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																			"pattern": "^0x[a-fA-F0-9]{40}$"
																		},
																		"state_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"receipts_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"logs_bloom": {
																			"type": "string",
																			"format": "hex",
																			"example": "0x
																			"pattern": "^0x[a-fA-F0-9]{512}$"
																		},
																		"prev_randao": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"block_number": {
																			"type": "string",
																			"example": "1"
																		},
																		"gas_limit": {
																			"type": "string",
																			"example": "1"
																		},
																		"gas_used": {
																			"type": "string",
																			"example": "1"
																		},
																		"timestamp": {
																			"type": "string",
																			"example": "1"
																		},
																		"extra_data": {
																			"type": "string",
																			"format": "hex",
																			"description": "Extra data on the execution (Ethereum 1) network.",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{0,64}$"
																		},
																		"base_fee_per_gas": {
																			"type": "string",
																			"example": "1"
																		},
																		"block_hash": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"transactions_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															]
														}
													}
												},
												{
													"type": "object",
													"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconstate) object from the Eth2.0 Capella spec.",
													"properties": {
														"genesis_time": {
															"type": "string",
															"example": "1"
														},
														"genesis_validators_root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														"slot": {
															"type": "string",
															"example": "1"
														},
														"fork": {
															"type": "object",
															"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
															"properties": {
																"previous_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"current_version": {
																	"type": "string",
																	"format": "hex",
																	"description": "a fork version number",
																	"example": "0x00000000",
																	"pattern": "^0x[a-fA-F0-9]{8}$"
																},
																"epoch": {
																	"type": "string",
																	"example": "1"
																}
															}
														},
														"latest_block_header": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"block_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"state_roots": {
															"type": "array",
															"description": "Fixed length of 8192 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"historical_roots": {
															"type": "array",
															"description": "Variable length list, maximum 16777216 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"eth1_data": {
															"type": "object",
															"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
															"properties": {
																"deposit_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Root of the deposit tree."
																		}
																	]
																},
																"deposit_count": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Total number of deposits."
																		}
																	]
																},
																"block_hash": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "Ethereum 1.x block hash."
																		}
																	]
																}
															}
														},
														"eth1_data_votes": {
															"type": "array",
															"description": "Fixed length of 1024 items",
															"items": {
																"type": "object",
																"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																"properties": {
																	"deposit_root": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of the deposit tree."
																			}
																		]
																	},
																	"deposit_count": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Total number of deposits."
																			}
																		]
																	},
																	"block_hash": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Ethereum 1.x block hash."
																			}
																		]
																	}
																}
															},
															"maxItems": 1024
														},
														"eth1_deposit_index": {
															"type": "string",
															"example": "1"
														},
														"validators": {
															"type": "array",
															"description": "Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "object",
																"properties": {
																	"pubkey": {
																		"type": "string",
																		"format": "hex",
																		"pattern": "^0x[a-fA-F0-9]{96}$",
																		"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																		"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																	},
																	"withdrawal_credentials": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			},
																			{
																				"description": "Root of withdrawal credentials"
																			}
																		]
																	},
																	"effective_balance": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Balance at stake in Gwei."
																			}
																		]
																	},
																	"slashed": {
																		"type": "boolean",
																		"example": false,
																		"description": "Was validator slashed (not longer active)."
																	},
																	"activation_eligibility_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When criteria for activation were met."
																			}
																		]
																	},
																	"activation_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
																			}
																		]
																	},
																	"exit_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
																			}
																		]
																	},
																	"withdrawable_epoch": {
																		"allOf": [
																			{
																				"type": "string",
																				"example": "1"
																			},
																			{
																				"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
																			}
																		]
																	}
																}
															}
														},
														"balances": {
															"type": "array",
															"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"randao_mixes": {
															"type": "array",
															"description": "Fixed length of 65536 items",
															"items": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														},
														"slashings": {
															"type": "array",
															"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"previous_epoch_participation": {
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"description": "Unsigned 8 bit integer, max value 255",
																		"pattern": "^[1-2]?[0-9]{1,2}$",
																		"example": "0"
																	}
																]
															},
															"maxItems": 1099511627776
														},
														"current_epoch_participation": {
															"type": "array",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"description": "Unsigned 8 bit integer, max value 255",
																		"pattern": "^[1-2]?[0-9]{1,2}$",
																		"example": "0"
																	}
																]
															},
															"maxItems": 1099511627776
														},
														"justification_bits": {
															"description": "Bit set for every recent justified epoch",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"previous_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"current_justified_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"finalized_checkpoint": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"inactivity_scores": {
															"description": "Per-validator inactivity scores. Introduced in Altair. Variable length list, maximum 1099511627776 items",
															"type": "array",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"current_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"next_sync_committee": {
															"type": "object",
															"properties": {
																"pubkeys": {
																	"type": "array",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"pattern": "^0x[a-fA-F0-9]{96}$",
																				"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																				"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																			}
																		]
																	},
																	"minItems": 512,
																	"maxItems": 512
																},
																"aggregate_pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																}
															}
														},
														"latest_execution_payload_header": {
															"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
															"allOf": [
																{
																	"type": "object",
																	"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																	"properties": {
																		"parent_hash": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"fee_recipient": {
																			"type": "string",
																			"format": "hex",
																			"description": "An address on the execution (Ethereum 1) network.",
																			"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																			"pattern": "^0x[a-fA-F0-9]{40}$"
																		},
																		"state_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"receipts_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"logs_bloom": {
																			"type": "string",
																			"format": "hex",
																			"example": "0x
																			"pattern": "^0x[a-fA-F0-9]{512}$"
																		},
																		"prev_randao": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"block_number": {
																			"type": "string",
																			"example": "1"
																		},
																		"gas_limit": {
																			"type": "string",
																			"example": "1"
																		},
																		"gas_used": {
																			"type": "string",
																			"example": "1"
																		},
																		"timestamp": {
																			"type": "string",
																			"example": "1"
																		},
																		"extra_data": {
																			"type": "string",
																			"format": "hex",
																			"description": "Extra data on the execution (Ethereum 1) network.",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{0,64}$"
																		},
																		"base_fee_per_gas": {
																			"type": "string",
																			"example": "1"
																		},
																		"block_hash": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"transactions_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"withdrawals_root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															]
														},
														"next_withdrawal_index": {
															"type": "string",
															"example": "1"
														},
														"next_withdrawal_validator_index": {
															"type": "string",
															"example": "1"
														}
													}
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized state bytes. Use Accept header to choose this response type"
								}
							}
						}
					},
					"400": {
						"description": "Invalid state ID",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid state ID: current"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "State not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "State not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/debug/beacon/heads": {
			"get": {
				"operationId": "getDebugChainHeads",
				"summary": "Get fork choice leaves",
				"description": "Retrieves all possible chain heads (leaves of fork choice tree).",
				"deprecated": true,
				"tags": ["Debug"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetDebugChainHeadsResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"root": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"slot": {
														"type": "string",
														"example": "1"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v2/debug/beacon/heads": {
			"get": {
				"operationId": "getDebugChainHeadsV2",
				"summary": "Get fork choice leaves",
				"description": "Retrieves all possible chain heads (leaves of fork choice tree).",
				"tags": ["Debug"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetDebugChainHeadsResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"root": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"slot": {
														"type": "string",
														"example": "1"
													},
													"execution_optimistic": {
														"allOf": [
															{
																"type": "boolean"
															},
															{
																"example": false
															},
															{
																"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/debug/fork_choice": {
			"get": {
				"operationId": "getDebugForkChoice",
				"summary": "Get fork choice array",
				"description": "Retrieves all current fork choice context.",
				"tags": ["Debug"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetForkChoiceResponse",
									"type": "object",
									"description": "Debugging context of fork choice",
									"required": ["justified_checkpoint", "finalized_checkpoint"],
									"properties": {
										"justified_checkpoint": {
											"type": "object",
											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
											"properties": {
												"epoch": {
													"type": "string",
													"example": "1"
												},
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												}
											}
										},
										"finalized_checkpoint": {
											"type": "object",
											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
											"properties": {
												"epoch": {
													"type": "string",
													"example": "1"
												},
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												}
											}
										},
										"fork_choice_nodes": {
											"type": "array",
											"description": "Fork choice nodes",
											"minItems": 1,
											"items": {
												"type": "object",
												"description": "fork choice node attributes",
												"properties": {
													"slot": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "The slot to which this block corresponds."
															}
														]
													},
													"block_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "The signing merkle root of the `BeaconBlock`."
															}
														]
													},
													"parent_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "The signing merkle root of the parent `BeaconBlock`."
															}
														]
													},
													"justified_epoch": {
														"type": "string",
														"example": "1"
													},
													"finalized_epoch": {
														"type": "string",
														"example": "1"
													},
													"weight": {
														"type": "string",
														"example": "1"
													},
													"validity": {
														"type": "string",
														"enum": ["valid", "invalid", "optimistic"]
													},
													"execution_block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "The `block_hash` from the `execution_payload` of the `BeaconBlock`"
															}
														]
													},
													"extra_data": {
														"type": "object",
														"description": "Optional extra data that clients may provide, which could differ from client to client."
													}
												}
											}
										},
										"extra_data": {
											"type": "object",
											"description": "Optional extra data that clients may provide, which could differ from client to client."
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/identity": {
			"get": {
				"operationId": "getNetworkIdentity",
				"tags": ["Node"],
				"summary": "Get node network identity",
				"description": "Retrieves data about the node's network presence",
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetNetworkIdentityResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"peer_id": {
													"type": "string",
													"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
													"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
												},
												"enr": {
													"type": "string",
													"description": "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)",
													"example": "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
												},
												"p2p_addresses": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"type": "string",
																"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
																"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
															},
															{
																"description": "Node's addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
															}
														]
													}
												},
												"discovery_addresses": {
													"type": "array",
													"items": {
														"allOf": [
															{
																"type": "string",
																"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
																"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
															},
															{
																"description": "Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
															},
															{
																"example": "/ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
															}
														]
													}
												},
												"metadata": {
													"type": "object",
													"description": "Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/p2p-interface.md#metadata)",
													"required": ["seq_number", "attnets"],
													"properties": {
														"seq_number": {
															"allOf": [
																{
																	"description": "Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."
																},
																{
																	"type": "string",
																	"example": "1"
																}
															]
														},
														"attnets": {
															"allOf": [
																{
																	"description": "Bitvector representing the node's persistent attestation subnet subscriptions."
																},
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{2,}$"
																},
																{
																	"example": "0x0000000000000000"
																}
															]
														},
														"syncnets": {
															"allOf": [
																{
																	"description": "Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."
																},
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{2,}$"
																},
																{
																	"example": "0x0f"
																}
															]
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/peers": {
			"get": {
				"operationId": "getPeers",
				"tags": ["Node"],
				"summary": "Get node network peers",
				"description": "Retrieves data about the node's network peers. By default this returns all peers. Multiple query params are combined using AND conditions",
				"parameters": [
					{
						"name": "state",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"type": "string",
								"enum": ["disconnected", "connecting", "connected", "disconnecting"]
							}
						}
					},
					{
						"name": "direction",
						"in": "query",
						"required": false,
						"schema": {
							"type": "array",
							"uniqueItems": true,
							"items": {
								"type": "string",
								"enum": ["inbound", "outbound"]
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPeersResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"peer_id": {
														"type": "string",
														"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
														"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
													},
													"enr": {
														"allOf": [
															{
																"type": "string",
																"description": "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)",
																"example": "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
															},
															{
																"nullable": true
															}
														]
													},
													"last_seen_p2p_address": {
														"allOf": [
															{
																"type": "string",
																"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
																"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
															},
															{
																"description": "Multiaddrs used in last peer connection."
															}
														]
													},
													"state": {
														"type": "string",
														"enum": ["disconnected", "connecting", "connected", "disconnecting"]
													},
													"direction": {
														"type": "string",
														"enum": ["inbound", "outbound"]
													}
												}
											}
										},
										"meta": {
											"type": "object",
											"properties": {
												"count": {
													"description": "Total number of items",
													"type": "number",
													"example": 1
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/peers/{peer_id}": {
			"get": {
				"operationId": "getPeer",
				"tags": ["Node"],
				"summary": "Get peer",
				"description": "Retrieves data about the given peer",
				"parameters": [
					{
						"name": "peer_id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
							"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPeerResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"peer_id": {
													"type": "string",
													"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
													"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
												},
												"enr": {
													"allOf": [
														{
															"type": "string",
															"description": "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)",
															"example": "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
														},
														{
															"nullable": true
														}
													]
												},
												"last_seen_p2p_address": {
													"allOf": [
														{
															"type": "string",
															"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
															"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
														},
														{
															"description": "Multiaddrs used in last peer connection."
														}
													]
												},
												"state": {
													"type": "string",
													"enum": ["disconnected", "connecting", "connected", "disconnecting"]
												},
												"direction": {
													"type": "string",
													"enum": ["inbound", "outbound"]
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "The peer ID supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid peer ID: localhost"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Peer not found",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 404,
										"message": "Peer not found"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/peer_count": {
			"get": {
				"operationId": "getPeerCount",
				"tags": ["Node"],
				"summary": "Get peer count",
				"description": "Retrieves number of known peers.",
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetPeerCountResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"disconnected": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": "12"
														}
													]
												},
												"connecting": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": "34"
														}
													]
												},
												"connected": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": "56"
														}
													]
												},
												"disconnecting": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"example": "5"
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/version": {
			"get": {
				"operationId": "getNodeVersion",
				"tags": ["Node"],
				"summary": "Get version string of the running beacon node.",
				"description": "Requests that the beacon node identify information about its implementation in a format similar to a  [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) field.",
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetVersionResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"version": {
													"type": "string",
													"description": "A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3).",
													"example": "Lighthouse/v0.1.5 (Linux x86_64)"
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/syncing": {
			"get": {
				"operationId": "getSyncingStatus",
				"tags": ["Node", "ValidatorRequiredApi"],
				"summary": "Get node syncing status",
				"description": "Requests the beacon node to describe if it's currently syncing or not, and if it is, what block it is up to.",
				"responses": {
					"200": {
						"description": "Request successful",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetSyncingStatusResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"head_slot": {
													"allOf": [
														{
															"description": "Head slot node is trying to reach"
														},
														{
															"type": "string",
															"example": "1"
														}
													]
												},
												"sync_distance": {
													"allOf": [
														{
															"description": "How many slots node needs to process to reach head. 0 if synced."
														},
														{
															"type": "string",
															"example": "1"
														}
													]
												},
												"is_syncing": {
													"allOf": [
														{
															"type": "boolean"
														},
														{
															"description": "Set to true if the node is syncing, false if the node is synced."
														}
													]
												},
												"is_optimistic": {
													"allOf": [
														{
															"type": "boolean"
														},
														{
															"description": "Set to true if the node is optimistically tracking head."
														}
													]
												},
												"el_offline": {
													"allOf": [
														{
															"type": "boolean"
														},
														{
															"description": "Set to true if the execution client is offline."
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/node/health": {
			"get": {
				"operationId": "getHealth",
				"tags": ["Node"],
				"summary": "Get health check",
				"description": "Returns node health status in http status codes. Useful for load balancers.",
				"parameters": [
					{
						"name": "syncing_status",
						"in": "query",
						"required": false,
						"description": "Customize syncing status instead of default status code (206)",
						"schema": {
							"type": "integer",
							"minimum": 1,
							"maximum": 599
						}
					}
				],
				"responses": {
					"200": {
						"description": "Node is ready"
					},
					"206": {
						"description": "Node is syncing but can serve incomplete data"
					},
					"503": {
						"description": "Node not initialized or having issues"
					}
				}
			}
		},
		"/eth/v1/config/fork_schedule": {
			"get": {
				"operationId": "getForkSchedule",
				"summary": "Get scheduled upcoming forks.",
				"description": "Retrieve all forks, past present and future, of which this node is aware.",
				"tags": ["Config"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetForkScheduleResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
												"properties": {
													"previous_version": {
														"type": "string",
														"format": "hex",
														"description": "a fork version number",
														"example": "0x00000000",
														"pattern": "^0x[a-fA-F0-9]{8}$"
													},
													"current_version": {
														"type": "string",
														"format": "hex",
														"description": "a fork version number",
														"example": "0x00000000",
														"pattern": "^0x[a-fA-F0-9]{8}$"
													},
													"epoch": {
														"type": "string",
														"example": "1"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/config/spec": {
			"get": {
				"operationId": "getSpec",
				"summary": "Get spec params.",
				"description": "Retrieve specification configuration used on this node.  The configuration should include:\n  - Constants for all hard forks known by the beacon node, for example the [phase 0](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#constants) and [altair](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#constants) values\n  - Presets for all hard forks supplied to the beacon node, for example the [phase 0](https://github.com/ethereum/consensus-specs/blob/v1.3.0/presets/mainnet/phase0.yaml) and [altair](https://github.com/ethereum/consensus-specs/blob/v1.3.0/presets/mainnet/altair.yaml) values\n  - Configuration for the beacon node, for example the [mainnet](https://github.com/ethereum/consensus-specs/blob/v1.3.0/configs/mainnet.yaml) values\n\nValues are returned with following format:\n  - any value starting with 0x in the spec is returned as a hex string\n  - numeric values are returned as a quoted integer\n",
				"tags": ["Config", "ValidatorRequiredApi"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetSpecResponse",
									"type": "object",
									"properties": {
										"data": {
											"description": "Key value mapping of all constants, presets and configuration values for all known hard forks\nValues are returned with following format:\n  - any value starting with 0x in the spec is returned as a hex string\n  - numeric values are returned as a quoted integer\n",
											"type": "object",
											"example": {
												"DEPOSIT_CONTRACT_ADDRESS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
												"DEPOSIT_NETWORK_ID": "1",
												"DOMAIN_AGGREGATE_AND_PROOF": "0x06000000",
												"INACTIVITY_PENALTY_QUOTIENT": "67108864",
												"INACTIVITY_PENALTY_QUOTIENT_ALTAIR": "50331648"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/config/deposit_contract": {
			"get": {
				"operationId": "getDepositContract",
				"summary": "Get deposit contract address.",
				"description": "Retrieve Eth1 deposit contract address and chain ID.",
				"tags": ["Config"],
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetDepositContractResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"chain_id": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"description": "Id of Eth1 chain on which contract is deployed."
														},
														{
															"example": "1"
														}
													]
												},
												"address": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{2,}$"
														},
														{
															"description": "Hex encoded deposit contract address with 0x prefix"
														},
														{
															"example": "0x1Db3439a222C519ab44bb1144fC28167b4Fa6EE6"
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/duties/attester/{epoch}": {
			"post": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"summary": "Get attester duties",
				"operationId": "getAttesterDuties",
				"description": "Requests the beacon node to provide a set of attestation duties, which should be performed by validators, for a particular epoch.\nDuties should only need to be checked once per epoch, however a chain reorganization (of > MIN_SEED_LOOKAHEAD epochs) could occur, resulting in a change of duties. For full safety, you should monitor head events and confirm the dependent root in this response matches:\n- event.previous_duty_dependent_root when `compute_epoch_at_slot(event.slot) == epoch`\n- event.current_duty_dependent_root when `compute_epoch_at_slot(event.slot) + 1 == epoch`\n- event.block otherwise\n\nThe dependent_root value is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch - 1) - 1)` or the genesis block root in the case of underflow.",
				"parameters": [
					{
						"name": "epoch",
						"description": "Should only be allowed 1 epoch ahead",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"requestBody": {
					"description": "An array of the validator indices for which to obtain the duties.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"title": "GetAttesterDutiesBody",
								"type": "array",
								"items": {
									"minItems": 1,
									"type": "string",
									"example": "1"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetAttesterDutiesResponse",
									"type": "object",
									"properties": {
										"dependent_root": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												{
													"description": "The block root that this response is dependent on."
												}
											]
										},
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"pubkey": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{96}$",
														"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
														"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
													},
													"validator_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of validator in validator registry"
															}
														]
													},
													"committee_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "The committee index"
															}
														]
													},
													"committee_length": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Number of validators in committee"
															}
														]
													},
													"committees_at_slot": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Number of committees at the provided slot"
															}
														]
													},
													"validator_committee_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of validator in committee"
															}
														]
													},
													"slot": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "The slot at which the validator must attest."
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid epoch or index",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid epoch: -2"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/duties/proposer/{epoch}": {
			"get": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"summary": "Get block proposers duties",
				"operationId": "getProposerDuties",
				"description": "Request beacon node to provide all validators that are scheduled to propose a block in the given epoch.\nDuties should only need to be checked once per epoch, however a chain reorganization could occur that results in a change of duties. For full safety, you should monitor head events and confirm the dependent root in this response matches:\n- event.current_duty_dependent_root when `compute_epoch_at_slot(event.slot) == epoch`\n- event.block otherwise\n\nThe dependent_root value is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch) - 1)` or the genesis block root in the case of underflow.",
				"parameters": [
					{
						"name": "epoch",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetProposerDutiesResponse",
									"type": "object",
									"properties": {
										"dependent_root": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												{
													"description": "The block root that this response is dependent on."
												}
											]
										},
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"pubkey": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{96}$",
														"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
														"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
													},
													"validator_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of validator in validator registry."
															}
														]
													},
													"slot": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "The slot at which the validator must propose block."
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid epoch",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid epoch: -2"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/duties/sync/{epoch}": {
			"post": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"summary": "Get sync committee duties",
				"operationId": "getSyncCommitteeDuties",
				"description": "Requests the beacon node to provide a set of sync committee duties for a particular epoch.",
				"parameters": [
					{
						"name": "epoch",
						"description": "epoch // EPOCHS_PER_SYNC_COMMITTEE_PERIOD <= current_epoch // EPOCHS_PER_SYNC_COMMITTEE_PERIOD + 1",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"requestBody": {
					"description": "An array of the validator indices for which to obtain the duties.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"title": "GetSyncCommitteeDutiesBody",
								"type": "array",
								"items": {
									"minItems": 1,
									"type": "string",
									"example": "1"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success response",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetSyncCommitteeDutiesResponse",
									"type": "object",
									"properties": {
										"execution_optimistic": {
											"allOf": [
												{
													"type": "boolean"
												},
												{
													"example": false
												},
												{
													"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
												}
											]
										},
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"pubkey": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{96}$",
														"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
														"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
													},
													"validator_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of validator in validator registry."
															}
														]
													},
													"validator_sync_committee_indices": {
														"type": "array",
														"description": "The indices of the validator in the sync committee.",
														"minItems": 1,
														"items": {
															"type": "string",
															"example": "1"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid epoch or index",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid epoch: -2"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v2/validator/blocks/{slot}": {
			"get": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"operationId": "produceBlockV2",
				"summary": "Produce a new block, without signature.",
				"description": "Requests a beacon node to produce a valid block, which can then be signed by a validator.\n\nMetadata in the response indicates the type of block produced, and the supported types of block\nwill be added to as forks progress.\n",
				"parameters": [
					{
						"name": "slot",
						"in": "path",
						"required": true,
						"description": "The slot for which the block should be proposed.",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "randao_reveal",
						"in": "query",
						"required": true,
						"description": "The validator's randao reveal value.",
						"schema": {
							"type": "string",
							"format": "hex",
							"pattern": "^0x[a-fA-F0-9]{192}$",
							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
						}
					},
					{
						"name": "graffiti",
						"in": "query",
						"required": false,
						"description": "Arbitrary data validator wants to include in block.",
						"schema": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					{
						"name": "skip_randao_verification",
						"in": "query",
						"required": false,
						"description": "Skip verification of the `randao_reveal` value. If this flag is set then the\n`randao_reveal` must be set to the point at infinity (`0xc0..00`). This query parameter\nis a flag and does not take a value.\n",
						"schema": {},
						"allowEmptyValue": true
					}
				],
				"responses": {
					"200": {
						"description": "Success response",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "ProduceBlockV2Response",
									"type": "object",
									"properties": {
										"version": {
											"type": "string",
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "phase0"
										},
										"data": {
											"oneOf": [
												{
													"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"type": "object",
																	"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
																	"properties": {
																		"randao_reveal": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The RanDAO reveal value provided by the validator."
																				}
																			]
																		},
																		"eth1_data": {
																			"type": "object",
																			"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																			"properties": {
																				"deposit_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Root of the deposit tree."
																						}
																					]
																				},
																				"deposit_count": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Total number of deposits."
																						}
																					]
																				},
																				"block_hash": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Ethereum 1.x block hash."
																						}
																					]
																				}
																			}
																		},
																		"graffiti": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"proposer_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																				"properties": {
																					"signed_header_1": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					},
																					"signed_header_2": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		},
																		"attester_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																				"properties": {
																					"attestation_1": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					},
																					"attestation_2": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"attestations": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																				"properties": {
																					"aggregation_bits": {
																						"description": "Attester aggregation bits.",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"signature": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							},
																							{
																								"description": "BLS aggregate signature."
																							}
																						]
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																						"properties": {
																							"slot": {
																								"type": "string",
																								"example": "1"
																							},
																							"index": {
																								"type": "string",
																								"example": "1"
																							},
																							"beacon_block_root": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "LMD GHOST vote."
																									}
																								]
																							},
																							"source": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							},
																							"target": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"deposits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																				"properties": {
																					"proof": {
																						"type": "array",
																						"description": "Branch in the deposit tree.",
																						"items": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							]
																						},
																						"minItems": 32,
																						"maxItems": 32
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																						"properties": {
																							"pubkey": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{96}$",
																								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																							},
																							"withdrawal_credentials": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "The withdrawal credentials."
																									}
																								]
																							},
																							"amount": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Amount in Gwei."
																									}
																								]
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "Container self-signature."
																									}
																								]
																							}
																						}
																					}
																				}
																			}
																		},
																		"voluntary_exits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																				"properties": {
																					"message": {
																						"type": "object",
																						"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																						"properties": {
																							"epoch": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Minimum epoch for processing exit."
																									}
																								]
																							},
																							"validator_index": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Index of the exiting validator."
																									}
																								]
																							}
																						}
																					},
																					"signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												},
												{
													"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"type": "object",
																	"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
																	"properties": {
																		"randao_reveal": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The RanDAO reveal value provided by the validator."
																				}
																			]
																		},
																		"eth1_data": {
																			"type": "object",
																			"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																			"properties": {
																				"deposit_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Root of the deposit tree."
																						}
																					]
																				},
																				"deposit_count": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Total number of deposits."
																						}
																					]
																				},
																				"block_hash": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Ethereum 1.x block hash."
																						}
																					]
																				}
																			}
																		},
																		"graffiti": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"proposer_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																				"properties": {
																					"signed_header_1": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					},
																					"signed_header_2": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		},
																		"attester_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																				"properties": {
																					"attestation_1": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					},
																					"attestation_2": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"attestations": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																				"properties": {
																					"aggregation_bits": {
																						"description": "Attester aggregation bits.",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"signature": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							},
																							{
																								"description": "BLS aggregate signature."
																							}
																						]
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																						"properties": {
																							"slot": {
																								"type": "string",
																								"example": "1"
																							},
																							"index": {
																								"type": "string",
																								"example": "1"
																							},
																							"beacon_block_root": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "LMD GHOST vote."
																									}
																								]
																							},
																							"source": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							},
																							"target": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"deposits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																				"properties": {
																					"proof": {
																						"type": "array",
																						"description": "Branch in the deposit tree.",
																						"items": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							]
																						},
																						"minItems": 32,
																						"maxItems": 32
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																						"properties": {
																							"pubkey": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{96}$",
																								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																							},
																							"withdrawal_credentials": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "The withdrawal credentials."
																									}
																								]
																							},
																							"amount": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Amount in Gwei."
																									}
																								]
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "Container self-signature."
																									}
																								]
																							}
																						}
																					}
																				}
																			}
																		},
																		"voluntary_exits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																				"properties": {
																					"message": {
																						"type": "object",
																						"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																						"properties": {
																							"epoch": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Minimum epoch for processing exit."
																									}
																								]
																							},
																							"validator_index": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Index of the exiting validator."
																									}
																								]
																							}
																						}
																					},
																					"signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		},
																		"sync_aggregate": {
																			"type": "object",
																			"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																			"properties": {
																				"sync_committee_bits": {
																					"description": "Aggregation bits of sync",
																					"type": "string",
																					"format": "hex",
																					"example": "0x01",
																					"pattern": "^0x[a-fA-F0-9]+$"
																				},
																				"sync_committee_signature": {
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												},
												{
													"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				},
																				"sync_aggregate": {
																					"type": "object",
																					"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																					"properties": {
																						"sync_committee_bits": {
																							"description": "Aggregation bits of sync",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"sync_committee_signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"execution_payload": {
																					"allOf": [
																						{
																							"type": "object",
																							"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																							"properties": {
																								"parent_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"fee_recipient": {
																									"type": "string",
																									"format": "hex",
																									"description": "An address on the execution (Ethereum 1) network.",
																									"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																									"pattern": "^0x[a-fA-F0-9]{40}$"
																								},
																								"state_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"receipts_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"logs_bloom": {
																									"type": "string",
																									"format": "hex",
																									"example": "0x
																									"pattern": "^0x[a-fA-F0-9]{512}$"
																								},
																								"prev_randao": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"block_number": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_limit": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_used": {
																									"type": "string",
																									"example": "1"
																								},
																								"timestamp": {
																									"type": "string",
																									"example": "1"
																								},
																								"extra_data": {
																									"type": "string",
																									"format": "hex",
																									"description": "Extra data on the execution (Ethereum 1) network.",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{0,64}$"
																								},
																								"base_fee_per_gas": {
																									"type": "string",
																									"example": "1"
																								},
																								"block_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						{
																							"type": "object",
																							"properties": {
																								"transactions": {
																									"type": "array",
																									"items": {
																										"type": "string",
																										"format": "hex",
																										"description": "A transaction on the execution (Ethereum 1) network.",
																										"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																										"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																									},
																									"maxItems": 1048576
																								}
																							}
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														}
													]
												},
												{
													"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				},
																				"sync_aggregate": {
																					"type": "object",
																					"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																					"properties": {
																						"sync_committee_bits": {
																							"description": "Aggregation bits of sync",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"sync_committee_signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"execution_payload": {
																					"allOf": [
																						{
																							"type": "object",
																							"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																							"properties": {
																								"parent_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"fee_recipient": {
																									"type": "string",
																									"format": "hex",
																									"description": "An address on the execution (Ethereum 1) network.",
																									"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																									"pattern": "^0x[a-fA-F0-9]{40}$"
																								},
																								"state_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"receipts_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"logs_bloom": {
																									"type": "string",
																									"format": "hex",
																									"example": "0x
																									"pattern": "^0x[a-fA-F0-9]{512}$"
																								},
																								"prev_randao": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"block_number": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_limit": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_used": {
																									"type": "string",
																									"example": "1"
																								},
																								"timestamp": {
																									"type": "string",
																									"example": "1"
																								},
																								"extra_data": {
																									"type": "string",
																									"format": "hex",
																									"description": "Extra data on the execution (Ethereum 1) network.",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{0,64}$"
																								},
																								"base_fee_per_gas": {
																									"type": "string",
																									"example": "1"
																								},
																								"block_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						{
																							"type": "object",
																							"properties": {
																								"transactions": {
																									"type": "array",
																									"items": {
																										"type": "string",
																										"format": "hex",
																										"description": "A transaction on the execution (Ethereum 1) network.",
																										"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																										"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																									},
																									"maxItems": 1048576
																								},
																								"withdrawals": {
																									"type": "array",
																									"items": {
																										"type": "object",
																										"properties": {
																											"index": {
																												"description": "The index of the withdrawal.",
																												"type": "string",
																												"example": "1"
																											},
																											"validator_index": {
																												"description": "The index of the withdrawing validator.",
																												"type": "string",
																												"example": "1"
																											},
																											"address": {
																												"description": "The address to which the withdrawal is credited.",
																												"type": "string",
																												"format": "hex",
																												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																												"pattern": "^0x[a-fA-F0-9]{40}$"
																											},
																											"amount": {
																												"description": "The value withdrawn (gwei).",
																												"type": "string",
																												"example": "1"
																											}
																										}
																									},
																									"maxItems": 16
																								}
																							}
																						}
																					]
																				},
																				"bls_to_execution_changes": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																								"properties": {
																									"validator_index": {
																										"description": "Index of the validator for which credentials will be changed.",
																										"type": "string",
																										"example": "1"
																									},
																									"from_bls_pubkey": {
																										"description": "Public key of existing credentials.",
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"to_execution_address": {
																										"description": "Execution address to which the credentials will be changed.",
																										"type": "string",
																										"format": "hex",
																										"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																										"pattern": "^0x[a-fA-F0-9]{40}$"
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		}
																	]
																}
															}
														}
													]
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized block bytes. Use Accept header to choose this response type, version string is sent in header `Eth-Consensus-Version`."
								}
							}
						}
					},
					"400": {
						"description": "Invalid block production request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 400,
											"message": "Invalid request to produce a block"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/blinded_blocks/{slot}": {
			"get": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"operationId": "produceBlindedBlock",
				"summary": "Produce a new blinded block, without signature.",
				"description": "Requests a beacon node to produce a valid blinded block, which can then be signed by a validator. \nA blinded block is a block with only a transactions root, rather than a full transactions list.\n\nMetadata in the response indicates the type of block produced, and the supported types of block\nwill be added to as forks progress.\n\nPre-Bellatrix, this endpoint will return a `BeaconBlock`.\n",
				"parameters": [
					{
						"name": "slot",
						"in": "path",
						"required": true,
						"description": "The slot for which the block should be proposed.",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "randao_reveal",
						"in": "query",
						"required": true,
						"description": "The validator's randao reveal value.",
						"schema": {
							"type": "string",
							"format": "hex",
							"pattern": "^0x[a-fA-F0-9]{192}$",
							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
						}
					},
					{
						"name": "graffiti",
						"in": "query",
						"required": false,
						"description": "Arbitrary data validator wants to include in block.",
						"schema": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					{
						"name": "skip_randao_verification",
						"in": "query",
						"required": false,
						"description": "Skip verification of the `randao_reveal` value. If this flag is set then the\n`randao_reveal` must be set to the point at infinity (`0xc0..00`). This query parameter\nis a flag and does not take a value.\n",
						"schema": {},
						"allowEmptyValue": true
					}
				],
				"responses": {
					"200": {
						"description": "Success response",
						"headers": {
							"Eth-Consensus-Version": {
								"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
								"required": true,
								"schema": {
									"enum": ["phase0", "altair", "bellatrix", "capella"],
									"example": "phase0"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"title": "ProduceBlindedBlockResponse",
									"type": "object",
									"properties": {
										"version": {
											"type": "string",
											"enum": ["phase0", "altair", "bellatrix", "capella"],
											"example": "bellatrix"
										},
										"data": {
											"oneOf": [
												{
													"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"type": "object",
																	"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
																	"properties": {
																		"randao_reveal": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The RanDAO reveal value provided by the validator."
																				}
																			]
																		},
																		"eth1_data": {
																			"type": "object",
																			"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																			"properties": {
																				"deposit_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Root of the deposit tree."
																						}
																					]
																				},
																				"deposit_count": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Total number of deposits."
																						}
																					]
																				},
																				"block_hash": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Ethereum 1.x block hash."
																						}
																					]
																				}
																			}
																		},
																		"graffiti": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"proposer_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																				"properties": {
																					"signed_header_1": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					},
																					"signed_header_2": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		},
																		"attester_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																				"properties": {
																					"attestation_1": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					},
																					"attestation_2": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"attestations": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																				"properties": {
																					"aggregation_bits": {
																						"description": "Attester aggregation bits.",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"signature": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							},
																							{
																								"description": "BLS aggregate signature."
																							}
																						]
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																						"properties": {
																							"slot": {
																								"type": "string",
																								"example": "1"
																							},
																							"index": {
																								"type": "string",
																								"example": "1"
																							},
																							"beacon_block_root": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "LMD GHOST vote."
																									}
																								]
																							},
																							"source": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							},
																							"target": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"deposits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																				"properties": {
																					"proof": {
																						"type": "array",
																						"description": "Branch in the deposit tree.",
																						"items": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							]
																						},
																						"minItems": 32,
																						"maxItems": 32
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																						"properties": {
																							"pubkey": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{96}$",
																								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																							},
																							"withdrawal_credentials": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "The withdrawal credentials."
																									}
																								]
																							},
																							"amount": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Amount in Gwei."
																									}
																								]
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "Container self-signature."
																									}
																								]
																							}
																						}
																					}
																				}
																			}
																		},
																		"voluntary_exits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																				"properties": {
																					"message": {
																						"type": "object",
																						"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																						"properties": {
																							"epoch": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Minimum epoch for processing exit."
																									}
																								]
																							},
																							"validator_index": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Index of the exiting validator."
																									}
																								]
																							}
																						}
																					},
																					"signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												},
												{
													"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"type": "object",
																	"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
																	"properties": {
																		"randao_reveal": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The RanDAO reveal value provided by the validator."
																				}
																			]
																		},
																		"eth1_data": {
																			"type": "object",
																			"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																			"properties": {
																				"deposit_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Root of the deposit tree."
																						}
																					]
																				},
																				"deposit_count": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Total number of deposits."
																						}
																					]
																				},
																				"block_hash": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "Ethereum 1.x block hash."
																						}
																					]
																				}
																			}
																		},
																		"graffiti": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		"proposer_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																				"properties": {
																					"signed_header_1": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					},
																					"signed_header_2": {
																						"type": "object",
																						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																						"properties": {
																							"message": {
																								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																								"allOf": [
																									{
																										"type": "object",
																										"properties": {
																											"slot": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "The slot to which this block corresponds."
																													}
																												]
																											},
																											"proposer_index": {
																												"allOf": [
																													{
																														"type": "string",
																														"example": "1"
																													},
																													{
																														"description": "Index of validator in validator registry."
																													}
																												]
																											},
																											"parent_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The signing merkle root of the parent `BeaconBlock`."
																													}
																												]
																											},
																											"state_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																													}
																												]
																											}
																										}
																									},
																									{
																										"type": "object",
																										"properties": {
																											"body_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																													}
																												]
																											}
																										}
																									}
																								]
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		},
																		"attester_slashings": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																				"properties": {
																					"attestation_1": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					},
																					"attestation_2": {
																						"type": "object",
																						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																						"properties": {
																							"attesting_indices": {
																								"type": "array",
																								"maxItems": 2048,
																								"description": "Attesting validator indices",
																								"items": {
																									"type": "string",
																									"example": "1"
																								}
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"attestations": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																				"properties": {
																					"aggregation_bits": {
																						"description": "Attester aggregation bits.",
																						"type": "string",
																						"format": "hex",
																						"example": "0x01",
																						"pattern": "^0x[a-fA-F0-9]+$"
																					},
																					"signature": {
																						"allOf": [
																							{
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							},
																							{
																								"description": "BLS aggregate signature."
																							}
																						]
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																						"properties": {
																							"slot": {
																								"type": "string",
																								"example": "1"
																							},
																							"index": {
																								"type": "string",
																								"example": "1"
																							},
																							"beacon_block_root": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "LMD GHOST vote."
																									}
																								]
																							},
																							"source": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							},
																							"target": {
																								"type": "object",
																								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																								"properties": {
																									"epoch": {
																										"type": "string",
																										"example": "1"
																									},
																									"root": {
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		},
																		"deposits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																				"properties": {
																					"proof": {
																						"type": "array",
																						"description": "Branch in the deposit tree.",
																						"items": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							]
																						},
																						"minItems": 32,
																						"maxItems": 32
																					},
																					"data": {
																						"type": "object",
																						"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																						"properties": {
																							"pubkey": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{96}$",
																								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																							},
																							"withdrawal_credentials": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																										"pattern": "^0x[a-fA-F0-9]{64}$"
																									},
																									{
																										"description": "The withdrawal credentials."
																									}
																								]
																							},
																							"amount": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Amount in Gwei."
																									}
																								]
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "Container self-signature."
																									}
																								]
																							}
																						}
																					}
																				}
																			}
																		},
																		"voluntary_exits": {
																			"type": "array",
																			"items": {
																				"type": "object",
																				"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																				"properties": {
																					"message": {
																						"type": "object",
																						"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																						"properties": {
																							"epoch": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Minimum epoch for processing exit."
																									}
																								]
																							},
																							"validator_index": {
																								"allOf": [
																									{
																										"type": "string",
																										"example": "1"
																									},
																									{
																										"description": "Index of the exiting validator."
																									}
																								]
																							}
																						}
																					},
																					"signature": {
																						"type": "string",
																						"format": "hex",
																						"pattern": "^0x[a-fA-F0-9]{192}$",
																						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																					}
																				}
																			}
																		},
																		"sync_aggregate": {
																			"type": "object",
																			"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																			"properties": {
																				"sync_committee_bits": {
																					"description": "Aggregation bits of sync",
																					"type": "string",
																					"format": "hex",
																					"example": "0x01",
																					"pattern": "^0x[a-fA-F0-9]+$"
																				},
																				"sync_committee_signature": {
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				}
																			}
																		}
																	}
																}
															}
														}
													]
												},
												{
													"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				},
																				"sync_aggregate": {
																					"type": "object",
																					"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																					"properties": {
																						"sync_committee_bits": {
																							"description": "Aggregation bits of sync",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"sync_committee_signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"execution_payload_header": {
																					"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
																					"allOf": [
																						{
																							"type": "object",
																							"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																							"properties": {
																								"parent_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"fee_recipient": {
																									"type": "string",
																									"format": "hex",
																									"description": "An address on the execution (Ethereum 1) network.",
																									"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																									"pattern": "^0x[a-fA-F0-9]{40}$"
																								},
																								"state_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"receipts_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"logs_bloom": {
																									"type": "string",
																									"format": "hex",
																									"example": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
																									"pattern": "^0x[a-fA-F0-9]{512}$"
																								},
																								"prev_randao": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"block_number": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_limit": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_used": {
																									"type": "string",
																									"example": "1"
																								},
																								"timestamp": {
																									"type": "string",
																									"example": "1"
																								},
																								"extra_data": {
																									"type": "string",
																									"format": "hex",
																									"description": "Extra data on the execution (Ethereum 1) network.",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{0,64}$"
																								},
																								"base_fee_per_gas": {
																									"type": "string",
																									"example": "1"
																								},
																								"block_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						{
																							"type": "object",
																							"properties": {
																								"transactions_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														}
													]
												},
												{
													"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
													"allOf": [
														{
															"type": "object",
															"properties": {
																"slot": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "The slot to which this block corresponds."
																		}
																	]
																},
																"proposer_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of validator in validator registry."
																		}
																	]
																},
																"parent_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The signing merkle root of the parent `BeaconBlock`."
																		}
																	]
																},
																"state_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																		}
																	]
																}
															}
														},
														{
															"type": "object",
															"properties": {
																"body": {
																	"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec, which contains a transactions root rather than a full transactions list.",
																	"allOf": [
																		{
																			"type": "object",
																			"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
																			"properties": {
																				"randao_reveal": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						},
																						{
																							"description": "The RanDAO reveal value provided by the validator."
																						}
																					]
																				},
																				"eth1_data": {
																					"type": "object",
																					"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
																					"properties": {
																						"deposit_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Root of the deposit tree."
																								}
																							]
																						},
																						"deposit_count": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Total number of deposits."
																								}
																							]
																						},
																						"block_hash": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "Ethereum 1.x block hash."
																								}
																							]
																						}
																					}
																				},
																				"graffiti": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				"proposer_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
																						"properties": {
																							"signed_header_1": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							},
																							"signed_header_2": {
																								"type": "object",
																								"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																								"properties": {
																									"message": {
																										"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																										"allOf": [
																											{
																												"type": "object",
																												"properties": {
																													"slot": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "The slot to which this block corresponds."
																															}
																														]
																													},
																													"proposer_index": {
																														"allOf": [
																															{
																																"type": "string",
																																"example": "1"
																															},
																															{
																																"description": "Index of validator in validator registry."
																															}
																														]
																													},
																													"parent_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The signing merkle root of the parent `BeaconBlock`."
																															}
																														]
																													},
																													"state_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																															}
																														]
																													}
																												}
																											},
																											{
																												"type": "object",
																												"properties": {
																													"body_root": {
																														"allOf": [
																															{
																																"type": "string",
																																"format": "hex",
																																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																																"pattern": "^0x[a-fA-F0-9]{64}$"
																															},
																															{
																																"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																															}
																														]
																													}
																												}
																											}
																										]
																									},
																									"signature": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									}
																								}
																							}
																						}
																					}
																				},
																				"attester_slashings": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
																						"properties": {
																							"attestation_1": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							},
																							"attestation_2": {
																								"type": "object",
																								"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																								"properties": {
																									"attesting_indices": {
																										"type": "array",
																										"maxItems": 2048,
																										"description": "Attesting validator indices",
																										"items": {
																											"type": "string",
																											"example": "1"
																										}
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																											}
																										]
																									},
																									"data": {
																										"type": "object",
																										"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																										"properties": {
																											"slot": {
																												"type": "string",
																												"example": "1"
																											},
																											"index": {
																												"type": "string",
																												"example": "1"
																											},
																											"beacon_block_root": {
																												"allOf": [
																													{
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													},
																													{
																														"description": "LMD GHOST vote."
																													}
																												]
																											},
																											"source": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											},
																											"target": {
																												"type": "object",
																												"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																												"properties": {
																													"epoch": {
																														"type": "string",
																														"example": "1"
																													},
																													"root": {
																														"type": "string",
																														"format": "hex",
																														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																														"pattern": "^0x[a-fA-F0-9]{64}$"
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"attestations": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
																						"properties": {
																							"aggregation_bits": {
																								"description": "Attester aggregation bits.",
																								"type": "string",
																								"format": "hex",
																								"example": "0x01",
																								"pattern": "^0x[a-fA-F0-9]+$"
																							},
																							"signature": {
																								"allOf": [
																									{
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{192}$",
																										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																									},
																									{
																										"description": "BLS aggregate signature."
																									}
																								]
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																								"properties": {
																									"slot": {
																										"type": "string",
																										"example": "1"
																									},
																									"index": {
																										"type": "string",
																										"example": "1"
																									},
																									"beacon_block_root": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "LMD GHOST vote."
																											}
																										]
																									},
																									"source": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									},
																									"target": {
																										"type": "object",
																										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																										"properties": {
																											"epoch": {
																												"type": "string",
																												"example": "1"
																											},
																											"root": {
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				},
																				"deposits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
																						"properties": {
																							"proof": {
																								"type": "array",
																								"description": "Branch in the deposit tree.",
																								"items": {
																									"allOf": [
																										{
																											"type": "string",
																											"format": "hex",
																											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																											"pattern": "^0x[a-fA-F0-9]{64}$"
																										}
																									]
																								},
																								"minItems": 32,
																								"maxItems": 32
																							},
																							"data": {
																								"type": "object",
																								"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																								"properties": {
																									"pubkey": {
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"withdrawal_credentials": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																												"pattern": "^0x[a-fA-F0-9]{64}$"
																											},
																											{
																												"description": "The withdrawal credentials."
																											}
																										]
																									},
																									"amount": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Amount in Gwei."
																											}
																										]
																									},
																									"signature": {
																										"allOf": [
																											{
																												"type": "string",
																												"format": "hex",
																												"pattern": "^0x[a-fA-F0-9]{192}$",
																												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																											},
																											{
																												"description": "Container self-signature."
																											}
																										]
																									}
																								}
																							}
																						}
																					}
																				},
																				"voluntary_exits": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																								"properties": {
																									"epoch": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Minimum epoch for processing exit."
																											}
																										]
																									},
																									"validator_index": {
																										"allOf": [
																											{
																												"type": "string",
																												"example": "1"
																											},
																											{
																												"description": "Index of the exiting validator."
																											}
																										]
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				},
																				"sync_aggregate": {
																					"type": "object",
																					"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
																					"properties": {
																						"sync_committee_bits": {
																							"description": "Aggregation bits of sync",
																							"type": "string",
																							"format": "hex",
																							"example": "0x01",
																							"pattern": "^0x[a-fA-F0-9]+$"
																						},
																						"sync_committee_signature": {
																							"type": "string",
																							"format": "hex",
																							"pattern": "^0x[a-fA-F0-9]{192}$",
																							"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																						}
																					}
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"execution_payload_header": {
																					"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
																					"allOf": [
																						{
																							"type": "object",
																							"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																							"properties": {
																								"parent_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"fee_recipient": {
																									"type": "string",
																									"format": "hex",
																									"description": "An address on the execution (Ethereum 1) network.",
																									"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																									"pattern": "^0x[a-fA-F0-9]{40}$"
																								},
																								"state_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"receipts_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"logs_bloom": {
																									"type": "string",
																									"format": "hex",
																									"example": "0x
																									"pattern": "^0x[a-fA-F0-9]{512}$"
																								},
																								"prev_randao": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"block_number": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_limit": {
																									"type": "string",
																									"example": "1"
																								},
																								"gas_used": {
																									"type": "string",
																									"example": "1"
																								},
																								"timestamp": {
																									"type": "string",
																									"example": "1"
																								},
																								"extra_data": {
																									"type": "string",
																									"format": "hex",
																									"description": "Extra data on the execution (Ethereum 1) network.",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{0,64}$"
																								},
																								"base_fee_per_gas": {
																									"type": "string",
																									"example": "1"
																								},
																								"block_hash": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						},
																						{
																							"type": "object",
																							"properties": {
																								"transactions_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								"withdrawals_root": {
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								}
																							}
																						}
																					]
																				},
																				"bls_to_execution_changes": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
																						"properties": {
																							"message": {
																								"type": "object",
																								"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																								"properties": {
																									"validator_index": {
																										"description": "Index of the validator for which credentials will be changed.",
																										"type": "string",
																										"example": "1"
																									},
																									"from_bls_pubkey": {
																										"description": "Public key of existing credentials.",
																										"type": "string",
																										"format": "hex",
																										"pattern": "^0x[a-fA-F0-9]{96}$",
																										"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																									},
																									"to_execution_address": {
																										"description": "Execution address to which the credentials will be changed.",
																										"type": "string",
																										"format": "hex",
																										"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																										"pattern": "^0x[a-fA-F0-9]{40}$"
																									}
																								}
																							},
																							"signature": {
																								"type": "string",
																								"format": "hex",
																								"pattern": "^0x[a-fA-F0-9]{192}$",
																								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																							}
																						}
																					}
																				}
																			}
																		}
																	]
																}
															}
														}
													]
												}
											]
										}
									}
								}
							},
							"application/octet-stream": {
								"schema": {
									"description": "SSZ serialized block bytes. Use Accept header to choose this response type, version string is sent in header `Eth-Consensus-Version`."
								}
							}
						}
					},
					"400": {
						"description": "Invalid block production request",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"examples": {
									"InvalidRequest": {
										"value": {
											"code": 400,
											"message": "Invalid request to produce a block"
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/attestation_data": {
			"get": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"operationId": "produceAttestationData",
				"summary": "Produce an attestation data",
				"description": "Requests that the beacon node produce an AttestationData.\n\nA 503 error must be returned if the block identified by the response\n`beacon_block_root` is optimistic (i.e. the attestation attests to a block\nthat has not been fully verified by an execution engine).\n",
				"parameters": [
					{
						"name": "slot",
						"in": "query",
						"required": true,
						"description": "The slot for which an attestation data should be created.",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "committee_index",
						"in": "query",
						"description": "The committee index for which an attestation data should be created.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success response",
						"content": {
							"application/json": {
								"schema": {
									"title": "ProduceAttestationDataResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
											"properties": {
												"slot": {
													"type": "string",
													"example": "1"
												},
												"index": {
													"type": "string",
													"example": "1"
												},
												"beacon_block_root": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														{
															"description": "LMD GHOST vote."
														}
													]
												},
												"source": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												},
												"target": {
													"type": "object",
													"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
													"properties": {
														"epoch": {
															"type": "string",
															"example": "1"
														},
														"root": {
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/aggregate_attestation": {
			"get": {
				"operationId": "getAggregatedAttestation",
				"summary": "Get aggregated attestation",
				"description": "Aggregates all attestations matching given attestation data root and slot.\n\nA 503 error must be returned if the block identified by the response\n`beacon_block_root` is optimistic (i.e. the aggregated attestation attests\nto a block that has not been fully verified by an execution engine).\n",
				"tags": ["ValidatorRequiredApi", "Validator"],
				"parameters": [
					{
						"name": "attestation_data_root",
						"in": "query",
						"required": true,
						"description": "HashTreeRoot of AttestationData that validator wants aggregated",
						"schema": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					{
						"name": "slot",
						"in": "query",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Returns aggregated `Attestation` object with same `AttestationData` root.",
						"content": {
							"application/json": {
								"schema": {
									"title": "GetAggregatedAttestationResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
											"properties": {
												"aggregation_bits": {
													"description": "Attester aggregation bits.",
													"type": "string",
													"format": "hex",
													"example": "0x01",
													"pattern": "^0x[a-fA-F0-9]+$"
												},
												"signature": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														},
														{
															"description": "BLS aggregate signature."
														}
													]
												},
												"data": {
													"type": "object",
													"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
													"properties": {
														"slot": {
															"type": "string",
															"example": "1"
														},
														"index": {
															"type": "string",
															"example": "1"
														},
														"beacon_block_root": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "LMD GHOST vote."
																}
															]
														},
														"source": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"target": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 404,
									"message": "Requested item not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/aggregate_and_proofs": {
			"post": {
				"operationId": "publishAggregateAndProofs",
				"summary": "Publish multiple aggregate and proofs",
				"description": "Verifies given aggregate and proofs and publishes them on appropriate gossipsub topic.",
				"tags": ["ValidatorRequiredApi", "Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"description": "The [`SignedAggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/validator.md#signedaggregateandproof) object",
									"properties": {
										"message": {
											"allOf": [
												{
													"type": "object",
													"description": "The [`AggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/validator.md#aggregateandproof) without selection_proof",
													"properties": {
														"aggregator_index": {
															"type": "string",
															"example": "1"
														},
														"aggregate": {
															"type": "object",
															"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
															"properties": {
																"aggregation_bits": {
																	"description": "Attester aggregation bits.",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "BLS aggregate signature."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												},
												{
													"type": "object",
													"properties": {
														"selection_proof": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											]
										},
										"signature": {
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{192}$",
											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful response"
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/beacon_committee_subscriptions": {
			"post": {
				"operationId": "prepareBeaconCommitteeSubnet",
				"summary": "Signal beacon node to prepare for a committee subnet",
				"description": "After beacon node receives this request,\nsearch using discv5 for peers related to this subnet\nand replace current peers with those ones if necessary\nIf validator `is_aggregator`, beacon node must:\n- announce subnet topic subscription on gossipsub\n- aggregate attestations received on that subnet\n",
				"tags": ["ValidatorRequiredApi", "Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"title": "SubscribeToBeaconCommitteeSubnetRequestBody",
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"validator_index": {
											"type": "string",
											"example": "1"
										},
										"committee_index": {
											"type": "string",
											"example": "1"
										},
										"committees_at_slot": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "Number of committees at the returned slot"
												}
											]
										},
										"slot": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "Should be slot at which validator is assigned to attest"
												}
											]
										},
										"is_aggregator": {
											"type": "boolean",
											"description": "Signals to BN that a validator on the VC has been chosen for aggregator role."
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Slot signature is valid and beacon node has prepared the attestation subnet.\n\nNote that we cannot be certain the Beacon node will find peers for that subnet for various reasons.\n"
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/sync_committee_subscriptions": {
			"post": {
				"operationId": "prepareSyncCommitteeSubnets",
				"summary": "Subscribe to sync committee subnets",
				"description": "Subscribe to a number of sync committee subnets\n\nSync committees are not present in phase0, but are required for Altair networks.\n\nSubscribing to sync committee subnets is an action performed by VC to enable network participation in Altair networks, and only required if the VC has an active validator in an active sync committee.\n",
				"tags": ["ValidatorRequiredApi", "Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"validator_index": {
											"type": "string",
											"example": "1"
										},
										"sync_committee_indices": {
											"type": "array",
											"items": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													}
												]
											}
										},
										"until_epoch": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "The final epoch (exclusive value) that the specified validator requires the subscription for."
												}
											]
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful response"
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/beacon_committee_selections": {
			"post": {
				"operationId": "submitBeaconCommitteeSelections",
				"summary": "Determine if a distributed validator has been selected to aggregate attestations",
				"description": "This endpoint should be used by a validator client running as part of a distributed validator cluster, and is \nimplemented by a distributed validator middleware client. This endpoint is used to exchange partial \nselection proofs for combined/aggregated selection proofs to allow a validator client \nto correctly determine if one of its validators has been selected to perform an aggregation duty in this slot. \nConsensus clients need not support this endpoint and may return a 501.\n",
				"tags": ["Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"title": "BeaconCommitteeSelectionRequest",
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"validator_index": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "Index of the validator"
												}
											]
										},
										"slot": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "The slot at which a validator is assigned to attest"
												}
											]
										},
										"selection_proof": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{192}$",
													"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
												},
												{
													"description": "The `slot_signature` calculated by the validator for the upcoming attestation slot"
												}
											]
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the threshold aggregated beacon committee selection proofs.\n",
						"content": {
							"application/json": {
								"schema": {
									"title": "BeaconCommitteeSelectionResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"validator_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of the validator"
															}
														]
													},
													"slot": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "The slot at which a validator is assigned to attest"
															}
														]
													},
													"selection_proof": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "The `slot_signature` calculated by the validator for the upcoming attestation slot"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"501": {
						"description": "Endpoint not implemented.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 501
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 501,
									"message": "Endpoint not implemented"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/sync_committee_contribution": {
			"get": {
				"tags": ["ValidatorRequiredApi", "Validator"],
				"operationId": "produceSyncCommitteeContribution",
				"summary": "Produce a sync committee contribution",
				"description": "Requests that the beacon node produce a sync committee contribution.\n\nA 503 error must be returned if the block identified by the response\n`beacon_block_root` is optimistic (i.e. the sync committee contribution\nrefers to a block that has not been fully verified by an execution engine).\n",
				"parameters": [
					{
						"name": "slot",
						"in": "query",
						"required": true,
						"description": "The slot for which a sync committee contribution should be created.",
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "subcommittee_index",
						"in": "query",
						"description": "the subcommittee index for which to produce the contribution.",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					},
					{
						"name": "beacon_block_root",
						"in": "query",
						"description": "the block root for which to produce the contribution.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success response",
						"content": {
							"application/json": {
								"schema": {
									"title": "produceSyncCommitteeContributionResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "object",
											"properties": {
												"slot": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"description": "The slot at which the validator is providing a sync committee contribution."
														}
													]
												},
												"beacon_block_root": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
															"pattern": "^0x[a-fA-F0-9]{64}$"
														},
														{
															"description": "Block root for this contribution."
														}
													]
												},
												"subcommittee_index": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"description": "The index of the subcommittee that the contribution pertains to."
														}
													]
												},
												"aggregation_bits": {
													"allOf": [
														{
															"description": "A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."
														},
														{
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{2,}$"
														},
														{
															"example": "0x01"
														}
													]
												},
												"signature": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														},
														{
															"description": "Signature by the validator(s) over the block root of `slot`"
														}
													]
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 404,
									"message": "Requested item not found"
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/sync_committee_selections": {
			"post": {
				"operationId": "submitSyncCommitteeSelections",
				"summary": "Determine if a distributed validator has been selected to make a sync committee contribution",
				"description": "Submit sync committee selections to a DVT middleware client. It returns the threshold aggregated sync \ncommittee selection. This endpoint should be used by a validator client running as part of a distributed \nvalidator cluster, and is implemented by a distributed validator middleware client. This endpoint is \nused to exchange partial selection proof slot signatures for combined/aggregated selection proofs to \nallow a validator client to correctly determine if one of its validators has been selected to perform \na sync committee contribution (sync aggregation) duty in this slot. Consensus clients need not support \nthis endpoint and may return a 501.\n",
				"tags": ["Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"title": "SyncCommitteeSelectionRequest",
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"validator_index": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "Index of the validator"
												}
											]
										},
										"slot": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "The slot at which validator is assigned to produce a sync committee contribution"
												}
											]
										},
										"subcommittee_index": {
											"allOf": [
												{
													"type": "string",
													"example": "1"
												},
												{
													"description": "SubcommitteeIndex to which the validator is assigned"
												}
											]
										},
										"selection_proof": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{192}$",
													"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
												},
												{
													"description": "The `slot_signature` calculated by the validator for the upcoming sync committee slot"
												}
											]
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Returns the threshold aggregated sync committee selection proofs.\n",
						"content": {
							"application/json": {
								"schema": {
									"title": "SyncCommitteeSelectionResponse",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"validator_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Index of the validator"
															}
														]
													},
													"slot": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "The slot at which validator is assigned to produce a sync committee contribution"
															}
														]
													},
													"subcommittee_index": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "SubcommitteeIndex to which the validator is assigned"
															}
														]
													},
													"selection_proof": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "The `slot_signature` calculated by the validator for the upcoming sync committee slot"
															}
														]
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"501": {
						"description": "Endpoint not implemented.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 501
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 501,
									"message": "Endpoint not implemented"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/contribution_and_proofs": {
			"post": {
				"operationId": "publishContributionAndProofs",
				"summary": "Publish multiple contribution and proofs",
				"description": "Publish multiple signed sync committee contribution and proofs",
				"tags": ["ValidatorRequiredApi", "Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"message": {
											"type": "object",
											"properties": {
												"aggregator_index": {
													"allOf": [
														{
															"type": "string",
															"example": "1"
														},
														{
															"description": "Index of validator in validator registry."
														}
													]
												},
												"selection_proof": {
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{192}$",
													"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
												},
												"contribution": {
													"type": "object",
													"properties": {
														"slot": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "The slot at which the validator is providing a sync committee contribution."
																}
															]
														},
														"beacon_block_root": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "Block root for this contribution."
																}
															]
														},
														"subcommittee_index": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "The index of the subcommittee that the contribution pertains to."
																}
															]
														},
														"aggregation_bits": {
															"allOf": [
																{
																	"description": "A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."
																},
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{2,}$"
																},
																{
																	"example": "0x01"
																}
															]
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "Signature by the validator(s) over the block root of `slot`"
																}
															]
														}
													}
												}
											}
										},
										"signature": {
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{192}$",
											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful response"
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/prepare_beacon_proposer": {
			"post": {
				"operationId": "prepareBeaconProposer",
				"summary": "Provide beacon node with proposals for the given validators.",
				"description": "Prepares the beacon node for potential proposers by supplying information\nrequired when proposing blocks for the given validators.  The information\nsupplied for each validator index will persist through the epoch in which\nthe call is submitted and for a further two epochs after that, or until the\nbeacon node restarts.  It is expected that validator clients will send this\ninformation periodically, for example each epoch, to ensure beacon nodes have\ncorrect and timely fee recipient information.\n\nNote that there is no guarantee that the beacon node will use the supplied fee\nrecipient when creating a block proposal, so on receipt of a proposed block the\nvalidator should confirm that it finds the fee recipient within the block\nacceptable before signing it.\n\nAlso note that requests containing currently inactive or unknown validator\nindices will be accepted, as they may become active at a later epoch.\n",
				"tags": ["ValidatorRequiredApi", "Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"validator_index": {
											"type": "string",
											"example": "1"
										},
										"fee_recipient": {
											"type": "string",
											"format": "hex",
											"description": "An address on the execution (Ethereum 1) network.",
											"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
											"pattern": "^0x[a-fA-F0-9]{40}$"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Preparation information has been received.\n"
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/register_validator": {
			"post": {
				"operationId": "registerValidator",
				"summary": "Provide beacon node with registrations for the given validators to the external builder network.",
				"description": "Prepares the beacon node for engaging with external builders. The\ninformation must be sent by the beacon node to the builder network. It is\nexpected that the validator client will send this information periodically\nto ensure the beacon node has correct and timely registration information\nto provide to builders. The validator client should not sign blinded beacon\nblocks that do not adhere to their latest fee recipient and gas limit\npreferences.\n\nNote that only registrations for active or pending validators must be sent to the builder network.\nRegistrations for unknown or exited validators must be filtered out and not sent to the builder network.\n",
				"tags": ["Validator"],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "array",
								"items": {
									"type": "object",
									"description": "The `SignedValidatorRegistration` object from the Builder API specification.",
									"properties": {
										"message": {
											"type": "object",
											"description": "The `ValidatorRegistration` object from the Builder API specification.",
											"properties": {
												"fee_recipient": {
													"description": "Address to receive fees from the block.",
													"type": "string",
													"format": "hex",
													"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
													"pattern": "^0x[a-fA-F0-9]{40}$"
												},
												"gas_limit": {
													"description": "Preferred gas limit of validator.",
													"type": "string",
													"example": "1"
												},
												"timestamp": {
													"description": "Unix timestamp of registration.",
													"type": "string",
													"example": "1"
												},
												"pubkey": {
													"description": "BLS public key of validator.",
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{96}$",
													"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
												}
											}
										},
										"signature": {
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{192}$",
											"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
										}
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Registration information has been received."
					},
					"400": {
						"description": "Invalid request syntax.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 400
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/validator/liveness/{epoch}": {
			"post": {
				"tags": ["Validator"],
				"summary": "Indicates if a validator has been observed on the network",
				"operationId": "getLiveness",
				"description": "Requests the beacon node to indicate if a validator has been observed to be live in a given epoch. The beacon node might detect liveness by observing messages from the validator on the network, in the beacon chain, from its API or from any other source. A beacon node SHOULD support the current and previous epoch, however it MAY support earlier epoch. It is important to note that the values returned by the beacon node are not canonical; they are best-effort and based upon a subjective view of the network. A beacon node that was recently started or suffered a network partition may indicate that a validator is not live when it actually is.",
				"parameters": [
					{
						"name": "epoch",
						"description": "The epoch for which liveness is being queried",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string",
							"example": "1"
						}
					}
				],
				"requestBody": {
					"description": "An array of the validator indices for which to detect liveness.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"title": "PostLivenessRequestBody",
								"type": "array",
								"items": {
									"minItems": 1,
									"type": "string",
									"example": "1"
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Success response",
						"content": {
							"application/json": {
								"schema": {
									"title": "PostLivenessResponseBody",
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"index": {
														"type": "string",
														"example": "1"
													},
													"is_live": {
														"type": "boolean"
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "Invalid epoch or index",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"type": "object",
											"properties": {
												"code": {
													"description": "Either specific error code in case of invalid request or http status code",
													"type": "number",
													"example": 404
												},
												"message": {
													"description": "Message describing error",
													"type": "string"
												},
												"stacktraces": {
													"description": "Optional stacktraces, sent when node is in debug mode",
													"type": "array",
													"items": {
														"type": "string"
													}
												}
											}
										},
										{
											"example": {
												"code": 400,
												"message": "Invalid epoch: -2"
											}
										}
									]
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					},
					"503": {
						"description": "Beacon node is currently syncing, try again later.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 503,
									"message": "Beacon node is currently syncing and not serving request on that endpoint"
								}
							}
						}
					}
				}
			}
		},
		"/eth/v1/events": {
			"get": {
				"operationId": "eventstream",
				"summary": "Subscribe to beacon node events",
				"tags": ["Events", "ValidatorRequiredApi"],
				"description": "Provides endpoint to subscribe to beacon node Server-Sent-Events stream.\nConsumers should use [eventsource](https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface)\nimplementation to listen on those events.\n\nServers _may_ send SSE comments beginning with `:` for any purpose, including to keep the\nevent stream connection alive in the presence of proxy servers.\n",
				"parameters": [
					{
						"name": "topics",
						"in": "query",
						"required": true,
						"description": "Event types to subscribe to",
						"schema": {
							"type": "array",
							"items": {
								"type": "string",
								"uniqueItems": true,
								"enum": [
									"head",
									"block",
									"attestation",
									"voluntary_exit",
									"bls_to_execution_change",
									"finalized_checkpoint",
									"chain_reorg",
									"contribution_and_proof",
									"light_client_finality_update",
									"light_client_optimistic_update",
									"payload_attributes"
								]
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "Opened SSE stream.",
						"content": {
							"text/event-stream": {
								"schema": {
									"type": "string",
									"description": "https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format"
								},
								"examples": {
									"head": {
										"description": "The node has finished processing, resulting in a new head. previous_duty_dependent_root is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch - 1) - 1)` and current_duty_dependent_root is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch) - 1)`. Both dependent roots use the genesis block root in the case of underflow.",
										"value": "event: head\ndata: {\"slot\":\"10\", \"block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"state\":\"0x600e852a08c1200654ddf11025f1ceacb3c2e74bdd5c630cde0838b2591b69f9\", \"epoch_transition\":false, \"previous_duty_dependent_root\":\"0x5e0043f107cb57913498fbf2f99ff55e730bf1e151f02f221e977c91a90a0e91\", \"current_duty_dependent_root\":\"0x5e0043f107cb57913498fbf2f99ff55e730bf1e151f02f221e977c91a90a0e91\", \"execution_optimistic\": false}\n"
									},
									"block": {
										"description": "The node has received a valid block (from P2P or API)",
										"value": "event: block\ndata: {\"slot\":\"10\", \"block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"execution_optimistic\": false}\n"
									},
									"attestation": {
										"description": "The node has received a valid attestation (from P2P or API)",
										"value": "event: attestation\ndata: {\"aggregation_bits\":\"0x01\", \"signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\", \"data\":{\"slot\":\"1\", \"index\":\"1\", \"beacon_block_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"source\":{\"epoch\":\"1\", \"root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}, \"target\":{\"epoch\":\"1\", \"root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}}}\n"
									},
									"voluntary_exit": {
										"description": "The node has received a valid voluntary exit (from P2P or API)",
										"value": "event: voluntary_exit\ndata: {\"message\":{\"epoch\":\"1\", \"validator_index\":\"1\"}, \"signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\"}\n"
									},
									"bls_to_execution_change": {
										"description": "The node has received a BLS to execution change (from P2P or API)",
										"value": "event: bls_to_execution_change\ndata: {\"message\":{\"validator_index\":\"1\", \"from_bls_pubkey\":\"0x933ad9491b62059dd065b560d256d8957a8c402cc6e8d8ee7290ae11e8f7329267a8811c397529dac52ae1342ba58c95\", \"to_execution_address\":\"0x9be8d619c56699667c1fedcd15f6b14d8B067f72\"}, \"signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\"}\n"
									},
									"finalized_checkpoint": {
										"description": "Finalized checkpoint has been updated",
										"value": "event: finalized_checkpoint\ndata: {\"block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"state\":\"0x600e852a08c1200654ddf11025f1ceacb3c2e74bdd5c630cde0838b2591b69f9\", \"epoch\":\"2\", \"execution_optimistic\": false }\n"
									},
									"chain_reorg": {
										"description": "The node has reorganized its chain",
										"value": "event: chain_reorg\ndata: {\"slot\":\"200\", \"depth\":\"50\", \"old_head_block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"new_head_block\":\"0x76262e91970d375a19bfe8a867288d7b9cde43c8635f598d93d39d041706fc76\", \"old_head_state\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"new_head_state\":\"0x600e852a08c1200654ddf11025f1ceacb3c2e74bdd5c630cde0838b2591b69f9\", \"epoch\":\"2\", \"execution_optimistic\": false}\n"
									},
									"contribution_and_proof": {
										"description": "The node has received a valid sync committee SignedContributionAndProof (from P2P or API)",
										"value": "event: contribution_and_proof\ndata: {\"message\": {\"aggregator_index\": \"997\", \"contribution\": {\"slot\": \"168097\", \"beacon_block_root\": \"0x56f1fd4262c08fa81e27621c370e187e621a67fc80fe42340b07519f84b42ea1\", \"subcommittee_index\": \"0\", \"aggregation_bits\": \"0xffffffffffffffffffffffffffffffff\", \"signature\": \"0x85ab9018e14963026476fdf784cc674da144b3dbdb47516185438768774f077d882087b90ad642469902e782a8b43eed0cfc1b862aa9a473b54c98d860424a702297b4b648f3f30bdaae8a8b7627d10d04cb96a2cc8376af3e54a9aa0c8145e3\"}, \"selection_proof\": \"0x87c305f04bfe5db27c2b19fc23e00d7ac496ec7d3e759cbfdd1035cb8cf6caaa17a36a95a08ba78c282725e7b66a76820ca4eb333822bd399ceeb9807a0f2926c67ce67cfe06a0b0006838203b493505a8457eb79913ce1a3bcd1cc8e4ef30ed\"}, \"signature\": \"0xac118511474a94f857300b315c50585c32a713e4452e26a6bb98cdb619936370f126ed3b6bb64469259ee92e69791d9e12d324ce6fd90081680ce72f39d85d50b0ff977260a8667465e613362c6d6e6e745e1f9323ec1d6f16041c4e358839ac\"}\n"
									},
									"light_client_finality_update": {
										"description": "The node's latest known `LightClientFinalityUpdate` has been updated",
										"value": "event: light_client_finality_update\ndata: {\"version\":\"phase0\", \"data\": {\"attested_header\": {\"beacon\": {\"slot\":\"1\", \"proposer_index\":\"1\", \"parent_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"state_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"body_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}}, \"finalized_header\": {\"beacon\": {\"slot\":\"1\", \"proposer_index\":\"1\", \"parent_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"state_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"body_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}}, \"finality_branch\": [\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"], \"sync_aggregate\": {\"sync_committee_bits\":\"0x01\", \"sync_committee_signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\"}, \"signature_slot\":\"1\"}}\n"
									},
									"light_client_optimistic_update": {
										"description": "The node's latest known `LightClientOptimisticUpdate` has been updated",
										"value": "event: light_client_optimistic_update\ndata: {\"version\":\"phase0\", \"data\": {\"attested_header\": {\"beacon\": {\"slot\":\"1\", \"proposer_index\":\"1\", \"parent_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"state_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"body_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}}, \"sync_aggregate\": {\"sync_committee_bits\":\"0x01\", \"sync_committee_signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\"}, \"signature_slot\":\"1\"}}\n"
									},
									"payload_attributes": {
										"description": "The node has computed new payload attributes for execution payload building.\n\nThis event gives block builders and relays sufficient information to construct or\nverify a block at `proposal_slot`. The meanings of the fields are:\n\n- `version`: the identifier of the beacon hard fork at `proposal_slot`, e.g.\n  `\"bellatrix\"`, `\"capella\"`.\n- `proposal_slot`: the slot at which a block using these payload attributes may be\n   built.\n- `parent_block_root`: the beacon block root of the parent block to be built upon.\n- `parent_block_number`: the execution block number of the parent block.\n- `parent_block_hash`: the execution block hash of the parent block.\n- `proposer_index`: the validator index of the proposer at `proposal_slot` on\n   the chain identified by `parent_block_root`.\n- `payload_attributes`: beacon API encoding of `PayloadAttributesV<N>` as\n   defined by the `execution-apis` specification. The version `N` must match the\n   payload attributes for the hard fork matching `version`.\n   The beacon API encoded object must have equivalent fields to its counterpart in\n   `execution-apis` with two differences: 1) `snake_case` identifiers must be used\n   rather than `camelCase`; 2) integers must be encoded as quoted decimals rather\n   than big-endian hex.\n\nThe frequency at which this event is sent may depend on beacon node configuration.\nThe fee recipient may also be set via beacon node config, but should likely be\nignored by block builders and most other API consumers.\n",
										"value": "event: payload_attributes\ndata: {\"version\": \"capella\", \"data\": {\"proposer_index\": \"123\", \"proposal_slot\": \"10\", \"parent_block_number\": \"9\", \"parent_block_root\": \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"parent_block_hash\": \"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"payload_attributes\": {\"timestamp\": \"123456\", \"prev_randao\": \"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"suggested_fee_recipient\": \"0x0000000000000000000000000000000000000000\", \"withdrawals\": [{\"index\": \"5\", \"validator_index\": \"10\", \"address\": \"0x0000000000000000000000000000000000000000\", \"amount\": \"15640\"}]}}},\n"
									}
								}
							}
						}
					},
					"400": {
						"description": "The topics supplied could not be parsed",
						"content": {
							"application/json": {
								"schema": {
									"example": {
										"code": 400,
										"message": "Invalid topic: weather_forecast"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					},
					"500": {
						"description": "Beacon node internal error.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"code": {
											"description": "Either specific error code in case of invalid request or http status code",
											"type": "number",
											"example": 404
										},
										"message": {
											"description": "Message describing error",
											"type": "string"
										},
										"stacktraces": {
											"description": "Optional stacktraces, sent when node is in debug mode",
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									}
								},
								"example": {
									"code": 500,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"BeaconState": {
				"type": "object",
				"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
				"properties": {
					"genesis_time": {
						"type": "string",
						"example": "1"
					},
					"genesis_validators_root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"slot": {
						"type": "string",
						"example": "1"
					},
					"fork": {
						"type": "object",
						"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
						"properties": {
							"previous_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"current_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"epoch": {
								"type": "string",
								"example": "1"
							}
						}
					},
					"latest_block_header": {
						"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
											}
										]
									}
								}
							}
						]
					},
					"block_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"state_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"historical_roots": {
						"type": "array",
						"description": "Variable length list, maximum 16777216 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"eth1_data": {
						"type": "object",
						"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
						"properties": {
							"deposit_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Root of the deposit tree."
									}
								]
							},
							"deposit_count": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Total number of deposits."
									}
								]
							},
							"block_hash": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Ethereum 1.x block hash."
									}
								]
							}
						}
					},
					"eth1_data_votes": {
						"type": "array",
						"description": "Fixed length of 1024 items",
						"items": {
							"type": "object",
							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
							"properties": {
								"deposit_root": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of the deposit tree."
										}
									]
								},
								"deposit_count": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Total number of deposits."
										}
									]
								},
								"block_hash": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Ethereum 1.x block hash."
										}
									]
								}
							}
						}
					},
					"eth1_deposit_index": {
						"type": "string",
						"example": "1"
					},
					"validators": {
						"type": "array",
						"description": "Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "object",
							"properties": {
								"pubkey": {
									"type": "string",
									"format": "hex",
									"pattern": "^0x[a-fA-F0-9]{96}$",
									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
								},
								"withdrawal_credentials": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of withdrawal credentials"
										}
									]
								},
								"effective_balance": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Balance at stake in Gwei."
										}
									]
								},
								"slashed": {
									"type": "boolean",
									"example": false,
									"description": "Was validator slashed (not longer active)."
								},
								"activation_eligibility_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When criteria for activation were met."
										}
									]
								},
								"activation_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
										}
									]
								},
								"exit_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
										}
									]
								},
								"withdrawable_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
										}
									]
								}
							}
						}
					},
					"balances": {
						"type": "array",
						"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"randao_mixes": {
						"type": "array",
						"description": "Fixed length of 65536 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"slashings": {
						"type": "array",
						"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"previous_epoch_attestations": {
						"type": "array",
						"items": {
							"type": "object",
							"description": "The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.",
							"properties": {
								"aggregation_bits": {
									"description": "Attester aggregation bits.",
									"type": "string",
									"format": "hex",
									"example": "0x01",
									"pattern": "^0x[a-fA-F0-9]+$"
								},
								"data": {
									"type": "object",
									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
									"properties": {
										"slot": {
											"type": "string",
											"example": "1"
										},
										"index": {
											"type": "string",
											"example": "1"
										},
										"beacon_block_root": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												{
													"description": "LMD GHOST vote."
												}
											]
										},
										"source": {
											"type": "object",
											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
											"properties": {
												"epoch": {
													"type": "string",
													"example": "1"
												},
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												}
											}
										},
										"target": {
											"type": "object",
											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
											"properties": {
												"epoch": {
													"type": "string",
													"example": "1"
												},
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												}
											}
										}
									}
								},
								"inclusion_delay": {
									"type": "string",
									"example": "1"
								},
								"proposer_index": {
									"type": "string",
									"example": "1"
								}
							}
						}
					},
					"current_epoch_attestations": {
						"type": "array",
						"items": {
							"type": "object",
							"description": "The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.",
							"properties": {
								"aggregation_bits": {
									"description": "Attester aggregation bits.",
									"type": "string",
									"format": "hex",
									"example": "0x01",
									"pattern": "^0x[a-fA-F0-9]+$"
								},
								"data": {
									"type": "object",
									"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
									"properties": {
										"slot": {
											"type": "string",
											"example": "1"
										},
										"index": {
											"type": "string",
											"example": "1"
										},
										"beacon_block_root": {
											"allOf": [
												{
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												},
												{
													"description": "LMD GHOST vote."
												}
											]
										},
										"source": {
											"type": "object",
											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
											"properties": {
												"epoch": {
													"type": "string",
													"example": "1"
												},
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												}
											}
										},
										"target": {
											"type": "object",
											"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
											"properties": {
												"epoch": {
													"type": "string",
													"example": "1"
												},
												"root": {
													"type": "string",
													"format": "hex",
													"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
													"pattern": "^0x[a-fA-F0-9]{64}$"
												}
											}
										}
									}
								},
								"inclusion_delay": {
									"type": "string",
									"example": "1"
								},
								"proposer_index": {
									"type": "string",
									"example": "1"
								}
							}
						}
					},
					"justification_bits": {
						"description": "Bit set for every recent justified epoch",
						"type": "string",
						"format": "hex",
						"example": "0x01",
						"pattern": "^0x[a-fA-F0-9]+$"
					},
					"previous_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"current_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"finalized_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					}
				}
			},
			"BeaconBlock": {
				"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
				"allOf": [
					{
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot to which this block corresponds."
									}
								]
							},
							"proposer_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"parent_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The signing merkle root of the parent `BeaconBlock`."
									}
								]
							},
							"state_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
									}
								]
							}
						}
					},
					{
						"type": "object",
						"properties": {
							"body": {
								"type": "object",
								"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
								"properties": {
									"randao_reveal": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											},
											{
												"description": "The RanDAO reveal value provided by the validator."
											}
										]
									},
									"eth1_data": {
										"type": "object",
										"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
										"properties": {
											"deposit_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "Root of the deposit tree."
													}
												]
											},
											"deposit_count": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Total number of deposits."
													}
												]
											},
											"block_hash": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "Ethereum 1.x block hash."
													}
												]
											}
										}
									},
									"graffiti": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"proposer_slashings": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
											"properties": {
												"signed_header_1": {
													"type": "object",
													"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												"signed_header_2": {
													"type": "object",
													"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											}
										}
									},
									"attester_slashings": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
											"properties": {
												"attestation_1": {
													"type": "object",
													"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
													"properties": {
														"attesting_indices": {
															"type": "array",
															"maxItems": 2048,
															"description": "Attesting validator indices",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												},
												"attestation_2": {
													"type": "object",
													"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
													"properties": {
														"attesting_indices": {
															"type": "array",
															"maxItems": 2048,
															"description": "Attesting validator indices",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									},
									"attestations": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
											"properties": {
												"aggregation_bits": {
													"description": "Attester aggregation bits.",
													"type": "string",
													"format": "hex",
													"example": "0x01",
													"pattern": "^0x[a-fA-F0-9]+$"
												},
												"signature": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														},
														{
															"description": "BLS aggregate signature."
														}
													]
												},
												"data": {
													"type": "object",
													"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
													"properties": {
														"slot": {
															"type": "string",
															"example": "1"
														},
														"index": {
															"type": "string",
															"example": "1"
														},
														"beacon_block_root": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "LMD GHOST vote."
																}
															]
														},
														"source": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"target": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														}
													}
												}
											}
										}
									},
									"deposits": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
											"properties": {
												"proof": {
													"type": "array",
													"description": "Branch in the deposit tree.",
													"items": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														]
													},
													"minItems": 32,
													"maxItems": 32
												},
												"data": {
													"type": "object",
													"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
													"properties": {
														"pubkey": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{96}$",
															"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
															"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
														},
														"withdrawal_credentials": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "The withdrawal credentials."
																}
															]
														},
														"amount": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Amount in Gwei."
																}
															]
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "Container self-signature."
																}
															]
														}
													}
												}
											}
										}
									},
									"voluntary_exits": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
											"properties": {
												"message": {
													"type": "object",
													"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
													"properties": {
														"epoch": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Minimum epoch for processing exit."
																}
															]
														},
														"validator_index": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Index of the exiting validator."
																}
															]
														}
													}
												},
												"signature": {
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{192}$",
													"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
												}
											}
										}
									}
								}
							}
						}
					}
				]
			},
			"DepositSnapshotResponse": {
				"type": "object",
				"properties": {
					"finalized": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								}
							]
						},
						"minItems": 3,
						"maxItems": 3
					},
					"deposit_root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"deposit_count": {
						"type": "string",
						"example": "1"
					},
					"execution_block_hash": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"execution_block_height": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"SignedBeaconBlock": {
				"type": "object",
				"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.",
				"properties": {
					"message": {
						"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body": {
										"type": "object",
										"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.",
										"properties": {
											"randao_reveal": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The RanDAO reveal value provided by the validator."
													}
												]
											},
											"eth1_data": {
												"type": "object",
												"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
												"properties": {
													"deposit_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Root of the deposit tree."
															}
														]
													},
													"deposit_count": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Total number of deposits."
															}
														]
													},
													"block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Ethereum 1.x block hash."
															}
														]
													}
												}
											},
											"graffiti": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"proposer_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
													"properties": {
														"signed_header_1": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signed_header_2": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											},
											"attester_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
													"properties": {
														"attestation_1": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														},
														"attestation_2": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											},
											"attestations": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
													"properties": {
														"aggregation_bits": {
															"description": "Attester aggregation bits.",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "BLS aggregate signature."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"deposits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
													"properties": {
														"proof": {
															"type": "array",
															"description": "Branch in the deposit tree.",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																]
															},
															"minItems": 32,
															"maxItems": 32
														},
														"data": {
															"type": "object",
															"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
															"properties": {
																"pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"withdrawal_credentials": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The withdrawal credentials."
																		}
																	]
																},
																"amount": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Amount in Gwei."
																		}
																	]
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "Container self-signature."
																		}
																	]
																}
															}
														}
													}
												}
											},
											"voluntary_exits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
															"properties": {
																"epoch": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Minimum epoch for processing exit."
																		}
																	]
																},
																"validator_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of the exiting validator."
																		}
																	]
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											}
										}
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"SignedBeaconBlockHeader": {
				"type": "object",
				"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
				"properties": {
					"message": {
						"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
											}
										]
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"ValidatorResponse": {
				"type": "object",
				"properties": {
					"index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in validator registry."
							}
						]
					},
					"balance": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Current validator balance in gwei."
							}
						]
					},
					"status": {
						"description": "Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached regular exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached regular exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n",
						"enum": [
							"pending_initialized",
							"pending_queued",
							"active_ongoing",
							"active_exiting",
							"active_slashed",
							"exited_unslashed",
							"exited_slashed",
							"withdrawal_possible",
							"withdrawal_done"
						],
						"example": "active_ongoing"
					},
					"validator": {
						"type": "object",
						"properties": {
							"pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							},
							"withdrawal_credentials": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Root of withdrawal credentials"
									}
								]
							},
							"effective_balance": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Balance at stake in Gwei."
									}
								]
							},
							"slashed": {
								"type": "boolean",
								"example": false,
								"description": "Was validator slashed (not longer active)."
							},
							"activation_eligibility_epoch": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "When criteria for activation were met."
									}
								]
							},
							"activation_epoch": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
									}
								]
							},
							"exit_epoch": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
									}
								]
							},
							"withdrawable_epoch": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
									}
								]
							}
						}
					}
				}
			},
			"ValidatorBalanceResponse": {
				"type": "object",
				"properties": {
					"index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in validator registry."
							}
						]
					},
					"balance": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Current validator balance in gwei."
							}
						]
					}
				}
			},
			"ValidatorStatus": {
				"description": "Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached regular exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached regular exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n",
				"enum": [
					"pending_initialized",
					"pending_queued",
					"active_ongoing",
					"active_exiting",
					"active_slashed",
					"exited_unslashed",
					"exited_slashed",
					"withdrawal_possible",
					"withdrawal_done"
				],
				"example": "active_ongoing"
			},
			"Committee": {
				"description": "Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)",
				"type": "object",
				"properties": {
					"index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Committee index at a slot"
							}
						]
					},
					"slot": {
						"type": "string",
						"example": "1"
					},
					"validators": {
						"type": "array",
						"description": "List of validator indices assigned to this committee",
						"items": {
							"type": "string",
							"example": "1"
						}
					}
				}
			},
			"AttesterSlashing": {
				"type": "object",
				"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
				"properties": {
					"attestation_1": {
						"type": "object",
						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
						"properties": {
							"attesting_indices": {
								"type": "array",
								"maxItems": 2048,
								"description": "Attesting validator indices",
								"items": {
									"type": "string",
									"example": "1"
								}
							},
							"signature": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{192}$",
										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
									},
									{
										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
									}
								]
							},
							"data": {
								"type": "object",
								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
								"properties": {
									"slot": {
										"type": "string",
										"example": "1"
									},
									"index": {
										"type": "string",
										"example": "1"
									},
									"beacon_block_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "LMD GHOST vote."
											}
										]
									},
									"source": {
										"type": "object",
										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
										"properties": {
											"epoch": {
												"type": "string",
												"example": "1"
											},
											"root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									"target": {
										"type": "object",
										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
										"properties": {
											"epoch": {
												"type": "string",
												"example": "1"
											},
											"root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								}
							}
						}
					},
					"attestation_2": {
						"type": "object",
						"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
						"properties": {
							"attesting_indices": {
								"type": "array",
								"maxItems": 2048,
								"description": "Attesting validator indices",
								"items": {
									"type": "string",
									"example": "1"
								}
							},
							"signature": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{192}$",
										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
									},
									{
										"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
									}
								]
							},
							"data": {
								"type": "object",
								"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
								"properties": {
									"slot": {
										"type": "string",
										"example": "1"
									},
									"index": {
										"type": "string",
										"example": "1"
									},
									"beacon_block_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "LMD GHOST vote."
											}
										]
									},
									"source": {
										"type": "object",
										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
										"properties": {
											"epoch": {
												"type": "string",
												"example": "1"
											},
											"root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									"target": {
										"type": "object",
										"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
										"properties": {
											"epoch": {
												"type": "string",
												"example": "1"
											},
											"root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"ProposerSlashing": {
				"type": "object",
				"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
				"properties": {
					"signed_header_1": {
						"type": "object",
						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
						"properties": {
							"message": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signed_header_2": {
						"type": "object",
						"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
						"properties": {
							"message": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					}
				}
			},
			"SignedVoluntaryExit": {
				"type": "object",
				"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
				"properties": {
					"message": {
						"type": "object",
						"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
						"properties": {
							"epoch": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Minimum epoch for processing exit."
									}
								]
							},
							"validator_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of the exiting validator."
									}
								]
							}
						}
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"SignedBLSToExecutionChange": {
				"type": "object",
				"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
				"properties": {
					"message": {
						"type": "object",
						"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
						"properties": {
							"validator_index": {
								"description": "Index of the validator for which credentials will be changed.",
								"type": "string",
								"example": "1"
							},
							"from_bls_pubkey": {
								"description": "Public key of existing credentials.",
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							},
							"to_execution_address": {
								"description": "Execution address to which the credentials will be changed.",
								"type": "string",
								"format": "hex",
								"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
								"pattern": "^0x[a-fA-F0-9]{40}$"
							}
						}
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"AttesterDuty": {
				"type": "object",
				"properties": {
					"pubkey": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{96}$",
						"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
						"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
					},
					"validator_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in validator registry"
							}
						]
					},
					"committee_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The committee index"
							}
						]
					},
					"committee_length": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Number of validators in committee"
							}
						]
					},
					"committees_at_slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Number of committees at the provided slot"
							}
						]
					},
					"validator_committee_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in committee"
							}
						]
					},
					"slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The slot at which the validator must attest."
							}
						]
					}
				}
			},
			"ProposerDuty": {
				"type": "object",
				"properties": {
					"pubkey": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{96}$",
						"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
						"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
					},
					"validator_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in validator registry."
							}
						]
					},
					"slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The slot at which the validator must propose block."
							}
						]
					}
				}
			},
			"Altair.SyncDuty": {
				"type": "object",
				"properties": {
					"pubkey": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{96}$",
						"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
						"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
					},
					"validator_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in validator registry."
							}
						]
					},
					"validator_sync_committee_indices": {
						"type": "array",
						"description": "The indices of the validator in the sync committee.",
						"minItems": 1,
						"items": {
							"type": "string",
							"example": "1"
						}
					}
				}
			},
			"SignedAggregateAndProof": {
				"description": "The [`SignedAggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/validator.md#signedaggregateandproof) object",
				"properties": {
					"message": {
						"allOf": [
							{
								"type": "object",
								"description": "The [`AggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/validator.md#aggregateandproof) without selection_proof",
								"properties": {
									"aggregator_index": {
										"type": "string",
										"example": "1"
									},
									"aggregate": {
										"type": "object",
										"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
										"properties": {
											"aggregation_bits": {
												"description": "Attester aggregation bits.",
												"type": "string",
												"format": "hex",
												"example": "0x01",
												"pattern": "^0x[a-fA-F0-9]+$"
											},
											"signature": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "BLS aggregate signature."
													}
												]
											},
											"data": {
												"type": "object",
												"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
												"properties": {
													"slot": {
														"type": "string",
														"example": "1"
													},
													"index": {
														"type": "string",
														"example": "1"
													},
													"beacon_block_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "LMD GHOST vote."
															}
														]
													},
													"source": {
														"type": "object",
														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
														"properties": {
															"epoch": {
																"type": "string",
																"example": "1"
															},
															"root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													"target": {
														"type": "object",
														"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
														"properties": {
															"epoch": {
																"type": "string",
																"example": "1"
															},
															"root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													}
												}
											}
										}
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"selection_proof": {
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{192}$",
										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Attestation": {
				"type": "object",
				"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
				"properties": {
					"aggregation_bits": {
						"description": "Attester aggregation bits.",
						"type": "string",
						"format": "hex",
						"example": "0x01",
						"pattern": "^0x[a-fA-F0-9]+$"
					},
					"signature": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							},
							{
								"description": "BLS aggregate signature."
							}
						]
					},
					"data": {
						"type": "object",
						"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
						"properties": {
							"slot": {
								"type": "string",
								"example": "1"
							},
							"index": {
								"type": "string",
								"example": "1"
							},
							"beacon_block_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "LMD GHOST vote."
									}
								]
							},
							"source": {
								"type": "object",
								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
								"properties": {
									"epoch": {
										"type": "string",
										"example": "1"
									},
									"root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									}
								}
							},
							"target": {
								"type": "object",
								"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
								"properties": {
									"epoch": {
										"type": "string",
										"example": "1"
									},
									"root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									}
								}
							}
						}
					}
				}
			},
			"AttestationData": {
				"type": "object",
				"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
				"properties": {
					"slot": {
						"type": "string",
						"example": "1"
					},
					"index": {
						"type": "string",
						"example": "1"
					},
					"beacon_block_root": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							},
							{
								"description": "LMD GHOST vote."
							}
						]
					},
					"source": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"target": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					}
				}
			},
			"BeaconCommitteeSelection": {
				"type": "object",
				"properties": {
					"validator_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of the validator"
							}
						]
					},
					"slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The slot at which a validator is assigned to attest"
							}
						]
					},
					"selection_proof": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							},
							{
								"description": "The `slot_signature` calculated by the validator for the upcoming attestation slot"
							}
						]
					}
				}
			},
			"SyncCommitteeSelection": {
				"type": "object",
				"properties": {
					"validator_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of the validator"
							}
						]
					},
					"slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The slot at which validator is assigned to produce a sync committee contribution"
							}
						]
					},
					"subcommittee_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "SubcommitteeIndex to which the validator is assigned"
							}
						]
					},
					"selection_proof": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							},
							{
								"description": "The `slot_signature` calculated by the validator for the upcoming sync committee slot"
							}
						]
					}
				}
			},
			"Fork": {
				"type": "object",
				"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
				"properties": {
					"previous_version": {
						"type": "string",
						"format": "hex",
						"description": "a fork version number",
						"example": "0x00000000",
						"pattern": "^0x[a-fA-F0-9]{8}$"
					},
					"current_version": {
						"type": "string",
						"format": "hex",
						"description": "a fork version number",
						"example": "0x00000000",
						"pattern": "^0x[a-fA-F0-9]{8}$"
					},
					"epoch": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Checkpoint": {
				"type": "object",
				"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
				"properties": {
					"epoch": {
						"type": "string",
						"example": "1"
					},
					"root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					}
				}
			},
			"Uint64": {
				"type": "string",
				"example": "1"
			},
			"NetworkIdentity": {
				"type": "object",
				"properties": {
					"peer_id": {
						"type": "string",
						"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
						"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
					},
					"enr": {
						"type": "string",
						"description": "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)",
						"example": "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
					},
					"p2p_addresses": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
									"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
								},
								{
									"description": "Node's addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
								}
							]
						}
					},
					"discovery_addresses": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
									"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
								},
								{
									"description": "Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"
								},
								{
									"example": "/ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
								}
							]
						}
					},
					"metadata": {
						"type": "object",
						"description": "Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/p2p-interface.md#metadata)",
						"required": ["seq_number", "attnets"],
						"properties": {
							"seq_number": {
								"allOf": [
									{
										"description": "Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."
									},
									{
										"type": "string",
										"example": "1"
									}
								]
							},
							"attnets": {
								"allOf": [
									{
										"description": "Bitvector representing the node's persistent attestation subnet subscriptions."
									},
									{
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{2,}$"
									},
									{
										"example": "0x0000000000000000"
									}
								]
							},
							"syncnets": {
								"allOf": [
									{
										"description": "Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."
									},
									{
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{2,}$"
									},
									{
										"example": "0x0f"
									}
								]
							}
						}
					}
				}
			},
			"Peer": {
				"type": "object",
				"properties": {
					"peer_id": {
						"type": "string",
						"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
						"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
					},
					"enr": {
						"allOf": [
							{
								"type": "string",
								"description": "Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)",
								"example": "enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"
							},
							{
								"nullable": true
							}
						]
					},
					"last_seen_p2p_address": {
						"allOf": [
							{
								"type": "string",
								"description": "[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)",
								"example": "/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
							},
							{
								"description": "Multiaddrs used in last peer connection."
							}
						]
					},
					"state": {
						"type": "string",
						"enum": ["disconnected", "connecting", "connected", "disconnecting"]
					},
					"direction": {
						"type": "string",
						"enum": ["inbound", "outbound"]
					}
				}
			},
			"PeerId": {
				"type": "string",
				"description": "Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)",
				"example": "QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"
			},
			"PeerConnectionState": {
				"type": "string",
				"enum": ["disconnected", "connecting", "connected", "disconnecting"]
			},
			"PeerConnectionDirection": {
				"type": "string",
				"enum": ["inbound", "outbound"]
			},
			"GenesisTime": {
				"allOf": [
					{
						"type": "string",
						"example": "1"
					},
					{
						"example": "1590832934"
					},
					{
						"description": "The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began."
					}
				]
			},
			"Version": {
				"type": "string",
				"description": "A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3).",
				"example": "Lighthouse/v0.1.5 (Linux x86_64)"
			},
			"ForkVersion": {
				"type": "string",
				"format": "hex",
				"description": "a fork version number",
				"example": "0x00000000",
				"pattern": "^0x[a-fA-F0-9]{8}$"
			},
			"DependentRoot": {
				"allOf": [
					{
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					{
						"description": "The block root that this response is dependent on."
					}
				]
			},
			"ExecutionOptimistic": {
				"allOf": [
					{
						"type": "boolean"
					},
					{
						"example": false
					},
					{
						"description": "True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."
					}
				]
			},
			"Finalized": {
				"allOf": [
					{
						"type": "boolean"
					},
					{
						"example": false
					},
					{
						"description": "True if the response references the finalized history of the chain, as determined by fork choice. If the field is not present, additional calls are necessary to compare the epoch of the requested information with the finalized checkpoint."
					}
				]
			},
			"Root": {
				"type": "string",
				"format": "hex",
				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
				"pattern": "^0x[a-fA-F0-9]{64}$"
			},
			"Hex": {
				"type": "string",
				"format": "hex",
				"pattern": "^0x[a-fA-F0-9]{2,}$"
			},
			"Graffiti": {
				"type": "string",
				"format": "hex",
				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
				"pattern": "^0x[a-fA-F0-9]{64}$"
			},
			"Signature": {
				"type": "string",
				"format": "hex",
				"pattern": "^0x[a-fA-F0-9]{192}$",
				"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
			},
			"ErrorMessage": {
				"type": "object",
				"properties": {
					"code": {
						"description": "Either specific error code in case of invalid request or http status code",
						"type": "number",
						"example": 404
					},
					"message": {
						"description": "Message describing error",
						"type": "string"
					},
					"stacktraces": {
						"description": "Optional stacktraces, sent when node is in debug mode",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				}
			},
			"IndexedErrorMessage": {
				"type": "object",
				"properties": {
					"code": {
						"description": "Either specific error code in case of invalid request or http status code",
						"type": "number",
						"example": 400
					},
					"message": {
						"description": "Message describing error",
						"type": "string",
						"example": "some failures"
					},
					"failures": {
						"description": "List of individual items that have failed",
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"index": {
									"description": "Index of item in the request list that caused the error",
									"type": "number",
									"example": 3
								},
								"message": {
									"description": "Message describing error",
									"type": "string",
									"example": "invalid signature"
								}
							}
						}
					}
				}
			},
			"Altair.BeaconBlock": {
				"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
				"allOf": [
					{
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot to which this block corresponds."
									}
								]
							},
							"proposer_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"parent_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The signing merkle root of the parent `BeaconBlock`."
									}
								]
							},
							"state_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
									}
								]
							}
						}
					},
					{
						"type": "object",
						"properties": {
							"body": {
								"type": "object",
								"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
								"properties": {
									"randao_reveal": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											},
											{
												"description": "The RanDAO reveal value provided by the validator."
											}
										]
									},
									"eth1_data": {
										"type": "object",
										"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
										"properties": {
											"deposit_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "Root of the deposit tree."
													}
												]
											},
											"deposit_count": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Total number of deposits."
													}
												]
											},
											"block_hash": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "Ethereum 1.x block hash."
													}
												]
											}
										}
									},
									"graffiti": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"proposer_slashings": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
											"properties": {
												"signed_header_1": {
													"type": "object",
													"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												},
												"signed_header_2": {
													"type": "object",
													"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
													"properties": {
														"message": {
															"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
															"allOf": [
																{
																	"type": "object",
																	"properties": {
																		"slot": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "The slot to which this block corresponds."
																				}
																			]
																		},
																		"proposer_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of validator in validator registry."
																				}
																			]
																		},
																		"parent_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The signing merkle root of the parent `BeaconBlock`."
																				}
																			]
																		},
																		"state_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																				}
																			]
																		}
																	}
																},
																{
																	"type": "object",
																	"properties": {
																		"body_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																				}
																			]
																		}
																	}
																}
															]
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											}
										}
									},
									"attester_slashings": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
											"properties": {
												"attestation_1": {
													"type": "object",
													"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
													"properties": {
														"attesting_indices": {
															"type": "array",
															"maxItems": 2048,
															"description": "Attesting validator indices",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												},
												"attestation_2": {
													"type": "object",
													"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
													"properties": {
														"attesting_indices": {
															"type": "array",
															"maxItems": 2048,
															"description": "Attesting validator indices",
															"items": {
																"type": "string",
																"example": "1"
															}
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									},
									"attestations": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
											"properties": {
												"aggregation_bits": {
													"description": "Attester aggregation bits.",
													"type": "string",
													"format": "hex",
													"example": "0x01",
													"pattern": "^0x[a-fA-F0-9]+$"
												},
												"signature": {
													"allOf": [
														{
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														},
														{
															"description": "BLS aggregate signature."
														}
													]
												},
												"data": {
													"type": "object",
													"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
													"properties": {
														"slot": {
															"type": "string",
															"example": "1"
														},
														"index": {
															"type": "string",
															"example": "1"
														},
														"beacon_block_root": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "LMD GHOST vote."
																}
															]
														},
														"source": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														},
														"target": {
															"type": "object",
															"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
															"properties": {
																"epoch": {
																	"type": "string",
																	"example": "1"
																},
																"root": {
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																}
															}
														}
													}
												}
											}
										}
									},
									"deposits": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
											"properties": {
												"proof": {
													"type": "array",
													"description": "Branch in the deposit tree.",
													"items": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														]
													},
													"minItems": 32,
													"maxItems": 32
												},
												"data": {
													"type": "object",
													"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
													"properties": {
														"pubkey": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{96}$",
															"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
															"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
														},
														"withdrawal_credentials": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																	"pattern": "^0x[a-fA-F0-9]{64}$"
																},
																{
																	"description": "The withdrawal credentials."
																}
															]
														},
														"amount": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Amount in Gwei."
																}
															]
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "Container self-signature."
																}
															]
														}
													}
												}
											}
										}
									},
									"voluntary_exits": {
										"type": "array",
										"items": {
											"type": "object",
											"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
											"properties": {
												"message": {
													"type": "object",
													"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
													"properties": {
														"epoch": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Minimum epoch for processing exit."
																}
															]
														},
														"validator_index": {
															"allOf": [
																{
																	"type": "string",
																	"example": "1"
																},
																{
																	"description": "Index of the exiting validator."
																}
															]
														}
													}
												},
												"signature": {
													"type": "string",
													"format": "hex",
													"pattern": "^0x[a-fA-F0-9]{192}$",
													"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
												}
											}
										}
									},
									"sync_aggregate": {
										"type": "object",
										"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
										"properties": {
											"sync_committee_bits": {
												"description": "Aggregation bits of sync",
												"type": "string",
												"format": "hex",
												"example": "0x01",
												"pattern": "^0x[a-fA-F0-9]+$"
											},
											"sync_committee_signature": {
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											}
										}
									}
								}
							}
						}
					}
				]
			},
			"Altair.SignedBeaconBlock": {
				"type": "object",
				"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.",
				"properties": {
					"message": {
						"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Altair spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body": {
										"type": "object",
										"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.",
										"properties": {
											"randao_reveal": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The RanDAO reveal value provided by the validator."
													}
												]
											},
											"eth1_data": {
												"type": "object",
												"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
												"properties": {
													"deposit_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Root of the deposit tree."
															}
														]
													},
													"deposit_count": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Total number of deposits."
															}
														]
													},
													"block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Ethereum 1.x block hash."
															}
														]
													}
												}
											},
											"graffiti": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"proposer_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
													"properties": {
														"signed_header_1": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signed_header_2": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											},
											"attester_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
													"properties": {
														"attestation_1": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														},
														"attestation_2": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											},
											"attestations": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
													"properties": {
														"aggregation_bits": {
															"description": "Attester aggregation bits.",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "BLS aggregate signature."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"deposits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
													"properties": {
														"proof": {
															"type": "array",
															"description": "Branch in the deposit tree.",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																]
															},
															"minItems": 32,
															"maxItems": 32
														},
														"data": {
															"type": "object",
															"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
															"properties": {
																"pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"withdrawal_credentials": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The withdrawal credentials."
																		}
																	]
																},
																"amount": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Amount in Gwei."
																		}
																	]
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "Container self-signature."
																		}
																	]
																}
															}
														}
													}
												}
											},
											"voluntary_exits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
															"properties": {
																"epoch": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Minimum epoch for processing exit."
																		}
																	]
																},
																"validator_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of the exiting validator."
																		}
																	]
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											},
											"sync_aggregate": {
												"type": "object",
												"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
												"properties": {
													"sync_committee_bits": {
														"description": "Aggregation bits of sync",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"sync_committee_signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Altair.LightClientBootstrap": {
				"type": "object",
				"properties": {
					"header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							}
						}
					},
					"current_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"current_sync_committee_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(CURRENT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 5,
						"maxItems": 5
					}
				}
			},
			"Altair.LightClientUpdate": {
				"type": "object",
				"properties": {
					"attested_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							}
						}
					},
					"next_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"next_sync_committee_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(NEXT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 5,
						"maxItems": 5
					},
					"finalized_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							}
						}
					},
					"finality_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 6,
						"maxItems": 6
					},
					"sync_aggregate": {
						"type": "object",
						"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
						"properties": {
							"sync_committee_bits": {
								"description": "Aggregation bits of sync",
								"type": "string",
								"format": "hex",
								"example": "0x01",
								"pattern": "^0x[a-fA-F0-9]+$"
							},
							"sync_committee_signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signature_slot": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Altair.LightClientFinalityUpdate": {
				"type": "object",
				"properties": {
					"attested_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							}
						}
					},
					"finalized_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							}
						}
					},
					"finality_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 6,
						"maxItems": 6
					},
					"sync_aggregate": {
						"type": "object",
						"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
						"properties": {
							"sync_committee_bits": {
								"description": "Aggregation bits of sync",
								"type": "string",
								"format": "hex",
								"example": "0x01",
								"pattern": "^0x[a-fA-F0-9]+$"
							},
							"sync_committee_signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signature_slot": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Altair.LightClientOptimisticUpdate": {
				"type": "object",
				"properties": {
					"attested_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							}
						}
					},
					"sync_aggregate": {
						"type": "object",
						"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
						"properties": {
							"sync_committee_bits": {
								"description": "Aggregation bits of sync",
								"type": "string",
								"format": "hex",
								"example": "0x01",
								"pattern": "^0x[a-fA-F0-9]+$"
							},
							"sync_committee_signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signature_slot": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Altair.BeaconState": {
				"type": "object",
				"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#beaconstate) object from the CL Altair spec.",
				"properties": {
					"genesis_time": {
						"type": "string",
						"example": "1"
					},
					"genesis_validators_root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"slot": {
						"type": "string",
						"example": "1"
					},
					"fork": {
						"type": "object",
						"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
						"properties": {
							"previous_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"current_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"epoch": {
								"type": "string",
								"example": "1"
							}
						}
					},
					"latest_block_header": {
						"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
											}
										]
									}
								}
							}
						]
					},
					"block_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"state_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"historical_roots": {
						"type": "array",
						"description": "Variable length list, maximum 16777216 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"eth1_data": {
						"type": "object",
						"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
						"properties": {
							"deposit_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Root of the deposit tree."
									}
								]
							},
							"deposit_count": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Total number of deposits."
									}
								]
							},
							"block_hash": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Ethereum 1.x block hash."
									}
								]
							}
						}
					},
					"eth1_data_votes": {
						"type": "array",
						"description": "Fixed length of 1024 items",
						"items": {
							"type": "object",
							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
							"properties": {
								"deposit_root": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of the deposit tree."
										}
									]
								},
								"deposit_count": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Total number of deposits."
										}
									]
								},
								"block_hash": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Ethereum 1.x block hash."
										}
									]
								}
							}
						}
					},
					"eth1_deposit_index": {
						"type": "string",
						"example": "1"
					},
					"validators": {
						"type": "array",
						"description": "Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "object",
							"properties": {
								"pubkey": {
									"type": "string",
									"format": "hex",
									"pattern": "^0x[a-fA-F0-9]{96}$",
									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
								},
								"withdrawal_credentials": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of withdrawal credentials"
										}
									]
								},
								"effective_balance": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Balance at stake in Gwei."
										}
									]
								},
								"slashed": {
									"type": "boolean",
									"example": false,
									"description": "Was validator slashed (not longer active)."
								},
								"activation_eligibility_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When criteria for activation were met."
										}
									]
								},
								"activation_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
										}
									]
								},
								"exit_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
										}
									]
								},
								"withdrawable_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
										}
									]
								}
							}
						}
					},
					"balances": {
						"type": "array",
						"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"randao_mixes": {
						"type": "array",
						"description": "Fixed length of 65536 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"slashings": {
						"type": "array",
						"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"previous_epoch_participation": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "Unsigned 8 bit integer, max value 255",
									"pattern": "^[1-2]?[0-9]{1,2}$",
									"example": "0"
								}
							]
						},
						"maxItems": 1099511627776
					},
					"current_epoch_participation": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "Unsigned 8 bit integer, max value 255",
									"pattern": "^[1-2]?[0-9]{1,2}$",
									"example": "0"
								}
							]
						},
						"maxItems": 1099511627776
					},
					"justification_bits": {
						"description": "Bit set for every recent justified epoch",
						"type": "string",
						"format": "hex",
						"example": "0x01",
						"pattern": "^0x[a-fA-F0-9]+$"
					},
					"previous_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"current_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"finalized_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"inactivity_scores": {
						"description": "Per-validator inactivity scores. New in Altair. Variable length list, maximum 1099511627776 items",
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								}
							]
						}
					},
					"current_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"next_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					}
				}
			},
			"Altair.SyncCommitteeSignature": {
				"type": "object",
				"properties": {
					"slot": {
						"type": "string",
						"example": "1"
					},
					"beacon_block_root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"validator_index": {
						"type": "string",
						"example": "1"
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Altair.SyncCommitteeSubscription": {
				"type": "object",
				"properties": {
					"validator_index": {
						"type": "string",
						"example": "1"
					},
					"sync_committee_indices": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								}
							]
						}
					},
					"until_epoch": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The final epoch (exclusive value) that the specified validator requires the subscription for."
							}
						]
					}
				}
			},
			"Altair.ContributionAndProof": {
				"type": "object",
				"properties": {
					"aggregator_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "Index of validator in validator registry."
							}
						]
					},
					"selection_proof": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					},
					"contribution": {
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot at which the validator is providing a sync committee contribution."
									}
								]
							},
							"beacon_block_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Block root for this contribution."
									}
								]
							},
							"subcommittee_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The index of the subcommittee that the contribution pertains to."
									}
								]
							},
							"aggregation_bits": {
								"allOf": [
									{
										"description": "A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."
									},
									{
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{2,}$"
									},
									{
										"example": "0x01"
									}
								]
							},
							"signature": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"pattern": "^0x[a-fA-F0-9]{192}$",
										"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
									},
									{
										"description": "Signature by the validator(s) over the block root of `slot`"
									}
								]
							}
						}
					}
				}
			},
			"Altair.SignedContributionAndProof": {
				"type": "object",
				"properties": {
					"message": {
						"type": "object",
						"properties": {
							"aggregator_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"selection_proof": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							},
							"contribution": {
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot at which the validator is providing a sync committee contribution."
											}
										]
									},
									"beacon_block_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "Block root for this contribution."
											}
										]
									},
									"subcommittee_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The index of the subcommittee that the contribution pertains to."
											}
										]
									},
									"aggregation_bits": {
										"allOf": [
											{
												"description": "A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."
											},
											{
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{2,}$"
											},
											{
												"example": "0x01"
											}
										]
									},
									"signature": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"pattern": "^0x[a-fA-F0-9]{192}$",
												"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
											},
											{
												"description": "Signature by the validator(s) over the block root of `slot`"
											}
										]
									}
								}
							}
						}
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Altair.SyncCommitteeContribution": {
				"type": "object",
				"properties": {
					"slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The slot at which the validator is providing a sync committee contribution."
							}
						]
					},
					"beacon_block_root": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							},
							{
								"description": "Block root for this contribution."
							}
						]
					},
					"subcommittee_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The index of the subcommittee that the contribution pertains to."
							}
						]
					},
					"aggregation_bits": {
						"allOf": [
							{
								"description": "A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."
							},
							{
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{2,}$"
							},
							{
								"example": "0x01"
							}
						]
					},
					"signature": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							},
							{
								"description": "Signature by the validator(s) over the block root of `slot`"
							}
						]
					}
				}
			},
			"Altair.SyncCommittee": {
				"type": "object",
				"properties": {
					"validators": {
						"allOf": [
							{
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										}
									]
								}
							},
							{
								"description": "all of the validator indices in the current sync committee"
							}
						]
					},
					"validator_aggregates": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "array",
									"items": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											}
										]
									}
								},
								{
									"description": "Subcommittee slices of the current sync committee"
								}
							]
						}
					}
				}
			},
			"ExecutionAddress": {
				"type": "string",
				"format": "hex",
				"description": "An address on the execution (Ethereum 1) network.",
				"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
				"pattern": "^0x[a-fA-F0-9]{40}$"
			},
			"Bellatrix.BeaconState": {
				"type": "object",
				"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconstate) object from the Eth2.0 Bellatrix spec.",
				"properties": {
					"genesis_time": {
						"type": "string",
						"example": "1"
					},
					"genesis_validators_root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"slot": {
						"type": "string",
						"example": "1"
					},
					"fork": {
						"type": "object",
						"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
						"properties": {
							"previous_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"current_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"epoch": {
								"type": "string",
								"example": "1"
							}
						}
					},
					"latest_block_header": {
						"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
											}
										]
									}
								}
							}
						]
					},
					"block_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"state_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"historical_roots": {
						"type": "array",
						"description": "Variable length list, maximum 16777216 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"eth1_data": {
						"type": "object",
						"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
						"properties": {
							"deposit_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Root of the deposit tree."
									}
								]
							},
							"deposit_count": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Total number of deposits."
									}
								]
							},
							"block_hash": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Ethereum 1.x block hash."
									}
								]
							}
						}
					},
					"eth1_data_votes": {
						"type": "array",
						"description": "Fixed length of 1024 items",
						"items": {
							"type": "object",
							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
							"properties": {
								"deposit_root": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of the deposit tree."
										}
									]
								},
								"deposit_count": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Total number of deposits."
										}
									]
								},
								"block_hash": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Ethereum 1.x block hash."
										}
									]
								}
							}
						},
						"maxItems": 1024
					},
					"eth1_deposit_index": {
						"type": "string",
						"example": "1"
					},
					"validators": {
						"type": "array",
						"description": "Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "object",
							"properties": {
								"pubkey": {
									"type": "string",
									"format": "hex",
									"pattern": "^0x[a-fA-F0-9]{96}$",
									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
								},
								"withdrawal_credentials": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of withdrawal credentials"
										}
									]
								},
								"effective_balance": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Balance at stake in Gwei."
										}
									]
								},
								"slashed": {
									"type": "boolean",
									"example": false,
									"description": "Was validator slashed (not longer active)."
								},
								"activation_eligibility_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When criteria for activation were met."
										}
									]
								},
								"activation_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
										}
									]
								},
								"exit_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
										}
									]
								},
								"withdrawable_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
										}
									]
								}
							}
						}
					},
					"balances": {
						"type": "array",
						"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"randao_mixes": {
						"type": "array",
						"description": "Fixed length of 65536 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"slashings": {
						"type": "array",
						"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"previous_epoch_participation": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "Unsigned 8 bit integer, max value 255",
									"pattern": "^[1-2]?[0-9]{1,2}$",
									"example": "0"
								}
							]
						},
						"maxItems": 1099511627776
					},
					"current_epoch_participation": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "Unsigned 8 bit integer, max value 255",
									"pattern": "^[1-2]?[0-9]{1,2}$",
									"example": "0"
								}
							]
						},
						"maxItems": 1099511627776
					},
					"justification_bits": {
						"description": "Bit set for every recent justified epoch",
						"type": "string",
						"format": "hex",
						"example": "0x01",
						"pattern": "^0x[a-fA-F0-9]+$"
					},
					"previous_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"current_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"finalized_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"inactivity_scores": {
						"description": "Per-validator inactivity scores. Introduced in Altair. Variable length list, maximum 1099511627776 items",
						"type": "array",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"current_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"next_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"latest_execution_payload_header": {
						"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
						"allOf": [
							{
								"type": "object",
								"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
								"properties": {
									"parent_hash": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"fee_recipient": {
										"type": "string",
										"format": "hex",
										"description": "An address on the execution (Ethereum 1) network.",
										"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
										"pattern": "^0x[a-fA-F0-9]{40}$"
									},
									"state_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"receipts_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"logs_bloom": {
										"type": "string",
										"format": "hex",
										"example": "0x
										"pattern": "^0x[a-fA-F0-9]{512}$"
									},
									"prev_randao": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"block_number": {
										"type": "string",
										"example": "1"
									},
									"gas_limit": {
										"type": "string",
										"example": "1"
									},
									"gas_used": {
										"type": "string",
										"example": "1"
									},
									"timestamp": {
										"type": "string",
										"example": "1"
									},
									"extra_data": {
										"type": "string",
										"format": "hex",
										"description": "Extra data on the execution (Ethereum 1) network.",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{0,64}$"
									},
									"base_fee_per_gas": {
										"type": "string",
										"example": "1"
									},
									"block_hash": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"transactions_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									}
								}
							}
						]
					}
				}
			},
			"Bellatrix.BeaconBlock": {
				"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.",
				"allOf": [
					{
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot to which this block corresponds."
									}
								]
							},
							"proposer_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"parent_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The signing merkle root of the parent `BeaconBlock`."
									}
								]
							},
							"state_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
									}
								]
							}
						}
					},
					{
						"type": "object",
						"properties": {
							"body": {
								"allOf": [
									{
										"type": "object",
										"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
										"properties": {
											"randao_reveal": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The RanDAO reveal value provided by the validator."
													}
												]
											},
											"eth1_data": {
												"type": "object",
												"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
												"properties": {
													"deposit_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Root of the deposit tree."
															}
														]
													},
													"deposit_count": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Total number of deposits."
															}
														]
													},
													"block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Ethereum 1.x block hash."
															}
														]
													}
												}
											},
											"graffiti": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"proposer_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
													"properties": {
														"signed_header_1": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signed_header_2": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											},
											"attester_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
													"properties": {
														"attestation_1": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														},
														"attestation_2": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											},
											"attestations": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
													"properties": {
														"aggregation_bits": {
															"description": "Attester aggregation bits.",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "BLS aggregate signature."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"deposits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
													"properties": {
														"proof": {
															"type": "array",
															"description": "Branch in the deposit tree.",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																]
															},
															"minItems": 32,
															"maxItems": 32
														},
														"data": {
															"type": "object",
															"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
															"properties": {
																"pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"withdrawal_credentials": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The withdrawal credentials."
																		}
																	]
																},
																"amount": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Amount in Gwei."
																		}
																	]
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "Container self-signature."
																		}
																	]
																}
															}
														}
													}
												}
											},
											"voluntary_exits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
															"properties": {
																"epoch": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Minimum epoch for processing exit."
																		}
																	]
																},
																"validator_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of the exiting validator."
																		}
																	]
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											},
											"sync_aggregate": {
												"type": "object",
												"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
												"properties": {
													"sync_committee_bits": {
														"description": "Aggregation bits of sync",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"sync_committee_signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"execution_payload": {
												"allOf": [
													{
														"type": "object",
														"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
														"properties": {
															"parent_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"fee_recipient": {
																"type": "string",
																"format": "hex",
																"description": "An address on the execution (Ethereum 1) network.",
																"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																"pattern": "^0x[a-fA-F0-9]{40}$"
															},
															"state_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"receipts_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"logs_bloom": {
																"type": "string",
																"format": "hex",
																"example": "0x
																"pattern": "^0x[a-fA-F0-9]{512}$"
															},
															"prev_randao": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"block_number": {
																"type": "string",
																"example": "1"
															},
															"gas_limit": {
																"type": "string",
																"example": "1"
															},
															"gas_used": {
																"type": "string",
																"example": "1"
															},
															"timestamp": {
																"type": "string",
																"example": "1"
															},
															"extra_data": {
																"type": "string",
																"format": "hex",
																"description": "Extra data on the execution (Ethereum 1) network.",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{0,64}$"
															},
															"base_fee_per_gas": {
																"type": "string",
																"example": "1"
															},
															"block_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"transactions": {
																"type": "array",
																"items": {
																	"type": "string",
																	"format": "hex",
																	"description": "A transaction on the execution (Ethereum 1) network.",
																	"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																	"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																},
																"maxItems": 1048576
															}
														}
													}
												]
											}
										}
									}
								]
							}
						}
					}
				]
			},
			"Bellatrix.SignedBeaconBlock": {
				"type": "object",
				"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec.",
				"properties": {
					"message": {
						"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body": {
										"allOf": [
											{
												"type": "object",
												"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
												"properties": {
													"randao_reveal": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "The RanDAO reveal value provided by the validator."
															}
														]
													},
													"eth1_data": {
														"type": "object",
														"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
														"properties": {
															"deposit_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Root of the deposit tree."
																	}
																]
															},
															"deposit_count": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Total number of deposits."
																	}
																]
															},
															"block_hash": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Ethereum 1.x block hash."
																	}
																]
															}
														}
													},
													"graffiti": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"proposer_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
															"properties": {
																"signed_header_1": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																},
																"signed_header_2": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																}
															}
														}
													},
													"attester_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
															"properties": {
																"attestation_1": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																},
																"attestation_2": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"attestations": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
															"properties": {
																"aggregation_bits": {
																	"description": "Attester aggregation bits.",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "BLS aggregate signature."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"deposits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
															"properties": {
																"proof": {
																	"type": "array",
																	"description": "Branch in the deposit tree.",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		]
																	},
																	"minItems": 32,
																	"maxItems": 32
																},
																"data": {
																	"type": "object",
																	"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																	"properties": {
																		"pubkey": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{96}$",
																			"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																			"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																		},
																		"withdrawal_credentials": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The withdrawal credentials."
																				}
																			]
																		},
																		"amount": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Amount in Gwei."
																				}
																			]
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "Container self-signature."
																				}
																			]
																		}
																	}
																}
															}
														}
													},
													"voluntary_exits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
															"properties": {
																"message": {
																	"type": "object",
																	"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																	"properties": {
																		"epoch": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Minimum epoch for processing exit."
																				}
																			]
																		},
																		"validator_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of the exiting validator."
																				}
																			]
																		}
																	}
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													},
													"sync_aggregate": {
														"type": "object",
														"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
														"properties": {
															"sync_committee_bits": {
																"description": "Aggregation bits of sync",
																"type": "string",
																"format": "hex",
																"example": "0x01",
																"pattern": "^0x[a-fA-F0-9]+$"
															},
															"sync_committee_signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"execution_payload": {
														"allOf": [
															{
																"type": "object",
																"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																"properties": {
																	"parent_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"fee_recipient": {
																		"type": "string",
																		"format": "hex",
																		"description": "An address on the execution (Ethereum 1) network.",
																		"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																		"pattern": "^0x[a-fA-F0-9]{40}$"
																	},
																	"state_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"receipts_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"logs_bloom": {
																		"type": "string",
																		"format": "hex",
																		"example": "0x
																		"pattern": "^0x[a-fA-F0-9]{512}$"
																	},
																	"prev_randao": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"block_number": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_limit": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_used": {
																		"type": "string",
																		"example": "1"
																	},
																	"timestamp": {
																		"type": "string",
																		"example": "1"
																	},
																	"extra_data": {
																		"type": "string",
																		"format": "hex",
																		"description": "Extra data on the execution (Ethereum 1) network.",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{0,64}$"
																	},
																	"base_fee_per_gas": {
																		"type": "string",
																		"example": "1"
																	},
																	"block_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															},
															{
																"type": "object",
																"properties": {
																	"transactions": {
																		"type": "array",
																		"items": {
																			"type": "string",
																			"format": "hex",
																			"description": "A transaction on the execution (Ethereum 1) network.",
																			"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																			"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																		},
																		"maxItems": 1048576
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Bellatrix.BlindedBeaconBlock": {
				"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
				"allOf": [
					{
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot to which this block corresponds."
									}
								]
							},
							"proposer_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"parent_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The signing merkle root of the parent `BeaconBlock`."
									}
								]
							},
							"state_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
									}
								]
							}
						}
					},
					{
						"type": "object",
						"properties": {
							"body": {
								"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
										"properties": {
											"randao_reveal": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The RanDAO reveal value provided by the validator."
													}
												]
											},
											"eth1_data": {
												"type": "object",
												"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
												"properties": {
													"deposit_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Root of the deposit tree."
															}
														]
													},
													"deposit_count": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Total number of deposits."
															}
														]
													},
													"block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Ethereum 1.x block hash."
															}
														]
													}
												}
											},
											"graffiti": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"proposer_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
													"properties": {
														"signed_header_1": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signed_header_2": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											},
											"attester_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
													"properties": {
														"attestation_1": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														},
														"attestation_2": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											},
											"attestations": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
													"properties": {
														"aggregation_bits": {
															"description": "Attester aggregation bits.",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "BLS aggregate signature."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"deposits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
													"properties": {
														"proof": {
															"type": "array",
															"description": "Branch in the deposit tree.",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																]
															},
															"minItems": 32,
															"maxItems": 32
														},
														"data": {
															"type": "object",
															"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
															"properties": {
																"pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"withdrawal_credentials": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The withdrawal credentials."
																		}
																	]
																},
																"amount": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Amount in Gwei."
																		}
																	]
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "Container self-signature."
																		}
																	]
																}
															}
														}
													}
												}
											},
											"voluntary_exits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
															"properties": {
																"epoch": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Minimum epoch for processing exit."
																		}
																	]
																},
																"validator_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of the exiting validator."
																		}
																	]
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											},
											"sync_aggregate": {
												"type": "object",
												"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
												"properties": {
													"sync_committee_bits": {
														"description": "Aggregation bits of sync",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"sync_committee_signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"execution_payload_header": {
												"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
												"allOf": [
													{
														"type": "object",
														"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
														"properties": {
															"parent_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"fee_recipient": {
																"type": "string",
																"format": "hex",
																"description": "An address on the execution (Ethereum 1) network.",
																"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																"pattern": "^0x[a-fA-F0-9]{40}$"
															},
															"state_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"receipts_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"logs_bloom": {
																"type": "string",
																"format": "hex",
																"example": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
																"pattern": "^0x[a-fA-F0-9]{512}$"
															},
															"prev_randao": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"block_number": {
																"type": "string",
																"example": "1"
															},
															"gas_limit": {
																"type": "string",
																"example": "1"
															},
															"gas_used": {
																"type": "string",
																"example": "1"
															},
															"timestamp": {
																"type": "string",
																"example": "1"
															},
															"extra_data": {
																"type": "string",
																"format": "hex",
																"description": "Extra data on the execution (Ethereum 1) network.",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{0,64}$"
															},
															"base_fee_per_gas": {
																"type": "string",
																"example": "1"
															},
															"block_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"transactions_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													}
												]
											}
										}
									}
								]
							}
						}
					}
				]
			},
			"Bellatrix.SignedBlindedBeaconBlock": {
				"type": "object",
				"description": "A variant of the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
				"properties": {
					"message": {
						"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body": {
										"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.",
										"allOf": [
											{
												"type": "object",
												"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.",
												"properties": {
													"randao_reveal": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "The RanDAO reveal value provided by the validator."
															}
														]
													},
													"eth1_data": {
														"type": "object",
														"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
														"properties": {
															"deposit_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Root of the deposit tree."
																	}
																]
															},
															"deposit_count": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Total number of deposits."
																	}
																]
															},
															"block_hash": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Ethereum 1.x block hash."
																	}
																]
															}
														}
													},
													"graffiti": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"proposer_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
															"properties": {
																"signed_header_1": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																},
																"signed_header_2": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																}
															}
														}
													},
													"attester_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
															"properties": {
																"attestation_1": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																},
																"attestation_2": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"attestations": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
															"properties": {
																"aggregation_bits": {
																	"description": "Attester aggregation bits.",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "BLS aggregate signature."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"deposits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
															"properties": {
																"proof": {
																	"type": "array",
																	"description": "Branch in the deposit tree.",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		]
																	},
																	"minItems": 32,
																	"maxItems": 32
																},
																"data": {
																	"type": "object",
																	"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																	"properties": {
																		"pubkey": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{96}$",
																			"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																			"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																		},
																		"withdrawal_credentials": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The withdrawal credentials."
																				}
																			]
																		},
																		"amount": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Amount in Gwei."
																				}
																			]
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "Container self-signature."
																				}
																			]
																		}
																	}
																}
															}
														}
													},
													"voluntary_exits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
															"properties": {
																"message": {
																	"type": "object",
																	"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																	"properties": {
																		"epoch": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Minimum epoch for processing exit."
																				}
																			]
																		},
																		"validator_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of the exiting validator."
																				}
																			]
																		}
																	}
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													},
													"sync_aggregate": {
														"type": "object",
														"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
														"properties": {
															"sync_committee_bits": {
																"description": "Aggregation bits of sync",
																"type": "string",
																"format": "hex",
																"example": "0x01",
																"pattern": "^0x[a-fA-F0-9]+$"
															},
															"sync_committee_signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"execution_payload_header": {
														"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.",
														"allOf": [
															{
																"type": "object",
																"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.",
																"properties": {
																	"parent_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"fee_recipient": {
																		"type": "string",
																		"format": "hex",
																		"description": "An address on the execution (Ethereum 1) network.",
																		"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																		"pattern": "^0x[a-fA-F0-9]{40}$"
																	},
																	"state_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"receipts_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"logs_bloom": {
																		"type": "string",
																		"format": "hex",
																		"example": "0x
																		"pattern": "^0x[a-fA-F0-9]{512}$"
																	},
																	"prev_randao": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"block_number": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_limit": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_used": {
																		"type": "string",
																		"example": "1"
																	},
																	"timestamp": {
																		"type": "string",
																		"example": "1"
																	},
																	"extra_data": {
																		"type": "string",
																		"format": "hex",
																		"description": "Extra data on the execution (Ethereum 1) network.",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{0,64}$"
																	},
																	"base_fee_per_gas": {
																		"type": "string",
																		"example": "1"
																	},
																	"block_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															},
															{
																"type": "object",
																"properties": {
																	"transactions_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"ConsensusVersion": {
				"enum": ["phase0", "altair", "bellatrix", "capella"],
				"example": "phase0"
			},
			"SignedValidatorRegistration": {
				"type": "object",
				"description": "The `SignedValidatorRegistration` object from the Builder API specification.",
				"properties": {
					"message": {
						"type": "object",
						"description": "The `ValidatorRegistration` object from the Builder API specification.",
						"properties": {
							"fee_recipient": {
								"description": "Address to receive fees from the block.",
								"type": "string",
								"format": "hex",
								"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
								"pattern": "^0x[a-fA-F0-9]{40}$"
							},
							"gas_limit": {
								"description": "Preferred gas limit of validator.",
								"type": "string",
								"example": "1"
							},
							"timestamp": {
								"description": "Unix timestamp of registration.",
								"type": "string",
								"example": "1"
							},
							"pubkey": {
								"description": "BLS public key of validator.",
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Capella.BeaconState": {
				"type": "object",
				"description": "The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconstate) object from the Eth2.0 Capella spec.",
				"properties": {
					"genesis_time": {
						"type": "string",
						"example": "1"
					},
					"genesis_validators_root": {
						"type": "string",
						"format": "hex",
						"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
						"pattern": "^0x[a-fA-F0-9]{64}$"
					},
					"slot": {
						"type": "string",
						"example": "1"
					},
					"fork": {
						"type": "object",
						"description": "The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#fork) object from the CL spec.",
						"properties": {
							"previous_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"current_version": {
								"type": "string",
								"format": "hex",
								"description": "a fork version number",
								"example": "0x00000000",
								"pattern": "^0x[a-fA-F0-9]{8}$"
							},
							"epoch": {
								"type": "string",
								"example": "1"
							}
						}
					},
					"latest_block_header": {
						"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
											}
										]
									}
								}
							}
						]
					},
					"block_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"state_roots": {
						"type": "array",
						"description": "Fixed length of 8192 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"historical_roots": {
						"type": "array",
						"description": "Variable length list, maximum 16777216 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"eth1_data": {
						"type": "object",
						"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
						"properties": {
							"deposit_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Root of the deposit tree."
									}
								]
							},
							"deposit_count": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Total number of deposits."
									}
								]
							},
							"block_hash": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "Ethereum 1.x block hash."
									}
								]
							}
						}
					},
					"eth1_data_votes": {
						"type": "array",
						"description": "Fixed length of 1024 items",
						"items": {
							"type": "object",
							"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
							"properties": {
								"deposit_root": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of the deposit tree."
										}
									]
								},
								"deposit_count": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Total number of deposits."
										}
									]
								},
								"block_hash": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Ethereum 1.x block hash."
										}
									]
								}
							}
						},
						"maxItems": 1024
					},
					"eth1_deposit_index": {
						"type": "string",
						"example": "1"
					},
					"validators": {
						"type": "array",
						"description": "Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "object",
							"properties": {
								"pubkey": {
									"type": "string",
									"format": "hex",
									"pattern": "^0x[a-fA-F0-9]{96}$",
									"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
									"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
								},
								"withdrawal_credentials": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
											"pattern": "^0x[a-fA-F0-9]{64}$"
										},
										{
											"description": "Root of withdrawal credentials"
										}
									]
								},
								"effective_balance": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Balance at stake in Gwei."
										}
									]
								},
								"slashed": {
									"type": "boolean",
									"example": false,
									"description": "Was validator slashed (not longer active)."
								},
								"activation_eligibility_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When criteria for activation were met."
										}
									]
								},
								"activation_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"
										}
									]
								},
								"exit_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."
										}
									]
								},
								"withdrawable_epoch": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"description": "When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"
										}
									]
								}
							}
						}
					},
					"balances": {
						"type": "array",
						"description": "Validator balances in gwei. Variable length list, maximum 1099511627776 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"randao_mixes": {
						"type": "array",
						"description": "Fixed length of 65536 items",
						"items": {
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						}
					},
					"slashings": {
						"type": "array",
						"description": "Per-epoch sums of slashed effective balances. Fixed length of 8192 items",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"previous_epoch_participation": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "Unsigned 8 bit integer, max value 255",
									"pattern": "^[1-2]?[0-9]{1,2}$",
									"example": "0"
								}
							]
						},
						"maxItems": 1099511627776
					},
					"current_epoch_participation": {
						"type": "array",
						"items": {
							"allOf": [
								{
									"type": "string",
									"description": "Unsigned 8 bit integer, max value 255",
									"pattern": "^[1-2]?[0-9]{1,2}$",
									"example": "0"
								}
							]
						},
						"maxItems": 1099511627776
					},
					"justification_bits": {
						"description": "Bit set for every recent justified epoch",
						"type": "string",
						"format": "hex",
						"example": "0x01",
						"pattern": "^0x[a-fA-F0-9]+$"
					},
					"previous_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"current_justified_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"finalized_checkpoint": {
						"type": "object",
						"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
						"properties": {
							"epoch": {
								"type": "string",
								"example": "1"
							},
							"root": {
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							}
						}
					},
					"inactivity_scores": {
						"description": "Per-validator inactivity scores. Introduced in Altair. Variable length list, maximum 1099511627776 items",
						"type": "array",
						"items": {
							"type": "string",
							"example": "1"
						}
					},
					"current_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"next_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"latest_execution_payload_header": {
						"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
						"allOf": [
							{
								"type": "object",
								"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
								"properties": {
									"parent_hash": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"fee_recipient": {
										"type": "string",
										"format": "hex",
										"description": "An address on the execution (Ethereum 1) network.",
										"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
										"pattern": "^0x[a-fA-F0-9]{40}$"
									},
									"state_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"receipts_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"logs_bloom": {
										"type": "string",
										"format": "hex",
										"example": "0x
										"pattern": "^0x[a-fA-F0-9]{512}$"
									},
									"prev_randao": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"block_number": {
										"type": "string",
										"example": "1"
									},
									"gas_limit": {
										"type": "string",
										"example": "1"
									},
									"gas_used": {
										"type": "string",
										"example": "1"
									},
									"timestamp": {
										"type": "string",
										"example": "1"
									},
									"extra_data": {
										"type": "string",
										"format": "hex",
										"description": "Extra data on the execution (Ethereum 1) network.",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{0,64}$"
									},
									"base_fee_per_gas": {
										"type": "string",
										"example": "1"
									},
									"block_hash": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"transactions_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									"withdrawals_root": {
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									}
								}
							}
						]
					},
					"next_withdrawal_index": {
						"type": "string",
						"example": "1"
					},
					"next_withdrawal_validator_index": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Capella.BeaconBlock": {
				"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec.",
				"allOf": [
					{
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot to which this block corresponds."
									}
								]
							},
							"proposer_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"parent_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The signing merkle root of the parent `BeaconBlock`."
									}
								]
							},
							"state_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
									}
								]
							}
						}
					},
					{
						"type": "object",
						"properties": {
							"body": {
								"allOf": [
									{
										"type": "object",
										"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
										"properties": {
											"randao_reveal": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The RanDAO reveal value provided by the validator."
													}
												]
											},
											"eth1_data": {
												"type": "object",
												"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
												"properties": {
													"deposit_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Root of the deposit tree."
															}
														]
													},
													"deposit_count": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Total number of deposits."
															}
														]
													},
													"block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Ethereum 1.x block hash."
															}
														]
													}
												}
											},
											"graffiti": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"proposer_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
													"properties": {
														"signed_header_1": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signed_header_2": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											},
											"attester_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
													"properties": {
														"attestation_1": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														},
														"attestation_2": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											},
											"attestations": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
													"properties": {
														"aggregation_bits": {
															"description": "Attester aggregation bits.",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "BLS aggregate signature."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"deposits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
													"properties": {
														"proof": {
															"type": "array",
															"description": "Branch in the deposit tree.",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																]
															},
															"minItems": 32,
															"maxItems": 32
														},
														"data": {
															"type": "object",
															"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
															"properties": {
																"pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"withdrawal_credentials": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The withdrawal credentials."
																		}
																	]
																},
																"amount": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Amount in Gwei."
																		}
																	]
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "Container self-signature."
																		}
																	]
																}
															}
														}
													}
												}
											},
											"voluntary_exits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
															"properties": {
																"epoch": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Minimum epoch for processing exit."
																		}
																	]
																},
																"validator_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of the exiting validator."
																		}
																	]
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											},
											"sync_aggregate": {
												"type": "object",
												"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
												"properties": {
													"sync_committee_bits": {
														"description": "Aggregation bits of sync",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"sync_committee_signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"execution_payload": {
												"allOf": [
													{
														"type": "object",
														"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
														"properties": {
															"parent_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"fee_recipient": {
																"type": "string",
																"format": "hex",
																"description": "An address on the execution (Ethereum 1) network.",
																"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																"pattern": "^0x[a-fA-F0-9]{40}$"
															},
															"state_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"receipts_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"logs_bloom": {
																"type": "string",
																"format": "hex",
																"example": "0x
																"pattern": "^0x[a-fA-F0-9]{512}$"
															},
															"prev_randao": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"block_number": {
																"type": "string",
																"example": "1"
															},
															"gas_limit": {
																"type": "string",
																"example": "1"
															},
															"gas_used": {
																"type": "string",
																"example": "1"
															},
															"timestamp": {
																"type": "string",
																"example": "1"
															},
															"extra_data": {
																"type": "string",
																"format": "hex",
																"description": "Extra data on the execution (Ethereum 1) network.",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{0,64}$"
															},
															"base_fee_per_gas": {
																"type": "string",
																"example": "1"
															},
															"block_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"transactions": {
																"type": "array",
																"items": {
																	"type": "string",
																	"format": "hex",
																	"description": "A transaction on the execution (Ethereum 1) network.",
																	"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																	"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																},
																"maxItems": 1048576
															},
															"withdrawals": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"index": {
																			"description": "The index of the withdrawal.",
																			"type": "string",
																			"example": "1"
																		},
																		"validator_index": {
																			"description": "The index of the withdrawing validator.",
																			"type": "string",
																			"example": "1"
																		},
																		"address": {
																			"description": "The address to which the withdrawal is credited.",
																			"type": "string",
																			"format": "hex",
																			"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																			"pattern": "^0x[a-fA-F0-9]{40}$"
																		},
																		"amount": {
																			"description": "The value withdrawn (gwei).",
																			"type": "string",
																			"example": "1"
																		}
																	}
																},
																"maxItems": 16
															}
														}
													}
												]
											},
											"bls_to_execution_changes": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
															"properties": {
																"validator_index": {
																	"description": "Index of the validator for which credentials will be changed.",
																	"type": "string",
																	"example": "1"
																},
																"from_bls_pubkey": {
																	"description": "Public key of existing credentials.",
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"to_execution_address": {
																	"description": "Execution address to which the credentials will be changed.",
																	"type": "string",
																	"format": "hex",
																	"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																	"pattern": "^0x[a-fA-F0-9]{40}$"
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											}
										}
									}
								]
							}
						}
					}
				]
			},
			"Capella.SignedBeaconBlock": {
				"type": "object",
				"description": "The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Capella spec.",
				"properties": {
					"message": {
						"description": "The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body": {
										"allOf": [
											{
												"type": "object",
												"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
												"properties": {
													"randao_reveal": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "The RanDAO reveal value provided by the validator."
															}
														]
													},
													"eth1_data": {
														"type": "object",
														"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
														"properties": {
															"deposit_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Root of the deposit tree."
																	}
																]
															},
															"deposit_count": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Total number of deposits."
																	}
																]
															},
															"block_hash": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Ethereum 1.x block hash."
																	}
																]
															}
														}
													},
													"graffiti": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"proposer_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
															"properties": {
																"signed_header_1": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																},
																"signed_header_2": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																}
															}
														}
													},
													"attester_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
															"properties": {
																"attestation_1": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																},
																"attestation_2": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"attestations": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
															"properties": {
																"aggregation_bits": {
																	"description": "Attester aggregation bits.",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "BLS aggregate signature."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"deposits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
															"properties": {
																"proof": {
																	"type": "array",
																	"description": "Branch in the deposit tree.",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		]
																	},
																	"minItems": 32,
																	"maxItems": 32
																},
																"data": {
																	"type": "object",
																	"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																	"properties": {
																		"pubkey": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{96}$",
																			"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																			"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																		},
																		"withdrawal_credentials": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The withdrawal credentials."
																				}
																			]
																		},
																		"amount": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Amount in Gwei."
																				}
																			]
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "Container self-signature."
																				}
																			]
																		}
																	}
																}
															}
														}
													},
													"voluntary_exits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
															"properties": {
																"message": {
																	"type": "object",
																	"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																	"properties": {
																		"epoch": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Minimum epoch for processing exit."
																				}
																			]
																		},
																		"validator_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of the exiting validator."
																				}
																			]
																		}
																	}
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													},
													"sync_aggregate": {
														"type": "object",
														"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
														"properties": {
															"sync_committee_bits": {
																"description": "Aggregation bits of sync",
																"type": "string",
																"format": "hex",
																"example": "0x01",
																"pattern": "^0x[a-fA-F0-9]+$"
															},
															"sync_committee_signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"execution_payload": {
														"allOf": [
															{
																"type": "object",
																"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																"properties": {
																	"parent_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"fee_recipient": {
																		"type": "string",
																		"format": "hex",
																		"description": "An address on the execution (Ethereum 1) network.",
																		"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																		"pattern": "^0x[a-fA-F0-9]{40}$"
																	},
																	"state_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"receipts_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"logs_bloom": {
																		"type": "string",
																		"format": "hex",
																		"example": "0x
																		"pattern": "^0x[a-fA-F0-9]{512}$"
																	},
																	"prev_randao": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"block_number": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_limit": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_used": {
																		"type": "string",
																		"example": "1"
																	},
																	"timestamp": {
																		"type": "string",
																		"example": "1"
																	},
																	"extra_data": {
																		"type": "string",
																		"format": "hex",
																		"description": "Extra data on the execution (Ethereum 1) network.",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{0,64}$"
																	},
																	"base_fee_per_gas": {
																		"type": "string",
																		"example": "1"
																	},
																	"block_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															},
															{
																"type": "object",
																"properties": {
																	"transactions": {
																		"type": "array",
																		"items": {
																			"type": "string",
																			"format": "hex",
																			"description": "A transaction on the execution (Ethereum 1) network.",
																			"example": "0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86",
																			"pattern": "^0x[a-fA-F0-9]{0,2147483648}$"
																		},
																		"maxItems": 1048576
																	},
																	"withdrawals": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"properties": {
																				"index": {
																					"description": "The index of the withdrawal.",
																					"type": "string",
																					"example": "1"
																				},
																				"validator_index": {
																					"description": "The index of the withdrawing validator.",
																					"type": "string",
																					"example": "1"
																				},
																				"address": {
																					"description": "The address to which the withdrawal is credited.",
																					"type": "string",
																					"format": "hex",
																					"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																					"pattern": "^0x[a-fA-F0-9]{40}$"
																				},
																				"amount": {
																					"description": "The value withdrawn (gwei).",
																					"type": "string",
																					"example": "1"
																				}
																			}
																		},
																		"maxItems": 16
																	}
																}
															}
														]
													},
													"bls_to_execution_changes": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
															"properties": {
																"message": {
																	"type": "object",
																	"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																	"properties": {
																		"validator_index": {
																			"description": "Index of the validator for which credentials will be changed.",
																			"type": "string",
																			"example": "1"
																		},
																		"from_bls_pubkey": {
																			"description": "Public key of existing credentials.",
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{96}$",
																			"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																		},
																		"to_execution_address": {
																			"description": "Execution address to which the credentials will be changed.",
																			"type": "string",
																			"format": "hex",
																			"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																			"pattern": "^0x[a-fA-F0-9]{40}$"
																		}
																	}
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											}
										]
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Capella.BlindedBeaconBlock": {
				"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
				"allOf": [
					{
						"type": "object",
						"properties": {
							"slot": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "The slot to which this block corresponds."
									}
								]
							},
							"proposer_index": {
								"allOf": [
									{
										"type": "string",
										"example": "1"
									},
									{
										"description": "Index of validator in validator registry."
									}
								]
							},
							"parent_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The signing merkle root of the parent `BeaconBlock`."
									}
								]
							},
							"state_root": {
								"allOf": [
									{
										"type": "string",
										"format": "hex",
										"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
										"pattern": "^0x[a-fA-F0-9]{64}$"
									},
									{
										"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
									}
								]
							}
						}
					},
					{
						"type": "object",
						"properties": {
							"body": {
								"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec, which contains a transactions root rather than a full transactions list.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
										"properties": {
											"randao_reveal": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													},
													{
														"description": "The RanDAO reveal value provided by the validator."
													}
												]
											},
											"eth1_data": {
												"type": "object",
												"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
												"properties": {
													"deposit_root": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Root of the deposit tree."
															}
														]
													},
													"deposit_count": {
														"allOf": [
															{
																"type": "string",
																"example": "1"
															},
															{
																"description": "Total number of deposits."
															}
														]
													},
													"block_hash": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															{
																"description": "Ethereum 1.x block hash."
															}
														]
													}
												}
											},
											"graffiti": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"proposer_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
													"properties": {
														"signed_header_1": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														},
														"signed_header_2": {
															"type": "object",
															"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
															"properties": {
																"message": {
																	"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																	"allOf": [
																		{
																			"type": "object",
																			"properties": {
																				"slot": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "The slot to which this block corresponds."
																						}
																					]
																				},
																				"proposer_index": {
																					"allOf": [
																						{
																							"type": "string",
																							"example": "1"
																						},
																						{
																							"description": "Index of validator in validator registry."
																						}
																					]
																				},
																				"parent_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The signing merkle root of the parent `BeaconBlock`."
																						}
																					]
																				},
																				"state_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																						}
																					]
																				}
																			}
																		},
																		{
																			"type": "object",
																			"properties": {
																				"body_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																						}
																					]
																				}
																			}
																		}
																	]
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											},
											"attester_slashings": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
													"properties": {
														"attestation_1": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														},
														"attestation_2": {
															"type": "object",
															"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
															"properties": {
																"attesting_indices": {
																	"type": "array",
																	"maxItems": 2048,
																	"description": "Attesting validator indices",
																	"items": {
																		"type": "string",
																		"example": "1"
																	}
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											},
											"attestations": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
													"properties": {
														"aggregation_bits": {
															"description": "Attester aggregation bits.",
															"type": "string",
															"format": "hex",
															"example": "0x01",
															"pattern": "^0x[a-fA-F0-9]+$"
														},
														"signature": {
															"allOf": [
																{
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																},
																{
																	"description": "BLS aggregate signature."
																}
															]
														},
														"data": {
															"type": "object",
															"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
															"properties": {
																"slot": {
																	"type": "string",
																	"example": "1"
																},
																"index": {
																	"type": "string",
																	"example": "1"
																},
																"beacon_block_root": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "LMD GHOST vote."
																		}
																	]
																},
																"source": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																},
																"target": {
																	"type": "object",
																	"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																	"properties": {
																		"epoch": {
																			"type": "string",
																			"example": "1"
																		},
																		"root": {
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"deposits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
													"properties": {
														"proof": {
															"type": "array",
															"description": "Branch in the deposit tree.",
															"items": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																]
															},
															"minItems": 32,
															"maxItems": 32
														},
														"data": {
															"type": "object",
															"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
															"properties": {
																"pubkey": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"withdrawal_credentials": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																			"pattern": "^0x[a-fA-F0-9]{64}$"
																		},
																		{
																			"description": "The withdrawal credentials."
																		}
																	]
																},
																"amount": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Amount in Gwei."
																		}
																	]
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "Container self-signature."
																		}
																	]
																}
															}
														}
													}
												}
											},
											"voluntary_exits": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
															"properties": {
																"epoch": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Minimum epoch for processing exit."
																		}
																	]
																},
																"validator_index": {
																	"allOf": [
																		{
																			"type": "string",
																			"example": "1"
																		},
																		{
																			"description": "Index of the exiting validator."
																		}
																	]
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											},
											"sync_aggregate": {
												"type": "object",
												"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
												"properties": {
													"sync_committee_bits": {
														"description": "Aggregation bits of sync",
														"type": "string",
														"format": "hex",
														"example": "0x01",
														"pattern": "^0x[a-fA-F0-9]+$"
													},
													"sync_committee_signature": {
														"type": "string",
														"format": "hex",
														"pattern": "^0x[a-fA-F0-9]{192}$",
														"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
													}
												}
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"execution_payload_header": {
												"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
												"allOf": [
													{
														"type": "object",
														"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
														"properties": {
															"parent_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"fee_recipient": {
																"type": "string",
																"format": "hex",
																"description": "An address on the execution (Ethereum 1) network.",
																"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																"pattern": "^0x[a-fA-F0-9]{40}$"
															},
															"state_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"receipts_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"logs_bloom": {
																"type": "string",
																"format": "hex",
																"example": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
																"pattern": "^0x[a-fA-F0-9]{512}$"
															},
															"prev_randao": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"block_number": {
																"type": "string",
																"example": "1"
															},
															"gas_limit": {
																"type": "string",
																"example": "1"
															},
															"gas_used": {
																"type": "string",
																"example": "1"
															},
															"timestamp": {
																"type": "string",
																"example": "1"
															},
															"extra_data": {
																"type": "string",
																"format": "hex",
																"description": "Extra data on the execution (Ethereum 1) network.",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{0,64}$"
															},
															"base_fee_per_gas": {
																"type": "string",
																"example": "1"
															},
															"block_hash": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													},
													{
														"type": "object",
														"properties": {
															"transactions_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															},
															"withdrawals_root": {
																"type": "string",
																"format": "hex",
																"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																"pattern": "^0x[a-fA-F0-9]{64}$"
															}
														}
													}
												]
											},
											"bls_to_execution_changes": {
												"type": "array",
												"items": {
													"type": "object",
													"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
													"properties": {
														"message": {
															"type": "object",
															"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
															"properties": {
																"validator_index": {
																	"description": "Index of the validator for which credentials will be changed.",
																	"type": "string",
																	"example": "1"
																},
																"from_bls_pubkey": {
																	"description": "Public key of existing credentials.",
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{96}$",
																	"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																},
																"to_execution_address": {
																	"description": "Execution address to which the credentials will be changed.",
																	"type": "string",
																	"format": "hex",
																	"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																	"pattern": "^0x[a-fA-F0-9]{40}$"
																}
															}
														},
														"signature": {
															"type": "string",
															"format": "hex",
															"pattern": "^0x[a-fA-F0-9]{192}$",
															"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
														}
													}
												}
											}
										}
									}
								]
							}
						}
					}
				]
			},
			"Capella.SignedBlindedBeaconBlock": {
				"type": "object",
				"description": "A variant of the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL Capella spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.",
				"properties": {
					"message": {
						"description": "A variant of the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblock) object from the CL Capella spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.",
						"allOf": [
							{
								"type": "object",
								"properties": {
									"slot": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "The slot to which this block corresponds."
											}
										]
									},
									"proposer_index": {
										"allOf": [
											{
												"type": "string",
												"example": "1"
											},
											{
												"description": "Index of validator in validator registry."
											}
										]
									},
									"parent_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The signing merkle root of the parent `BeaconBlock`."
											}
										]
									},
									"state_root": {
										"allOf": [
											{
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											{
												"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
											}
										]
									}
								}
							},
							{
								"type": "object",
								"properties": {
									"body": {
										"description": "A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec, which contains a transactions root rather than a full transactions list.",
										"allOf": [
											{
												"type": "object",
												"description": "The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#beaconblockbody) object from the CL Capella spec.",
												"properties": {
													"randao_reveal": {
														"allOf": [
															{
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															},
															{
																"description": "The RanDAO reveal value provided by the validator."
															}
														]
													},
													"eth1_data": {
														"type": "object",
														"description": "The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.",
														"properties": {
															"deposit_root": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Root of the deposit tree."
																	}
																]
															},
															"deposit_count": {
																"allOf": [
																	{
																		"type": "string",
																		"example": "1"
																	},
																	{
																		"description": "Total number of deposits."
																	}
																]
															},
															"block_hash": {
																"allOf": [
																	{
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	{
																		"description": "Ethereum 1.x block hash."
																	}
																]
															}
														}
													},
													"graffiti": {
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													"proposer_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.",
															"properties": {
																"signed_header_1": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																},
																"signed_header_2": {
																	"type": "object",
																	"description": "The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.",
																	"properties": {
																		"message": {
																			"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
																			"allOf": [
																				{
																					"type": "object",
																					"properties": {
																						"slot": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "The slot to which this block corresponds."
																								}
																							]
																						},
																						"proposer_index": {
																							"allOf": [
																								{
																									"type": "string",
																									"example": "1"
																								},
																								{
																									"description": "Index of validator in validator registry."
																								}
																							]
																						},
																						"parent_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The signing merkle root of the parent `BeaconBlock`."
																								}
																							]
																						},
																						"state_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
																								}
																							]
																						}
																					}
																				},
																				{
																					"type": "object",
																					"properties": {
																						"body_root": {
																							"allOf": [
																								{
																									"type": "string",
																									"format": "hex",
																									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																									"pattern": "^0x[a-fA-F0-9]{64}$"
																								},
																								{
																									"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
																								}
																							]
																						}
																					}
																				}
																			]
																		},
																		"signature": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		}
																	}
																}
															}
														}
													},
													"attester_slashings": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attesterslashing) object from the CL spec.",
															"properties": {
																"attestation_1": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																},
																"attestation_2": {
																	"type": "object",
																	"description": "The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.",
																	"properties": {
																		"attesting_indices": {
																			"type": "array",
																			"maxItems": 2048,
																			"description": "Attesting validator indices",
																			"items": {
																				"type": "string",
																				"example": "1"
																			}
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."
																				}
																			]
																		},
																		"data": {
																			"type": "object",
																			"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																			"properties": {
																				"slot": {
																					"type": "string",
																					"example": "1"
																				},
																				"index": {
																					"type": "string",
																					"example": "1"
																				},
																				"beacon_block_root": {
																					"allOf": [
																						{
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						},
																						{
																							"description": "LMD GHOST vote."
																						}
																					]
																				},
																				"source": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				},
																				"target": {
																					"type": "object",
																					"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																					"properties": {
																						"epoch": {
																							"type": "string",
																							"example": "1"
																						},
																						"root": {
																							"type": "string",
																							"format": "hex",
																							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																							"pattern": "^0x[a-fA-F0-9]{64}$"
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"attestations": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestation) object from the CL spec.",
															"properties": {
																"aggregation_bits": {
																	"description": "Attester aggregation bits.",
																	"type": "string",
																	"format": "hex",
																	"example": "0x01",
																	"pattern": "^0x[a-fA-F0-9]+$"
																},
																"signature": {
																	"allOf": [
																		{
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{192}$",
																			"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																		},
																		{
																			"description": "BLS aggregate signature."
																		}
																	]
																},
																"data": {
																	"type": "object",
																	"description": "The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.",
																	"properties": {
																		"slot": {
																			"type": "string",
																			"example": "1"
																		},
																		"index": {
																			"type": "string",
																			"example": "1"
																		},
																		"beacon_block_root": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "LMD GHOST vote."
																				}
																			]
																		},
																		"source": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		},
																		"target": {
																			"type": "object",
																			"description": "The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#checkpoint",
																			"properties": {
																				"epoch": {
																					"type": "string",
																					"example": "1"
																				},
																				"root": {
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				}
																			}
																		}
																	}
																}
															}
														}
													},
													"deposits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#deposit) object from the CL spec.",
															"properties": {
																"proof": {
																	"type": "array",
																	"description": "Branch in the deposit tree.",
																	"items": {
																		"allOf": [
																			{
																				"type": "string",
																				"format": "hex",
																				"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																				"pattern": "^0x[a-fA-F0-9]{64}$"
																			}
																		]
																	},
																	"minItems": 32,
																	"maxItems": 32
																},
																"data": {
																	"type": "object",
																	"description": "The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.",
																	"properties": {
																		"pubkey": {
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{96}$",
																			"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
																			"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																		},
																		"withdrawal_credentials": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																					"pattern": "^0x[a-fA-F0-9]{64}$"
																				},
																				{
																					"description": "The withdrawal credentials."
																				}
																			]
																		},
																		"amount": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Amount in Gwei."
																				}
																			]
																		},
																		"signature": {
																			"allOf": [
																				{
																					"type": "string",
																					"format": "hex",
																					"pattern": "^0x[a-fA-F0-9]{192}$",
																					"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																				},
																				{
																					"description": "Container self-signature."
																				}
																			]
																		}
																	}
																}
															}
														}
													},
													"voluntary_exits": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.",
															"properties": {
																"message": {
																	"type": "object",
																	"description": "The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.",
																	"properties": {
																		"epoch": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Minimum epoch for processing exit."
																				}
																			]
																		},
																		"validator_index": {
																			"allOf": [
																				{
																					"type": "string",
																					"example": "1"
																				},
																				{
																					"description": "Index of the exiting validator."
																				}
																			]
																		}
																	}
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													},
													"sync_aggregate": {
														"type": "object",
														"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
														"properties": {
															"sync_committee_bits": {
																"description": "Aggregation bits of sync",
																"type": "string",
																"format": "hex",
																"example": "0x01",
																"pattern": "^0x[a-fA-F0-9]+$"
															},
															"sync_committee_signature": {
																"type": "string",
																"format": "hex",
																"pattern": "^0x[a-fA-F0-9]{192}$",
																"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
															}
														}
													}
												}
											},
											{
												"type": "object",
												"properties": {
													"execution_payload_header": {
														"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
														"allOf": [
															{
																"type": "object",
																"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
																"properties": {
																	"parent_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"fee_recipient": {
																		"type": "string",
																		"format": "hex",
																		"description": "An address on the execution (Ethereum 1) network.",
																		"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																		"pattern": "^0x[a-fA-F0-9]{40}$"
																	},
																	"state_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"receipts_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"logs_bloom": {
																		"type": "string",
																		"format": "hex",
																		"example": "0x
																		"pattern": "^0x[a-fA-F0-9]{512}$"
																	},
																	"prev_randao": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"block_number": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_limit": {
																		"type": "string",
																		"example": "1"
																	},
																	"gas_used": {
																		"type": "string",
																		"example": "1"
																	},
																	"timestamp": {
																		"type": "string",
																		"example": "1"
																	},
																	"extra_data": {
																		"type": "string",
																		"format": "hex",
																		"description": "Extra data on the execution (Ethereum 1) network.",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{0,64}$"
																	},
																	"base_fee_per_gas": {
																		"type": "string",
																		"example": "1"
																	},
																	"block_hash": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															},
															{
																"type": "object",
																"properties": {
																	"transactions_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	},
																	"withdrawals_root": {
																		"type": "string",
																		"format": "hex",
																		"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
																		"pattern": "^0x[a-fA-F0-9]{64}$"
																	}
																}
															}
														]
													},
													"bls_to_execution_changes": {
														"type": "array",
														"items": {
															"type": "object",
															"description": "The [`SignedBLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#signedblstoexecutionchange) object from the CL spec.",
															"properties": {
																"message": {
																	"type": "object",
																	"description": "The [`BLSToExecutionChange`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#blstoexecutionchange) object from the CL spec.",
																	"properties": {
																		"validator_index": {
																			"description": "Index of the validator for which credentials will be changed.",
																			"type": "string",
																			"example": "1"
																		},
																		"from_bls_pubkey": {
																			"description": "Public key of existing credentials.",
																			"type": "string",
																			"format": "hex",
																			"pattern": "^0x[a-fA-F0-9]{96}$",
																			"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
																		},
																		"to_execution_address": {
																			"description": "Execution address to which the credentials will be changed.",
																			"type": "string",
																			"format": "hex",
																			"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
																			"pattern": "^0x[a-fA-F0-9]{40}$"
																		}
																	}
																},
																"signature": {
																	"type": "string",
																	"format": "hex",
																	"pattern": "^0x[a-fA-F0-9]{192}$",
																	"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
																}
															}
														}
													}
												}
											}
										]
									}
								}
							}
						]
					},
					"signature": {
						"type": "string",
						"format": "hex",
						"pattern": "^0x[a-fA-F0-9]{192}$",
						"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
					}
				}
			},
			"Capella.LightClientBootstrap": {
				"type": "object",
				"properties": {
					"header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"execution": {
								"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
										"properties": {
											"parent_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"fee_recipient": {
												"type": "string",
												"format": "hex",
												"description": "An address on the execution (Ethereum 1) network.",
												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
												"pattern": "^0x[a-fA-F0-9]{40}$"
											},
											"state_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"receipts_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"logs_bloom": {
												"type": "string",
												"format": "hex",
												"example": "0x
												"pattern": "^0x[a-fA-F0-9]{512}$"
											},
											"prev_randao": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"block_number": {
												"type": "string",
												"example": "1"
											},
											"gas_limit": {
												"type": "string",
												"example": "1"
											},
											"gas_used": {
												"type": "string",
												"example": "1"
											},
											"timestamp": {
												"type": "string",
												"example": "1"
											},
											"extra_data": {
												"type": "string",
												"format": "hex",
												"description": "Extra data on the execution (Ethereum 1) network.",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{0,64}$"
											},
											"base_fee_per_gas": {
												"type": "string",
												"example": "1"
											},
											"block_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"transactions_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"withdrawals_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								]
							},
							"execution_branch": {
								"type": "array",
								"items": {
									"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								"minItems": 4,
								"maxItems": 4
							}
						}
					},
					"current_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"current_sync_committee_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(CURRENT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 5,
						"maxItems": 5
					}
				}
			},
			"Capella.LightClientUpdate": {
				"type": "object",
				"properties": {
					"attested_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"execution": {
								"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
										"properties": {
											"parent_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"fee_recipient": {
												"type": "string",
												"format": "hex",
												"description": "An address on the execution (Ethereum 1) network.",
												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
												"pattern": "^0x[a-fA-F0-9]{40}$"
											},
											"state_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"receipts_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"logs_bloom": {
												"type": "string",
												"format": "hex",
												"example": "0x
												"pattern": "^0x[a-fA-F0-9]{512}$"
											},
											"prev_randao": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"block_number": {
												"type": "string",
												"example": "1"
											},
											"gas_limit": {
												"type": "string",
												"example": "1"
											},
											"gas_used": {
												"type": "string",
												"example": "1"
											},
											"timestamp": {
												"type": "string",
												"example": "1"
											},
											"extra_data": {
												"type": "string",
												"format": "hex",
												"description": "Extra data on the execution (Ethereum 1) network.",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{0,64}$"
											},
											"base_fee_per_gas": {
												"type": "string",
												"example": "1"
											},
											"block_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"transactions_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"withdrawals_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								]
							},
							"execution_branch": {
								"type": "array",
								"items": {
									"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								"minItems": 4,
								"maxItems": 4
							}
						}
					},
					"next_sync_committee": {
						"type": "object",
						"properties": {
							"pubkeys": {
								"type": "array",
								"items": {
									"allOf": [
										{
											"type": "string",
											"format": "hex",
											"pattern": "^0x[a-fA-F0-9]{96}$",
											"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
											"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
										}
									]
								},
								"minItems": 512,
								"maxItems": 512
							},
							"aggregate_pubkey": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{96}$",
								"description": "The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._",
								"example": "0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"
							}
						}
					},
					"next_sync_committee_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(NEXT_SYNC_COMMITTEE_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 5,
						"maxItems": 5
					},
					"finalized_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"execution": {
								"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
										"properties": {
											"parent_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"fee_recipient": {
												"type": "string",
												"format": "hex",
												"description": "An address on the execution (Ethereum 1) network.",
												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
												"pattern": "^0x[a-fA-F0-9]{40}$"
											},
											"state_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"receipts_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"logs_bloom": {
												"type": "string",
												"format": "hex",
												"example": "0x
												"pattern": "^0x[a-fA-F0-9]{512}$"
											},
											"prev_randao": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"block_number": {
												"type": "string",
												"example": "1"
											},
											"gas_limit": {
												"type": "string",
												"example": "1"
											},
											"gas_used": {
												"type": "string",
												"example": "1"
											},
											"timestamp": {
												"type": "string",
												"example": "1"
											},
											"extra_data": {
												"type": "string",
												"format": "hex",
												"description": "Extra data on the execution (Ethereum 1) network.",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{0,64}$"
											},
											"base_fee_per_gas": {
												"type": "string",
												"example": "1"
											},
											"block_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"transactions_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"withdrawals_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								]
							},
							"execution_branch": {
								"type": "array",
								"items": {
									"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								"minItems": 4,
								"maxItems": 4
							}
						}
					},
					"finality_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 6,
						"maxItems": 6
					},
					"sync_aggregate": {
						"type": "object",
						"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
						"properties": {
							"sync_committee_bits": {
								"description": "Aggregation bits of sync",
								"type": "string",
								"format": "hex",
								"example": "0x01",
								"pattern": "^0x[a-fA-F0-9]+$"
							},
							"sync_committee_signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signature_slot": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Capella.LightClientFinalityUpdate": {
				"type": "object",
				"properties": {
					"attested_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"execution": {
								"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
										"properties": {
											"parent_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"fee_recipient": {
												"type": "string",
												"format": "hex",
												"description": "An address on the execution (Ethereum 1) network.",
												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
												"pattern": "^0x[a-fA-F0-9]{40}$"
											},
											"state_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"receipts_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"logs_bloom": {
												"type": "string",
												"format": "hex",
												"example": "0x
												"pattern": "^0x[a-fA-F0-9]{512}$"
											},
											"prev_randao": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"block_number": {
												"type": "string",
												"example": "1"
											},
											"gas_limit": {
												"type": "string",
												"example": "1"
											},
											"gas_used": {
												"type": "string",
												"example": "1"
											},
											"timestamp": {
												"type": "string",
												"example": "1"
											},
											"extra_data": {
												"type": "string",
												"format": "hex",
												"description": "Extra data on the execution (Ethereum 1) network.",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{0,64}$"
											},
											"base_fee_per_gas": {
												"type": "string",
												"example": "1"
											},
											"block_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"transactions_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"withdrawals_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								]
							},
							"execution_branch": {
								"type": "array",
								"items": {
									"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								"minItems": 4,
								"maxItems": 4
							}
						}
					},
					"finalized_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"execution": {
								"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
										"properties": {
											"parent_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"fee_recipient": {
												"type": "string",
												"format": "hex",
												"description": "An address on the execution (Ethereum 1) network.",
												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
												"pattern": "^0x[a-fA-F0-9]{40}$"
											},
											"state_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"receipts_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"logs_bloom": {
												"type": "string",
												"format": "hex",
												"example": "0x
												"pattern": "^0x[a-fA-F0-9]{512}$"
											},
											"prev_randao": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"block_number": {
												"type": "string",
												"example": "1"
											},
											"gas_limit": {
												"type": "string",
												"example": "1"
											},
											"gas_used": {
												"type": "string",
												"example": "1"
											},
											"timestamp": {
												"type": "string",
												"example": "1"
											},
											"extra_data": {
												"type": "string",
												"format": "hex",
												"description": "Extra data on the execution (Ethereum 1) network.",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{0,64}$"
											},
											"base_fee_per_gas": {
												"type": "string",
												"example": "1"
											},
											"block_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"transactions_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"withdrawals_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								]
							},
							"execution_branch": {
								"type": "array",
								"items": {
									"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								"minItems": 4,
								"maxItems": 4
							}
						}
					},
					"finality_branch": {
						"type": "array",
						"items": {
							"description": "Merkle proof consisting of [`log2trunc(FINALIZED_ROOT_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/light-client/sync-protocol.md#constants) roots",
							"type": "string",
							"format": "hex",
							"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
							"pattern": "^0x[a-fA-F0-9]{64}$"
						},
						"minItems": 6,
						"maxItems": 6
					},
					"sync_aggregate": {
						"type": "object",
						"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
						"properties": {
							"sync_committee_bits": {
								"description": "Aggregation bits of sync",
								"type": "string",
								"format": "hex",
								"example": "0x01",
								"pattern": "^0x[a-fA-F0-9]+$"
							},
							"sync_committee_signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signature_slot": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Capella.LightClientOptimisticUpdate": {
				"type": "object",
				"properties": {
					"attested_header": {
						"type": "object",
						"properties": {
							"beacon": {
								"description": "The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.",
								"allOf": [
									{
										"type": "object",
										"properties": {
											"slot": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "The slot to which this block corresponds."
													}
												]
											},
											"proposer_index": {
												"allOf": [
													{
														"type": "string",
														"example": "1"
													},
													{
														"description": "Index of validator in validator registry."
													}
												]
											},
											"parent_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The signing merkle root of the parent `BeaconBlock`."
													}
												]
											},
											"state_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."
													}
												]
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"body_root": {
												"allOf": [
													{
														"type": "string",
														"format": "hex",
														"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
														"pattern": "^0x[a-fA-F0-9]{64}$"
													},
													{
														"description": "The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"
													}
												]
											}
										}
									}
								]
							},
							"execution": {
								"description": "The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayloadheader) object from the CL Capella spec.",
								"allOf": [
									{
										"type": "object",
										"description": "The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/beacon-chain.md#executionpayload) object from the CL Capella spec.",
										"properties": {
											"parent_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"fee_recipient": {
												"type": "string",
												"format": "hex",
												"description": "An address on the execution (Ethereum 1) network.",
												"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
												"pattern": "^0x[a-fA-F0-9]{40}$"
											},
											"state_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"receipts_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"logs_bloom": {
												"type": "string",
												"format": "hex",
												"example": "0x
												"pattern": "^0x[a-fA-F0-9]{512}$"
											},
											"prev_randao": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"block_number": {
												"type": "string",
												"example": "1"
											},
											"gas_limit": {
												"type": "string",
												"example": "1"
											},
											"gas_used": {
												"type": "string",
												"example": "1"
											},
											"timestamp": {
												"type": "string",
												"example": "1"
											},
											"extra_data": {
												"type": "string",
												"format": "hex",
												"description": "Extra data on the execution (Ethereum 1) network.",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{0,64}$"
											},
											"base_fee_per_gas": {
												"type": "string",
												"example": "1"
											},
											"block_hash": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									},
									{
										"type": "object",
										"properties": {
											"transactions_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											},
											"withdrawals_root": {
												"type": "string",
												"format": "hex",
												"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
												"pattern": "^0x[a-fA-F0-9]{64}$"
											}
										}
									}
								]
							},
							"execution_branch": {
								"type": "array",
								"items": {
									"description": "Merkle proof consisting of [`log2trunc(EXECUTION_PAYLOAD_INDEX])`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/capella/light-client/sync-protocol.md#constants) roots",
									"type": "string",
									"format": "hex",
									"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
									"pattern": "^0x[a-fA-F0-9]{64}$"
								},
								"minItems": 4,
								"maxItems": 4
							}
						}
					},
					"sync_aggregate": {
						"type": "object",
						"description": "The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.3.0/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.",
						"properties": {
							"sync_committee_bits": {
								"description": "Aggregation bits of sync",
								"type": "string",
								"format": "hex",
								"example": "0x01",
								"pattern": "^0x[a-fA-F0-9]+$"
							},
							"sync_committee_signature": {
								"type": "string",
								"format": "hex",
								"pattern": "^0x[a-fA-F0-9]{192}$",
								"example": "0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"
							}
						}
					},
					"signature_slot": {
						"type": "string",
						"example": "1"
					}
				}
			},
			"Capella.Withdrawal": {
				"type": "object",
				"properties": {
					"index": {
						"description": "The index of the withdrawal.",
						"type": "string",
						"example": "1"
					},
					"validator_index": {
						"description": "The index of the withdrawing validator.",
						"type": "string",
						"example": "1"
					},
					"address": {
						"description": "The address to which the withdrawal is credited.",
						"type": "string",
						"format": "hex",
						"example": "0xabcf8e0d4e9587369b2301d0790347320302cc09",
						"pattern": "^0x[a-fA-F0-9]{40}$"
					},
					"amount": {
						"description": "The value withdrawn (gwei).",
						"type": "string",
						"example": "1"
					}
				}
			},
			"Node": {
				"type": "object",
				"description": "fork choice node attributes",
				"properties": {
					"slot": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"description": "The slot to which this block corresponds."
							}
						]
					},
					"block_root": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							},
							{
								"description": "The signing merkle root of the `BeaconBlock`."
							}
						]
					},
					"parent_root": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							},
							{
								"description": "The signing merkle root of the parent `BeaconBlock`."
							}
						]
					},
					"justified_epoch": {
						"type": "string",
						"example": "1"
					},
					"finalized_epoch": {
						"type": "string",
						"example": "1"
					},
					"weight": {
						"type": "string",
						"example": "1"
					},
					"validity": {
						"type": "string",
						"enum": ["valid", "invalid", "optimistic"]
					},
					"execution_block_hash": {
						"allOf": [
							{
								"type": "string",
								"format": "hex",
								"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
								"pattern": "^0x[a-fA-F0-9]{64}$"
							},
							{
								"description": "The `block_hash` from the `execution_payload` of the `BeaconBlock`"
							}
						]
					},
					"extra_data": {
						"type": "object",
						"description": "Optional extra data that clients may provide, which could differ from client to client."
					}
				}
			},
			"ExtraData": {
				"type": "object",
				"description": "Optional extra data that clients may provide, which could differ from client to client."
			},
			"SyncCommitteeRewards": {
				"description": "Rewards info for sync committee members",
				"type": "array",
				"items": {
					"type": "object",
					"description": "Rewards info for a single sync committee member",
					"required": ["validator_index", "reward"],
					"properties": {
						"validator_index": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": 0
								},
								{
									"description": "one entry for every validator participating in the sync committee"
								}
							]
						},
						"reward": {
							"allOf": [
								{
									"type": "string",
									"example": "1"
								},
								{
									"example": 2000
								},
								{
									"description": "sync committee reward in gwei for the validator"
								}
							]
						}
					}
				}
			},
			"BlockRewards": {
				"type": "object",
				"description": "Rewards info for a single block",
				"properties": {
					"proposer_index": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"example": 123
							},
							{
								"description": "proposer of the block, the proposer index who receives these rewards"
							}
						]
					},
					"total": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"example": 123
							},
							{
								"description": "total block reward in gwei, equal to attestations + sync_aggregate + proposer_slashings + attester_slashings"
							}
						]
					},
					"attestations": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"example": 123
							},
							{
								"description": "block reward component due to included attestations in gwei"
							}
						]
					},
					"sync_aggregate": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"example": 123
							},
							{
								"description": "block reward component due to included sync_aggregate in gwei"
							}
						]
					},
					"proposer_slashings": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"example": 123
							},
							{
								"description": "block reward component due to included proposer_slashings in gwei"
							}
						]
					},
					"attester_slashings": {
						"allOf": [
							{
								"type": "string",
								"example": "1"
							},
							{
								"example": 123
							},
							{
								"description": "block reward component due to included attester_slashings in gwei"
							}
						]
					}
				}
			},
			"AttestationsRewards": {
				"type": "object",
				"description": "Rewards info for attestations",
				"required": ["ideal_rewards", "total_rewards"],
				"properties": {
					"ideal_rewards": {
						"type": "array",
						"items": {
							"type": "object",
							"description": "Ideal rewards info for a single attestation",
							"required": ["effective_balance", "head", "target", "source"],
							"properties": {
								"effective_balance": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 1000000000
										},
										{
											"description": "validator's effective balance in gwei"
										}
									]
								},
								"head": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 2500
										},
										{
											"description": "Ideal attester's reward for head vote in gwei"
										}
									]
								},
								"target": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 5000
										},
										{
											"description": "Ideal attester's reward for target vote in gwei"
										}
									]
								},
								"source": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 5000
										},
										{
											"description": "Ideal attester's reward for source vote in gwei"
										}
									]
								}
							}
						}
					},
					"total_rewards": {
						"type": "array",
						"items": {
							"type": "object",
							"description": "Rewards info for a single attestation",
							"required": ["validator_index", "head", "target", "source"],
							"properties": {
								"validator_index": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 0
										},
										{
											"description": "one entry for every validator based on their attestations in the epoch"
										}
									]
								},
								"head": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 2000
										},
										{
											"description": "attester's reward for head vote in gwei"
										}
									]
								},
								"target": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 2000
										},
										{
											"description": "attester's reward for target vote in gwei"
										}
									]
								},
								"source": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 4000
										},
										{
											"description": "attester's reward for source vote in gwei"
										}
									]
								},
								"inclusion_delay": {
									"allOf": [
										{
											"type": "string",
											"example": "1"
										},
										{
											"example": 2000
										},
										{
											"description": "attester's inclusion_delay reward in gwei (phase0 only)"
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"parameters": {
			"StateId": {
				"required": true,
				"name": "state_id",
				"in": "path",
				"example": "head",
				"schema": {
					"type": "string"
				},
				"description": "State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"
			},
			"slot": {
				"required": true,
				"name": "block_id",
				"in": "path",
				"example": "head",
				"schema": {
					"type": "string"
				},
				"description": "Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"
			},
			"BlockRoot": {
				"required": true,
				"name": "block_root",
				"in": "path",
				"schema": {
					"type": "string",
					"format": "hex",
					"example": "0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2",
					"pattern": "^0x[a-fA-F0-9]{64}$"
				},
				"description": "Block root.\n\\<hex encoded blockRoot with 0x prefix\\>.\n"
			}
		},
		"responses": {
			"InvalidRequest": {
				"description": "Invalid request syntax.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"description": "Either specific error code in case of invalid request or http status code",
									"type": "number",
									"example": 400
								},
								"message": {
									"description": "Message describing error",
									"type": "string"
								},
								"stacktraces": {
									"description": "Optional stacktraces, sent when node is in debug mode",
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"NotFound": {
				"description": "Not found",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"description": "Either specific error code in case of invalid request or http status code",
									"type": "number",
									"example": 404
								},
								"message": {
									"description": "Message describing error",
									"type": "string"
								},
								"stacktraces": {
									"description": "Optional stacktraces, sent when node is in debug mode",
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"example": {
							"code": 404,
							"message": "Requested item not found"
						}
					}
				}
			},
			"UnsupportedMediaType": {
				"description": "The supplied content-type is not supported.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"description": "The media type supplied is unsupported, and the request has been rejected. This occurs when a HTTP request supplies a payload in a content-type that the service is not able to accept.",
									"type": "number",
									"example": 415
								},
								"message": {
									"description": "Message describing error",
									"type": "string"
								},
								"stacktraces": {
									"description": "Optional stacktraces, sent when node is in debug mode",
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"example": {
							"code": 415,
							"message": "Cannot read the supplied content type."
						}
					}
				}
			},
			"InternalError": {
				"description": "Beacon node internal error.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"description": "Either specific error code in case of invalid request or http status code",
									"type": "number",
									"example": 404
								},
								"message": {
									"description": "Message describing error",
									"type": "string"
								},
								"stacktraces": {
									"description": "Optional stacktraces, sent when node is in debug mode",
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"example": {
							"code": 500,
							"message": "Internal server error"
						}
					}
				}
			},
			"NotImplementedError": {
				"description": "Endpoint not implemented.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"description": "Either specific error code in case of invalid request or http status code",
									"type": "number",
									"example": 501
								},
								"message": {
									"description": "Message describing error",
									"type": "string"
								},
								"stacktraces": {
									"description": "Optional stacktraces, sent when node is in debug mode",
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"example": {
							"code": 501,
							"message": "Endpoint not implemented"
						}
					}
				}
			},
			"CurrentlySyncing": {
				"description": "Beacon node is currently syncing, try again later.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"code": {
									"description": "Either specific error code in case of invalid request or http status code",
									"type": "number",
									"example": 404
								},
								"message": {
									"description": "Message describing error",
									"type": "string"
								},
								"stacktraces": {
									"description": "Optional stacktraces, sent when node is in debug mode",
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						},
						"example": {
							"code": 503,
							"message": "Beacon node is currently syncing and not serving request on that endpoint"
						}
					}
				}
			}
		},
		"headers": {
			"Eth-Consensus-Version": {
				"description": "Required in response so client can deserialize returned json or ssz data more effectively.",
				"required": true,
				"schema": {
					"enum": ["phase0", "altair", "bellatrix", "capella"],
					"example": "phase0"
				}
			}
		}
	}
}
